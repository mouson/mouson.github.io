<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[[Utility] 在 Chrome 把連結複製成 Markdown 格式]]></title>
      <url>https://usedfire.net/Notes/Utility/Utility-copy-hyperlink-as-markdown-format/</url>
      <content type="html"><![CDATA[<p>這篇筆記的重點不只推薦 <a href="https://chrome.google.com/webstore/detail/create-link/gcmghdmnkfdbncmnmlkkglmnnhagajbm" target="_blank" rel="external">Create Link</a> 這個 Chrome 的套件，也記錄怎麼樣設定，讓 Create Link 可以用快速鍵直接複製為 Markdown 格式的連結。</p>
<p>由於現在很習慣的使用 Markdown 格式做筆記，所以把想記錄的網址複製為 Markdown 格式是很正常的事情，因此「製作連結」這件事情，就變成了很常做的事情，原本需要自己輸入中括弧、小括弧，而後依據把顯示的名稱、連結貼上去，但做久了覺得麻煩，便開始尋找套件，於是找到了  <a href="https://chrome.google.com/webstore/detail/create-link/gcmghdmnkfdbncmnmlkkglmnnhagajbm" target="_blank" rel="external">Create Link</a> ，安裝完之後，在網頁上的右鍵，就可以有複製成 markdown 的選項了。</p>
<a id="more"></a>
<p><img src="14746148858927.jpg" alt=""></p>
<p>如下圖，安裝完之後，選擇右鍵即可出現 <code>Create Link</code> 選項，而內容中，即有 Plain text、HTML、markdown、mediaWiki 格式。選擇後，即可把 Chrome 該 Tab 的網址，複製為 markdown 格式。</p>
<p><img src="14746148495883.jpg" alt=""></p>
<p>很好用。已經節省了好幾個步驟。但，人是貪心的，當複製的東西越多，就會覺得，這功能還是不夠快速，如果可以在複製的時候，就直接變成 markdown 格式的話，似乎會更好。於是，我發現了這個功能。</p>
<p><img src="14746151151072.jpg" alt=""></p>
<p>在右上角 <code>Create Link</code> 的 icon 地方，選擇 <code>Configure...</code> 進入後，可以看到以下的畫面。發現一個 Default is currently 的選項。</p>
<p><img src="14746151939558.jpg" alt=""></p>
<p>預設是 (not selected)，這時候只要把它設定為 <code>markdown</code>，而後，在點選畫面中出現的 <code>Configure shortcut</code>，點選進入設定。</p>
<p><img src="14746153524118.jpg" alt=""></p>
<p>接著，找到「擴充功能和應用程式專用鍵盤快速鍵」，找到這個套件<code>Create Link</code>中，<code>Current tab in default format</code>這個選項，在這邊設定您想要的快速鍵，如我使用<code>Ctrl+C</code>，設定完，關閉畫面後，就可以完成使用某個快速鍵，選擇完畢後，即把該 Tab 複製為 Markdown 格式的連結了。</p>
<p><img src="14746154233318.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MAC OS X 大量移除不需要的 TimeMachine 備份]]></title>
      <url>https://usedfire.net/Notes/MAC/Remove-unnecessary-backups-from-TimeMachine/</url>
      <content type="html"><![CDATA[<p>這幾天在整理自己 NAS 的空間，發現 TimeMachine 佔掉硬碟裡許多的空間，甚至比我的 MacBook Air 本身 256G 的空間都還大上好幾倍，大概有個 1.x T的大小。進入細查之後才發現，原來從買了 MAC 之後，就沒有做過備份空間的清除，這就恐怖了。於是試著進入 TimeMachine 中刪除比較舊的備份。</p>
<p>進入 TimeMachine 之後，可以由右邊的時間軸點選你要選擇的時間點。</p>
<a id="more"></a>
<p><img src="14741135039721.png" alt="官方 Time Machine 備份"><br>(Image from : <a href="https://support.apple.com/en-us/HT201250" target="_blank" rel="external">Use Time Machine to back up or restore your Mac - Apple Support</a>)</p>
<p>選擇到要刪除的備份快照後，點選如下圖上方的齒輪，即可以看到刪除的樣式。</p>
<p><img src="14741137605729.jpg" alt=""></p>
<p>很明顯的，這個方案只適合只有幾個需要刪除的情況。於是找到 Apple Develop 手冊上的說法，關於 TimeMachine 有一個 <code>tmutil</code>  (Time Machine Utility) 的工具指令可以使用，<code>tmutil</code> 的功能非常多，舉凡建立新的快照、備份，甚至是進行兩個快照之間的差異比對他都可以。針對刪除不想要的 TimeMachine 備份則可以下以下指令。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo tmutil delete /full/path/to/backup/Backups.backupdb/machine/backup-name</div></pre></td></tr></table></figure>
<p>以我自己的 MacBook Air 的話，備份路徑就是：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/Volumes/Time Machine 備份/Backups.backupdb/mouson<span class="string">'s MacBook Air</span></div></pre></td></tr></table></figure>
<p>完整路徑可能就是：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/Volumes/Time Machine 備份/Backups.backupdb/mouson<span class="string">'s MacBook Air/2016-09-14-073950</span></div></pre></td></tr></table></figure>
<p>可以看到 Time Machine 備份方式每個快照都會以時間日期的方式建立資料夾內容。因此我們就可以透過指令刪除一系列的就備份。</p>
<p>例如我要刪除 2014 年 1 月的所有備份，就可以執行以下指令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo tmutil delete /full/path/to/backup/Backups.backupdb/machine/2014-01-*</div></pre></td></tr></table></figure>
<p>網路上也可以找到有人寫了簡易的批次檔，如這個部落格：<a href="http://thegreyblog.blogspot.tw/2014/03/shrink-your-time-machine-backups-and.html" target="_blank" rel="external">The Grey Blog: Shrink Your Time Machine Backups and Free Disk Space</a> 所提供的範例。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ sudo bash</div><div class="line">Password:</div><div class="line">$ <span class="keyword">for</span> i <span class="keyword">in</span> /Volumes/Time\ Machine\ Backups/Backups.backupdb/iMac/2014-01* ; \</div><div class="line">  <span class="keyword">do</span> \</div><div class="line">    tmutil delete <span class="string">"<span class="variable">$i</span>"</span> ; \</div><div class="line">  <span class="keyword">done</span></div></pre></td></tr></table></figure>
<p>清除之後，在下次 Time Machine 備份的時候，系統就會使用掉你刪除的空間。而如果需要馬上清除空間，也可以使用 MAC 提供的另外一個工具：<code>hdiutil</code> 詳細的用法可以參考官方手冊：<a href="https://developer.apple.com/legacy/library/documentation/Darwin/Reference/ManPages/man8/tmutil.8.html" target="_blank" rel="external">tmutil(8) Mac OS X Manual Page</a>，清除的方法如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo hdiutil compact /path/to/disk-image</div></pre></td></tr></table></figure>
<p>清除完畢之後，就可以獲得可用的空間了。我自己在執行 <code>tmutil delete</code> 時候發現，單獨刪除一個系統本身都還是需要重新計算一次變異，因此效率不是很好。刪除一個 1xG 的快照在無線網路的環境下刪了快半小時。所以，在使用 <code>tmutil</code> 做刪除時，如果時間不允許，砍掉重練或許也是一招。(這什麼結論呀！XD) </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MoClippings #11 站在嘴砲金字塔的頂點]]></title>
      <url>https://usedfire.net/Clippings/2016/MoClippings-11/</url>
      <content type="html"><![CDATA[<pre><code>發刊日 : 2016/09/01 - 2016/09/17
</code></pre><img src="/Clippings/2016/MoClippings-11/14730090466912.jpg" alt="[Hierarchy of disagreement]" title="[Hierarchy of disagreement]">
<h2 id=""><a href="#" class="headerlink" title=""></a><a id="more"></a></h2><h2 id="資訊知事"><a href="#資訊知事" class="headerlink" title="資訊知事"></a>資訊知事</h2><ul>
<li><img src="20160831015908-12e68ee59cd33ac04315ad261d39d3e7-desktop.gif" alt=""></li>
<li>國發會資料：<a href="http://www.ndc.gov.tw/Content_List.aspx?n=84223C65B6F94D72" target="_blank" rel="external">國家發展委員會-中華民國人口推估（105至150年）</a><ul>
<li><img src="taiwan_people_rate.gif" alt=""></li>
</ul>
</li>
<li><a href="http://statdb.dgbas.gov.tw/pxweb/dialog/statfile9.asp" target="_blank" rel="external">《中華民國統計資訊網》縣市重要統計指標查詢系統</a></li>
<li><a href="http://statdb.dgbas.gov.tw/pxweb/Dialog/varval.asp?ma=CS0201A1A&amp;ti=&amp;path=../database/CountyStatistics/&amp;lang=9" target="_blank" rel="external">表格: 【改制後】縣市人口概況重要統計指標</a></li>
<li><a href="http://www.ris.gov.tw/zh_TW/346" target="_blank" rel="external">中華民國 內政部戶政司 人口統計資料</a></li>
<li><p><img src="14731702828893.jpg" alt=""></p>
</li>
<li><p><a href="http://the-defamiliar.blogspot.tw/2014/08/Hierarchy-of-disagreement.html" target="_blank" rel="external">別格: 嘴砲金字塔</a></p>
<ul>
<li><img src="14730091149632.jpg" alt=""></li>
</ul>
</li>
<li><p><a href="https://wanqu.co/a/3931/2016-09-16-the-four-archetypes-costanoa-venture-capital-medium.html?s=email" target="_blank" rel="external">四種類型的技術型創業者 | 灣區日報</a> - 從一個風投的角度看技術型創業者的種類：首席產品官型、VP Engineering 型（側重管人）、CTO 型（側重技術廣度優先）、首席架構師型（側重技術深度優先），但現實中的技術型創業者的能力典型一般是混搭的，比如有可能是30% 的首席產品官型 + 30%的 VP Engineering 型 + 20% CTO 型 + 20% 首席架構師型。</p>
<ul>
<li><a href="https://medium.com/costanoa-venture-capital/what-investors-look-for-in-technical-founders-the-four-archetypes-7820a6a5eb65#.5p5gdxkvw" target="_blank" rel="external">https://medium.com/costanoa-venture-capital/what-investors-look-for-in-technical-founders-the-four-archetypes-7820a6a5eb65#.5p5gdxkvw</a></li>
</ul>
</li>
</ul>
<hr>
<h2 id="行銷推廣"><a href="#行銷推廣" class="headerlink" title="行銷推廣"></a>行銷推廣</h2><ul>
<li><p><a href="https://www.youtube.com/watch?v=lTLnFgKjtTA" target="_blank" rel="external">每個人都有權利去改變-《Mr.Bartender 》第三季-EP3預告 - YouTube</a> - 如果真的想要改變的話，就是要回到最基礎問題，用最基本的方法，開始新的模式呀。如果，一直用舊有的思維，在預期中打轉，那就不較改變了。</p>
<ul>
<li><img src="Screenshot%202016-09-09_00-41-07.png" alt="Screenshot 2016-09-09_00-41-07"></li>
</ul>
</li>
<li><p><a href="http://www.slideshare.net/ssuser9805a7/google-tag-managerweb-analytics101-63573918" target="_blank" rel="external">Google tag manager-web analytics101</a> - 黃道育 一位 Google Tag Manager Analytics 專家。</p>
</li>
<li><p><a href="http://zaodula.com/archives/21711.html" target="_blank" rel="external">数据分析真的能驱动用户快速增长么？-20160805早读课</a></p>
<ul>
<li><p>数据化运营的三板斧</p>
<ul>
<li>一、建立用户转化漏斗</li>
<li><p>二、用多维度数据报表找问题</p>
<ul>
<li><img src="14726878751676.png" alt=""></li>
</ul>
</li>
<li><p>三、用A/B测试指导产品演进</p>
</li>
</ul>
</li>
<li>数据运营解决不了的问题<ul>
<li>一、产品创新方向无法通过数据获得</li>
<li>二、长期用户反馈很难通过数据判断</li>
<li>三、博弈性的场景无法用数据决策</li>
</ul>
</li>
<li>用户快速增长到底靠什么<ul>
<li>一、做出真正优秀的产品</li>
<li>二、找到战略性推广渠道</li>
<li>三、利用病毒式传播手段</li>
<li>四、建立品牌的用户认知</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="專案管理"><a href="#專案管理" class="headerlink" title="專案管理"></a>專案管理</h2><ul>
<li><a href="https://softnshare.wordpress.com/2016/08/29/goodengineeringculture/" target="_blank" rel="external">是什麼造就了優良的軟體開發團隊文化？ | Soft &amp; Share</a><ol>
<li>最佳化重複步驟(iteration)的速度</li>
<li>毫不留情地推向自動化</li>
<li>建立正確的軟體抽象層</li>
<li>使用程式碼審查流程專注產出高品質代碼</li>
<li>維持一個彼此尊重的工作環境</li>
<li>建立程式碼共享所有權</li>
<li>投資於自動化測試</li>
<li>分配 20 ％的時間策略</li>
<li>建立一個持續學習和改善的文化</li>
<li>招聘最好的人</li>
</ol>
</li>
</ul>
<hr>
<h2 id="技術知事"><a href="#技術知事" class="headerlink" title="技術知事"></a>技術知事</h2><h3 id="開發心法"><a href="#開發心法" class="headerlink" title="開發心法"></a>開發心法</h3><ul>
<li><a href="https://ihower.tw/blog/archives/8489" target="_blank" rel="external">更快更安全: 每個網站都應該升級到 HTTP/2 | ihower { blogging }</a> - 在這邊文章中，提到了 HTTP/2 帶來的好處。</li>
<li><a href="https://www.gitbook.com/book/kejyuntw/high-scaling-websites-structure-learning-notes/details" target="_blank" rel="external">High Scaling Websites Structure Learning Notes 大型網站架構學習筆記 · GitBook</a> - 大型網站的架構筆記電子書</li>
<li><a href="http://local.joelonsoftware.com/wiki/%E9%A6%96%E9%A0%81" target="_blank" rel="external">《約耳談軟體(Joel on Software)》翻譯計畫 - The Joel on Software Translation Project</a> </li>
<li><a href="http://www.rowkey.me/blog/2016/08/27/server-basic-tech-stack/" target="_blank" rel="external">谈谈互联网后端基础设施 - 后端技术杂谈 | 飒然Hang</a> - 一篇需要花挺多時間閱讀的軟體架構文章。內容談到 API 使用、業務應用和後端基礎框架、緩存、數據庫、搜索引擎、消息隊列、文件儲存、統一認證中心 SSO、服務治理框架等等的知識。很值得花時間一讀。</li>
<li><a href="https://www.facebook.com/notes/chao-kung-liu/%E5%8F%97%E9%82%80%E7%9A%84tdd-workshop-coding-dojo/10206680335557577" target="_blank" rel="external">受邀的TDD Workshop - Coding Dojo</a> - 關於 TDD 觀念的好文</li>
<li><a href="http://www.ruanyifeng.com/blog/2016/09/software-architecture.html" target="_blank" rel="external">软件架构入门 - 阮一峰的网络日志</a><ul>
<li><a href="http://www.oreilly.com/programming/free/software-architecture-patterns.csp" target="_blank" rel="external">Software Architecture Patterns</a></li>
<li><a href="http://www.oreilly.com/programming/free/files/software-architecture-patterns.pdf" target="_blank" rel="external">PDF</a></li>
<li>架構分類：<ul>
<li>一、分層架構：例如 OSI七層</li>
<li>二、事件驱动架构 (event-driven)：例如</li>
<li>三、微核架構 (mircokernel)</li>
<li>四、微服務架構 (microservices)</li>
<li>五、雲架構 (Cloud)</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="測試工具"><a href="#測試工具" class="headerlink" title="測試工具"></a>測試工具</h3><h3 id="PHP-Library-or-工具"><a href="#PHP-Library-or-工具" class="headerlink" title="PHP Library or 工具"></a>PHP Library or 工具</h3><ul>
<li><a href="https://blog.pascal-martin.fr/post/php71-en-syntax-and-consistency.html" target="_blank" rel="external">PHP 7.1: better syntax, a more consistent language — Pascal MARTIN : Web &amp; PHP development</a> - PHP 7.1 將帶來的幾個特色說明</li>
<li><a href="https://github.com/charlietag/os_preparation" target="_blank" rel="external">charlietag/os_preparation: OS Preparation - Packages Pre Installation</a> - 快速在 CentOS 7 上建立 PHP-FPM, Nginx 等系統環境的工具。</li>
<li><a href="http://kin.today/" target="_blank" rel="external">Kin Calendar</a><ul>
<li>跟 google calendar 做結合讓行事曆有更好的使用者體驗</li>
</ul>
</li>
<li><p><a href="http://www.sortd.com/" target="_blank" rel="external">Sortd Smart Skin for Gmail</a> - 團隊使用 gmail 當做工作管理的好工具</p>
<ul>
<li>相關使用的影片：<a href="https://www.youtube.com/watch?v=Z23euDUQ4tI" target="_blank" rel="external">https://www.youtube.com/watch?v=Z23euDUQ4tI</a></li>
</ul>
</li>
<li><p><a href="http://swagger.io/" target="_blank" rel="external">Swagger – The World’s Most Popular Framework for APIs.</a> - 製作 API 手冊很推薦的工具</p>
</li>
<li><p><a href="https://github.com/so-fancy/diff-so-fancy?utm_campaign=CodeTengu&amp;utm_medium=web&amp;utm_source=CodeTengu_58" target="_blank" rel="external">so-fancy/diff-so-fancy: Good-lookin’ diffs. Actually… nah… The best-lookin’ diffs.</a> - git 比較工具</p>
</li>
<li><a href="https://github.com/Microsoft/msphpsql" target="_blank" rel="external">Microsoft/msphpsql: msphpsql</a> - 微軟官方直接提供給 Linux 使用的 SQL Server Driver 了。</li>
<li><p><a href="http://supervisord.org/" target="_blank" rel="external">Supervisor: A Process Control System — Supervisor 3.3.1 documentation</a> - 一個系統控制的工具</p>
</li>
<li><p><a href="https://minio.io/" target="_blank" rel="external">Minio</a> - Minio is an object storage server built for cloud application developers and devops. 一個協助存放檔案、照片、影片、影像檔的服務工具</p>
</li>
<li><p><a href="http://guitarbien.logdown.com/posts/737899" target="_blank" rel="external">Refactoring to Collections 讀後心得 « 技術相關筆記</a> - 關於 Refactoring to Collections 這本書的心得筆記，很推薦看完他。</p>
</li>
<li><p><a href="https://hiddentao.com/squel/" target="_blank" rel="external">Squel.js - SQL query string builder for Javascript</a> - 用來組 SQL 語法的 JavaScript library ，可以減少很多組合 SQL 字串時的錯誤。</p>
</li>
<li><a href="https://www.gitbook.com/book/kejyuntw/laravel-5-learning-notes/details" target="_blank" rel="external">Laravel 5 學習筆記 · GitBook</a></li>
<li><a href="https://www.dunebook.com/5-best-open-source-project-built-using-laravel/" target="_blank" rel="external">5 Best open source project built using Laravel | Dunebook</a> - 使用 Laravel 所建立的五個 OpenSource 專案，包含 CMS, Ticket Tracking, Video, 時間管理系統：<ul>
<li>Flarum - <a href="http://flarum.org/" target="_blank" rel="external">Flarum – Forums Made Simple</a></li>
<li>Vuedo - <a href="https://github.com/vuedo/vuedo" target="_blank" rel="external">Vuedo/vuedo: Vuedo is a blog platform, built with Laravel and Vue.js.</a></li>
<li>Lavalite - <a href="https://github.com/LavaLite/cms" target="_blank" rel="external">LavaLite/cms: Lavalite - Multilingual CMS built on Laravel 5.2 (Multiauth &amp; API enabled)</a> 以及 <a href="http://www.lavalite.org/" target="_blank" rel="external">Lavalite - CMS Built with Laravel 5.2 and Bootstrap 3.</a></li>
<li>Faveo - <a href="http://www.faveohelpdesk.com/" target="_blank" rel="external">Help Desk Software &amp; Ticket Management System - Faveo</a></li>
<li>TimeGrid - <a href="https://timegrid.io/" target="_blank" rel="external">timegrid.io</a></li>
</ul>
</li>
</ul>
<h3 id="前端網頁開發工具"><a href="#前端網頁開發工具" class="headerlink" title="前端網頁開發工具"></a>前端網頁開發工具</h3><ul>
<li><a href="https://docs.google.com/presentation/d/1SvvKfWvAgQRpyOwN1yke38BTyIfJMjD-SthwiQs6Zzw/edit#slide=id.p" target="_blank" rel="external">一頭栽入 Vue.js TDD 的世界 (威力加強版) - Google 簡報</a> - 鐵哥在 VueDinner 上關於 Vue.js 與 TDD 結合的分享簡報<ul>
<li>關於 Page Object 是否應該擺放 assertion 的討論。 <a href="https://www.facebook.com/jace.ju/posts/926452234103137" target="_blank" rel="external">https://www.facebook.com/jace.ju/posts/926452234103137</a></li>
<li><a href="https://github.com/jaceju-tutorial-examples/vue-todomvc" target="_blank" rel="external">jaceju-tutorial-examples/vue-todomvc: TodoMVC by Vue.js</a></li>
<li>影片：<a href="https://www.youtube.com/watch?v=yeVgDph6wMQ" target="_blank" rel="external">https://www.youtube.com/watch?v=yeVgDph6wMQ</a></li>
</ul>
</li>
<li><a href="https://docs.google.com/presentation/d/12Yy2SjYOow0x_FaCTHqv7wejs-J5z2oDvrpCScpFzAo/edit#slide=id.p" target="_blank" rel="external">Vue.js @ NingJS 2016 - Google 簡報</a></li>
<li><a href="https://www.gitbook.com/book/kejyuntw/gulp-learning-notes/details" target="_blank" rel="external">gulp 學習筆記 · GitBook</a></li>
<li><a href="https://github.com/kdchang/reactjs101" target="_blank" rel="external">kdchang/reactjs101: 從零開始學 ReactJS（ReactJS 101）</a> - 是一本希望讓初學者一看就懂的 ReactJS 中文入門教學書，由淺入深學習 ReactJS 生態系 (Flux, Redux, React Router, ImmutableJS, React Native, Relay/GraphQL etc)。</li>
</ul>
<h3 id="Redmine"><a href="#Redmine" class="headerlink" title="Redmine"></a>Redmine</h3><ul>
<li><a href="https://github.com/mikitex70/redmine_drawio" target="_blank" rel="external">mikitex70/redmine_drawio: Macro plugin to embed draw.io diagrams into Redmine wiki pages</a> - 搭配 draw.io 到 Redmine 裡</li>
<li><a href="https://bitbucket.org/39648421/redmine_chat" target="_blank" rel="external">39648421 / redmine_chat — Bitbucket</a> - 讓專案參與者也能夠有像 Facebook 一樣的線上對談機制</li>
<li><a href="https://github.com/dchbx/redmine_analytics" target="_blank" rel="external">dchbx/redmine_analytics: This sends analytics information to Segment, which can then be sent to other sources, just as Google Analytics, MixPanel, AWS S3, SalesForce, and many others.</a> - 在 Redmine 裡埋入 google analytics 等分析</li>
<li><a href="https://github.com/dchbx/redmine_reports" target="_blank" rel="external">dchbx/redmine_reports: Do you have any issues that are outside your SLA windows? What is the average wait time for a ticket for each user?</a> - 一個 Redmine 的統計報表</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MoClippings #10 人人都是道長！！！]]></title>
      <url>https://usedfire.net/Clippings/2016/MoClippings-10/</url>
      <content type="html"><![CDATA[<pre><code>發刊日 : 2016/08/01 - 2016/08/30
</code></pre><h2 id="MurMur"><a href="#MurMur" class="headerlink" title="MurMur"></a>MurMur</h2><ul>
<li><img src="/Clippings/2016/MoClippings-10/14711500928544.jpg" alt="[拿著平板邊抓怪其實是中國人發明的]" title="[拿著平板邊抓怪其實是中國人發明的]">
</li>
</ul>
<a id="more"></a>
<h2 id="生活藝文"><a href="#生活藝文" class="headerlink" title="生活藝文"></a>生活藝文</h2><ul>
<li><a href="http://solomo.xinmedia.com/travel/68661-flag" target="_blank" rel="external">澳洲、紐西蘭不再傻傻分不清楚！10題國旗超冷知識，你答對幾題？-欣旅遊BonVoyage-欣傳媒旅遊頻道</a><ul>
<li><img src="14720176257435.png" alt=""></li>
</ul>
</li>
</ul>
<h2 id="行銷推廣"><a href="#行銷推廣" class="headerlink" title="行銷推廣"></a>行銷推廣</h2><ul>
<li><a href="https://www.facebook.com/pxmartchannel/photos/?tab=album&amp;album_id=851321134938534" target="_blank" rel="external">全聯經濟美學</a></li>
<li><a href="https://www.facebook.com/notes/%E9%99%B3%E6%80%9D%E5%82%91/%E5%85%A8%E8%81%AF%E5%B0%8F%E7%B7%A8%E7%A9%B6%E7%AB%9F%E6%9C%89%E5%A4%9A%E5%BC%B7%E8%87%BA%E7%81%A3%E9%80%9A%E8%B7%AF%E6%A5%AD%E7%9A%84%E7%A4%BE%E7%BE%A4%E4%BF%AE%E7%BE%85%E5%A0%B4/1146814822007079" target="_blank" rel="external">全聯小編究竟有多強？臺灣通路業的社群修羅場！</a><ul>
<li>全聯真正強大的是：它的內容可以走出全聯自己的社群，它的廣告、貼文會在群眾、意見領袖、媒體社群中被分享、被討論。</li>
<li>一週內，全聯自身跟中元相關的發文不過才5篇，最後卻造成額外216篇的相關討論！無論全聯是否主動布局這些媒體曝光，全聯的內容的確引起廣大迴響。這些在外部社群造成的聲量總合，遠超過全聯粉絲專頁本身的力量。</li>
<li>聲量不見得一定要完全發生在自己的社群，而是思考怎麼讓自己在整個社群大環境中造成最大聲量。</li>
</ul>
</li>
<li><a href="http://www.worldometers.info/tw/" target="_blank" rel="external">Worldometers - 世界實時統計數據</a><ul>
<li><img src="14708251055296.gif" alt=""></li>
</ul>
</li>
</ul>
<h2 id="專案管理"><a href="#專案管理" class="headerlink" title="專案管理"></a>專案管理</h2><ul>
<li><p><a href="https://buzzorange.com/techorange/2015/02/03/google-venture-the-design-sprint/" target="_blank" rel="external">Google Ventures 發布創業聖經，40 個小時驗證你的 idea | TechOrange</a></p>
</li>
<li><p><a href="http://kevincayenne.logdown.com/posts/786812-experience-183-how-to-become-a-master" target="_blank" rel="external">[筆記] &lt;羅輯思維&gt; 183 怎麼樣成為一個高手 « 肺文</a></p>
<ul>
<li><p>如何有效學習(練習):</p>
<ol>
<li>大量知識套路、方法論 (類似在思維中形成programming 中各種 function功能)</li>
<li>針對性，大量重複練習</li>
<li>持續地做你不會做的事</li>
</ol>
</li>
<li><p>學習歷程：</p>
<ol>
<li>舒適區: 舒適區相當於最熟悉的環境(不限地理上或是心理上)，熟悉的技術、人事物等等，可以直接進入自動化歷程的區域。</li>
<li>學習區: 介於恐慌與舒適之間，進入恐慌區的適應歷程，一定伴隨痛苦、失控、不安、焦慮及不穩定。</li>
<li>恐慌區: 完全不熟悉的領域與技術或環境。</li>
</ol>
</li>
<li>未來的兩種人:<ul>
<li>第一類人：躺在工具產生的便利性上睡大覺，享受，透過互聯網弱化自己的人。</li>
<li>第二類人：帶著這個工具產生的新可能，去探索文明的新邊疆，透過互聯網讓自己成長的人。</li>
</ul>
</li>
</ul>
</li>
<li><p><a href="http://shouian-blog.logdown.com/posts/777571-reflection-the-mother-of-failure-not-success" target="_blank" rel="external">反思：失敗不是成功之母，成功才是 « Alex’s Blog</a></p>
<ul>
<li>不是只要失敗就一定有幫助</li>
<li><p>「好的失敗」下了三大特性：</p>
<ol>
<li>即時，一旦不對就馬上找人給你指正</li>
<li>對事不對人</li>
<li>這個的錯誤代價一定要自己承受得起</li>
</ol>
</li>
</ul>
</li>
</ul>
<pre><code>* 寫程式來說，更特別是這麼一回事

    1. 即時知道錯誤 (Compile一錯誤馬上就出現)
    2. 對事不對人 （你寫錯code沒做好跟你有錢與否一點關係都沒有）
    3. 自己承受得起 （寫錯code很正常，改正就好了）

* 一個產品要能成長，包含以下重點：

    1. 以建立好的失敗可能性打造產品，不以完美為前提（因為你的客人跟你預先想像的會差很多）
    2. 平日大量的閱讀、與前輩詢問，吸收別人的好的失敗經驗
    3. 反覆、重複的練習，確保自己曾經遇過的失敗不要再遇到（學更好的程式寫法優化、建立更好的供應商尋找條件）
</code></pre><ul>
<li><a href="http://shouian-blog.logdown.com/posts/777962-how-to-evaluate-the-feasibility-of-a-product" target="_blank" rel="external">如何開始一個最小可行產品MVP « Alex’s Blog</a><ul>
<li>把過去的你當成目標客群，想想你過去最願意付錢解決的問題，用他當題目</li>
<li>找你周遭身邊都遇到的問題，而你也有解決能力</li>
<li>一開始就得想著收費，毛利率一定要有40%以上</li>
<li>有了第一批假設的客戶，確認市場有多大</li>
<li>用套版服務，千萬別自己硬幹工程工作就開始賣，除非你能承受這個開發成本</li>
</ul>
</li>
</ul>
<h2 id="資訊知事"><a href="#資訊知事" class="headerlink" title="資訊知事"></a>資訊知事</h2><ul>
<li><p><a href="http://studyhost.blogspot.tw/2016/08/blog-post.html" target="_blank" rel="external">.NET Walker: 把程式寫好容易，把程式寫到能賣出去，很難…</a></p>
<ul>
<li>35歲以前，我幾乎都在思考怎麼把程式寫得更好，但過了35歲以後我發現，對『好』最簡單有力的定義，就是看看用戶願不願意，掏出自己的現金來買你寫出的軟體，沒別的，僅此而已。</li>
</ul>
</li>
<li><p><a href="http://pictogram2.com/?lang=en" target="_blank" rel="external">Human Pictogram 2.0 - free vector human pictograms -</a> - 可以免費使用的人類圖，有各種動作</p>
<ul>
<li><img src="14711502858644.jpg" alt=""> </li>
</ul>
</li>
<li><p><a href="https://vimeo.com/166807261" target="_blank" rel="external">HYPER-REALITY on Vimeo</a> - 這部影片將 AR 完全的融入生活中，還蠻有趣的，可以從 AR 的畫面中去體驗，未來可能怎麼樣。</p>
<ul>
<li><img src="14725666150303.jpg" alt=""></li>
</ul>
</li>
<li><p><a href="https://kkbox.codes/archives/2016/08/02/kkbox-%E7%9A%84%E9%9F%B3%E6%A8%82%E6%AA%94%E6%A1%88%E5%84%B2%E5%AD%98%E6%8A%80%E8%A1%93/" target="_blank" rel="external">KKBOX 的音樂檔案儲存技術 | kkb0x.c0des</a></p>
<ul>
<li>Slide - <a href="https://github.com/KKBOX/COSCUP.tw.2013" target="_blank" rel="external">全台灣最宅的科科科技如何利用 MogileFS 儲存數千萬個音樂檔案</a></li>
<li>儲存伺服器超過 75 台。總硬碟超過 2,300 顆。總儲存空間超過 10 PB。使用 8 個機櫃。</li>
</ul>
</li>
<li><p>寶可夢 (Pokemen Go) 相關新聞及討論：</p>
<ul>
<li><p>教育：</p>
<ul>
<li><a href="http://udn.com/news/story/9/1879378" target="_blank" rel="external">寶可夢要開課了！台大將開課研究 | 生活 | 即時 | 聯合新聞網</a></li>
</ul>
</li>
<li><p>附加服務：</p>
<ul>
<li><a href="http://solomo.xinmedia.com/taiwan/86531-Pokemon" target="_blank" rel="external">你還差哪一隻？「尋寶夢公園專車」出動 帶你環遊全台抓寶可夢！-欣台灣-欣傳媒旅遊頻道</a></li>
<li><a href="http://www.ettoday.net/news/20160809/751104.htm" target="_blank" rel="external">商機無限！正妹推「寶可夢專屬騎士」　載你環桃園抓寶 | ETtoday生活新聞 | ETtoday 新聞雲</a></li>
<li><a href="http://news.ltn.com.tw/news/life/breakingnews/1789896" target="_blank" rel="external">搶搭寶可夢商機 旅遊業 kkday 推抓寶專車 - 生活 - 自由時報電子報</a></li>
</ul>
</li>
<li><p>行銷：</p>
<ul>
<li><a href="http://blog.ichef.tw/2016/08/pokemonrestuarant/" target="_blank" rel="external">給餐廳老闆的 Pokemon Go 獲利指南 | 就愛開餐廳</a></li>
</ul>
</li>
<li><p>資訊技術：</p>
<ul>
<li><a href="http://blog.niclin.tw/posts/777025-how-to-run-on-the-mac-pokemon-bot" target="_blank" rel="external">如何在mac上運行pokemon bot « NicLin Dev</a></li>
<li><a href="https://github.com/jabbink/PokemonGoBot" target="_blank" rel="external">jabbink/PokemonGoBot: Bot that plays Pokemon Go</a></li>
<li><a href="https://github.com/Ar1i/PokemonGo-Bot" target="_blank" rel="external">Ar1i/PokemonGo-Bot</a></li>
<li><a href="https://www.pokemonradargo.com/" target="_blank" rel="external">Poke Radar for Pokemon GO - Maps, Finder, Search, Locations</a></li>
<li><a href="https://github.com/duhminick/PokeNurse" target="_blank" rel="external">duhminick/PokeNurse: 💉 A tool for Pokémon Go to aid in transferring and evolving Pokémon</a> - 有點屌，可以大量傳送跟進化 pokemon</li>
<li><a href="https://pogobag.me/" target="_blank" rel="external">PoGoBag</a></li>
<li><a href="http://gameappstheory.wixsite.com/gameapps/single-post/2016/08/10/Pokemon-Go-%E7%A8%80%E6%9C%89%E5%AF%B6%E5%8F%AF%E5%A4%A2%E4%BD%8D%E7%BD%AE%E8%87%AA%E5%8B%95%E9%80%9A%E5%A0%B1-%E3%80%90%E6%95%99%E5%AD%B8%E3%80%91%E6%83%B3%E6%8D%89%E5%95%9F%E6%9A%B4%E9%BE%8D%E8%A8%98%E5%BE%97%E7%94%A8-Telegram%EF%BC%81" target="_blank" rel="external">Pokemon Go 稀有寶可夢位置自動通報 【教學】要抓卡比獸可考慮看下去 | gameapps</a><ul>
<li><a href="https://telegram.me/pokemonalert_taipei" target="_blank" rel="external">https://telegram.me/pokemonalert_taipei</a></li>
</ul>
</li>
</ul>
</li>
<li><p>產品：</p>
<ul>
<li><a href="https://www.soft4fun.net/tech/news/supershot-go-screen-cover.htm?utm_content=buffer87d71&amp;utm_medium=social&amp;utm_source=facebook.com&amp;utm_campaign=buffer" target="_blank" rel="external">拋出完美曲球！Pokemon Go 專用保護貼「SuperShot GO!」讓你輕鬆成為大師 | 新聞 | 硬是要學</a><ul>
<li><img src="14707491608529.png" alt=""></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="工具軟體"><a href="#工具軟體" class="headerlink" title="工具軟體"></a>工具軟體</h2><ul>
<li><a href="http://dynalon.github.io/mdwiki/#!index.md" target="_blank" rel="external">MDwiki - Markdown based wiki done 100% on the client via javascript</a> - 一個使用 MarkDown 語法寫 Wiki 的工具。</li>
<li><a href="https://hyperterm.org/" target="_blank" rel="external">HyperTerm JS/HTML/CSS Terminal</a> - 一個使用 JavaScript 所編寫而成的 Terminal 工具。</li>
<li><a href="https://jsonresume.org/" target="_blank" rel="external">JSON Resume</a> - 用 JSON 格式書寫自己的履歷</li>
<li><a href="http://home.mi.com/ishop/detail?gid=249" target="_blank" rel="external">Wowstick电动螺丝刀 1fs</a> - 小米推出的螺絲起子，很小看起來也很方便。</li>
<li><a href="https://npes87184.github.io/%E7%A0%94%E7%A9%B6%E9%9B%9C%E8%A8%98/2016/07/08/hubotExample.html" target="_blank" rel="external">Hubot 聊天機器人簡單架設教學</a></li>
<li><a href="https://www.vultr.com/" target="_blank" rel="external">SSD VPS Servers, Cloud Servers and Cloud Hosting by Vultr - Vultr.com</a> - 同樣採用 SSD 的 VPS Server ，同樣價錢，容量都比 DigitalOcean 多一些。 </li>
<li><a href="https://www.gitbook.com/book/yychen/basics/details" target="_blank" rel="external">給不熟悉 command line 而想要在 Mac 或 Linux 上開發程式的人。內容涵蓋從最基礎的「如何打開終端機」到常用 command line 指令、使用 brew / apt-get 安裝套件, 以及基本的 git 使用。</a> - 適合初學 command line mode 的人學習查看。</li>
<li><p><a href="https://www.notion.so/login#overview" target="_blank" rel="external">Notion – Docs, wikis, tasks, seamlessly in one. A unified workspace for modern teams.</a> - 一個很適合小型團隊使用的共同工作系統。</p>
<ul>
<li><img src="14719178617451.jpg" alt=""></li>
<li><img src="14719179312562.jpg" alt=""></li>
</ul>
</li>
<li><p><a href="https://github.com/jasonlong/isometric-contributions" target="_blank" rel="external">jasonlong/isometric-contributions: Render an isometric pixel art version of your contribution graph in Chrome and Safari.</a> - 一個 chrome 套件，可以把 GitHub 的工作樹變成立體樣式。</p>
<ul>
<li><img src="14720167229786.jpg" alt=""></li>
</ul>
</li>
<li><p>GIT 學習資源：</p>
<ul>
<li><p><a href="http://jlord.us/git-it/index-zhtw.html" target="_blank" rel="external">Git-it Guide</a> - 互動式的 GIT 指令教學</p>
<ul>
<li><img src="14720173037907.jpg" alt=""></li>
</ul>
</li>
<li><p><a href="http://learngitbranching.js.org/" target="_blank" rel="external">Learn Git Branching</a> - 互動式 GIT 指令教學</p>
<ul>
<li><img src="14720172658616.jpg" alt=""></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="網站開發"><a href="#網站開發" class="headerlink" title="網站開發"></a>網站開發</h2><h3 id="UI-UX"><a href="#UI-UX" class="headerlink" title="UI/UX"></a>UI/UX</h3><ul>
<li><a href="https://medium.com/@jsaito/is-this-my-interface-or-yours-b09a7a795256#.3vsmrnozy" target="_blank" rel="external">Is this my interface or yours? — Medium</a> - 什麼時候用「電腦」、什麼時候用「我的電腦]、什麼時候用「你的電腦」？<ul>
<li><img src="14719168597808.jpg" alt=""></li>
</ul>
</li>
</ul>
<h3 id="心法"><a href="#心法" class="headerlink" title="心法"></a>心法</h3><ul>
<li><a href="http://design-patterns.readthedocs.io/zh_CN/latest/?utm_campaign=CodeTengu&amp;utm_medium=email&amp;utm_source=CodeTengu_54" target="_blank" rel="external">图说设计模式 — Graphic Design Patterns</a>  </li>
<li><a href="http://www.ithome.com.tw/voice/107533" target="_blank" rel="external">超越技術的階段 | iThome</a></li>
<li><a href="https://softnshare.wordpress.com/2016/07/19/mindsetofsuccessfulprogrammer/" target="_blank" rel="external">成功程式設計師凌駕於他人的五個關鍵思維 | Soft &amp; Share</a><ul>
<li>對於陌生的代碼會毫不畏懼地下去了解</li>
<li>精通解Bug</li>
<li>投資可省時的工具</li>
<li>最佳化重複性動作的速度</li>
<li>從系統級高度來思考</li>
</ul>
</li>
<li><a href="https://buzzorange.com/techorange/2016/08/16/airbnb-code-review/" target="_blank" rel="external">Airbnb 資深工程師分享：怎樣才是正確、有效的 code review | TechOrange</a></li>
<li><p><a href="https://wanqu.co/a/3729/2016-08-09-good-code-is-its-own-best-documentation-free-code-camp.html?s=email" target="_blank" rel="external">好的代码本身就是好的文档 | 湾区日报</a></p>
<blockquote>
<p>好程式碼就像好的笑話一樣，不需要向別人額外解釋。對程式碼質量進行測試：讓其他開發者讀一下，看看他們能不能說出這段程式碼是做什麼的；如果你看不下去了，很急迫地要插嘴解釋，那程式碼質量還不夠好。</p>
</blockquote>
<ul>
<li><p><a href="https://medium.freecodecamp.com/good-code-vs-bad-code-263f71e867c1#.5k7ok5j24" target="_blank" rel="external">Good code is its own best documentation — Free Code Camp</a></p>
<blockquote>
<p>“Good code is its own best documentation” — <a href="http://www.stevemcconnell.com/" target="_blank" rel="external">Steve McConnell</a></p>
</blockquote>
</li>
</ul>
</li>
</ul>
<h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><ul>
<li><a href="https://www.youtube.com/watch?v=AiirzVw9WVQ&amp;feature=em-subs_digest" target="_blank" rel="external">Day #27 - From Apprentice To Artisan: 解耦合處理程序及單元測試 by 閃亮亮 - YouTube</a></li>
<li><a href="http://oomusou.io/tdd/tdd-di/?utm_campaign=CodeTengu&amp;utm_medium=email&amp;utm_source=CodeTengu_55" target="_blank" rel="external">深入探討依賴注入 | 點燈坊</a></li>
<li>Laravel database extension:<ul>
<li><a href="https://github.com/yajra/laravel-oci8" target="_blank" rel="external">yajra/laravel-oci8: Oracle DB driver for Laravel 4|5 via OCI8</a></li>
<li><a href="https://github.com/jfelder/Laravel-OracleDB" target="_blank" rel="external">jfelder/Laravel-OracleDB: Oracle DB driver for Laravel Framework</a></li>
</ul>
</li>
<li><a href="http://www.phpchina.com/portal.php?aid=40066&amp;mod=view" target="_blank" rel="external">PHPCon China 2016大会专题(视频+PPT)-PHP China开发者社区-最棒的PHP中文社区</a> - PHPConf China 2016 的相關簡報、影片分享。</li>
<li><a href="https://github.com/Alexia/php7mar" target="_blank" rel="external">Alexia/php7mar: PHP 7 Migration Assistant Report (MAR)</a> - 協助 PHP 5 升級到 PHP 7 的工具，可以幫助查出需要修改的地方，並且列出文件。</li>
<li><p><a href="https://hackmd.io/p/SyHcq1jO#/" target="_blank" rel="external">學 Laravel 一定要知道的 Restful Resource - HackMD</a></p>
<ul>
<li><p><code>Route::resouce(&#39;user&#39;, &#39;UserController&#39;);</code></p>
<figure class="highlight nsis"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Route::resource(‘<span class="literal">user</span>’, ‘UserController’)<span class="comment">;</span></div><div class="line">/<span class="literal">user</span> =&gt; index(GET)</div><div class="line">/<span class="literal">user</span>/create =&gt; create(GET)</div><div class="line">/<span class="literal">user</span> =&gt; store(POST)</div><div class="line">/<span class="literal">user</span>/&#123;id&#125; =&gt; <span class="literal">show</span>(GET)</div><div class="line">/usr/&#123;id&#125;/edit =&gt; edit(GET)</div><div class="line">/<span class="literal">user</span>/&#123;id&#125; =&gt; update(PUT/PATCH)</div><div class="line">/<span class="literal">user</span>/&#123;id&#125; =&gt; destroy(DELETE)</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h3 id="系統架構"><a href="#系統架構" class="headerlink" title="系統架構"></a>系統架構</h3><ul>
<li><a href="https://deepstream.io/blog/load-balancing-websocket-connections/?utm_campaign=CodeTengu&amp;utm_medium=email&amp;utm_source=CodeTengu_56" target="_blank" rel="external">Load Balancing Websocket Connections</a> - 針對 Websocket 連線做負載平衡</li>
<li><a href="http://tech.youzan.com/cache-background/" target="_blank" rel="external">深入浅出Cache - zhaoxi - 有赞技术团队</a> - 深入淺出 介紹 Cache 的使用</li>
<li><a href="http://www.ruanyifeng.com/blog/2016/08/http.html" target="_blank" rel="external">HTTP 协议入门 - 阮一峰的网络日志</a> - 介紹從 HTTP/0.9, HTTP/1.0, HTTP/1.1 到現今 HTTP/2 的變化。</li>
<li>COSCUP <ul>
<li><a href="http://beta.hackfoldr.org/coscup2016/" target="_blank" rel="external">COSCUP 2016 共筆懶人包 | COSCUP 2016 開源人年會 | hackfoldr</a></li>
<li><a href="https://speakerdeck.com/poga/everything-is-log" target="_blank" rel="external">everything is log // Speaker Deck</a></li>
<li><a href="https://medium.com/@poga/%E8%90%AC%E4%BA%8B%E8%90%AC%E7%89%A9%E7%9A%86%E6%98%AF-log-%E7%B3%BB%E7%B5%B1%E6%9E%B6%E6%A7%8B%E4%B9%9F%E4%BE%86%E9%BB%9E%E7%A7%91%E6%99%AE-caf3029359f8#.kc23iuhox" target="_blank" rel="external">萬事萬物皆是 LOG — 系統架構也來點科普 — Medium</a></li>
</ul>
</li>
<li>ModernWeb 2016<ul>
<li><a href="http://www.slideshare.net/shengyou/modern-web-2016-php" target="_blank" rel="external">[Modern Web 2016] 讓你的 PHP 開發流程再次潮起來</a> <ul>
<li>錄影：<a href="http://www.ithome.com.tw/video/108440" target="_blank" rel="external">http://www.ithome.com.tw/video/108440</a> </li>
</ul>
</li>
<li><a href="http://s.itho.me/modernweb/2016/tracka/StreetVoice_%E8%87%AA%E5%8B%95%E5%8C%96%E9%83%A8%E5%B1%AC%E6%BC%94%E9%80%B2_%E6%9B%BE%E6%98%8E%E8%B3%A2.pdf" target="_blank" rel="external">StreetVoice 自動化部屬演變 - ModernWeb 2016</a><ul>
<li>網站太多，不自動部屬會死人的。</li>
<li>自動化部屬的前提：足夠的自動化測試、工作流程、時間</li>
<li>寫程式-&gt;GitHub-&gt;TravisCI-&gt;ANSIBLE-&gt;AWS</li>
</ul>
</li>
<li><a href="http://s.itho.me/modernweb/2016/tracka/Ant_ModernWeb-%E6%81%B0%E5%A6%82%E5%85%B6%E5%88%86%E7%9A%84MySQL%E8%A8%AD%E8%A8%88%E6%8A%80%E5%B7%A7_%E4%BF%AE.pdf" target="_blank" rel="external">Ant_ModernWeb-恰如其分的MySQL設計技巧_Public.pdf</a><ul>
<li>➊ 架構先決</li>
<li>➋ 沒有完美的架構，只有最適的架構</li>
<li>➌ 架構是演進的，預想但不過早調優</li>
</ul>
</li>
<li><a href="http://s.itho.me/modernweb/2016/trackc/%E5%AF%AB%E5%87%BA%E6%89%80%E6%9C%89%E4%BA%BA%E9%83%BD%E8%83%BD%E8%BC%95%E9%AC%86%E8%AE%80%E6%87%82%E7%9A%84%E6%B8%AC%E8%A9%A6%E7%A8%8B%E5%BC%8F_%E9%99%B3%E9%8B%92%E9%80%B8@ModernWeb2016.pdf" target="_blank" rel="external">寫出所有人都能輕鬆讀懂的測試程式_陳鋒逸@ModernWeb2016.pdf</a></li>
<li><a href="http://slides.com/alincode/deck-2/fullscreen#/" target="_blank" rel="external">Modern Web 2016 - 無痛前端測試: Slides</a></li>
</ul>
</li>
<li><a href="https://blog.othree.net/log/2016/08/13/json-web-token/" target="_blank" rel="external">JSON Web Token : O3noBLOG</a></li>
<li><a href="https://blog.gslin.org/archives/2016/08/15/6731/%e8%87%aa%e5%bb%ba-mail-system-%e7%9a%84%e9%9b%a3%e5%ba%a6/" target="_blank" rel="external">自建 Mail System 的難度 | Gea-Suan Lin’s BLOG</a><ul>
<li>Gea-Suan Lin 提到，自己建 mail system 要做到哪些事情：<ul>
<li>確認 IP (包括 IPv4/IPv6) 沒有列入任何 Open Relay 清單中。</li>
<li>確認 IP 的反解可以查出對應的正解。</li>
<li>確認 SPF 設定。</li>
<li>確認送出去的信件有 DKIM 簽名，而且 DNS 也有設上對應的設定。</li>
<li>確認 TLS 的發送與接收都正常。</li>
<li>確認 DMARC 機制正確運作。</li>
</ul>
</li>
</ul>
</li>
<li><a href="http://algo-visualizer.jasonpark.me/#path=backtracking/knight&#39;s_tour/basic" target="_blank" rel="external">Algorithm Visualizer</a> - 將各種演算法都已 JavaScript 的方法視覺化呈現出來。無論是技術上或視覺上都值得查看。</li>
</ul>
<h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><ul>
<li><a href="https://www.gitbook.com/book/eyesofkids/javascript-start-es6-promise/details" target="_blank" rel="external">從Promise開始的JavaScript異步生活 - GitBook</a></li>
<li><a href="https://rainsoft.io/variables-lifecycle-and-why-let-is-not-hoisted/" target="_blank" rel="external">JavaScript variables lifecycle: why let is not hoisted</a> - 關於 JavaScript 變數的生命週期說明，解釋 var 與 let 的差異。</li>
<li><a href="https://medium.com/peergrade-io/structuring-css-in-large-projects-37f1695f5ec8#.m2wwrj7e4" target="_blank" rel="external">Structuring CSS in large projects — Peergrade.io — Medium</a> - 大型專案的 CSS 結構分配。<ul>
<li>class 命名需要有前綴 (prefix)</li>
<li>不要使用巢狀選擇器</li>
<li>採用 BEM 命名規則。這邊比較特別的是採用 BEM 命名規則後，可允許 1 層的巢狀選擇器。這樣可以避免重複指定區塊裡面的修改器。</li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[PHP - 使用 array_filter 讓你的程式碼更簡潔易讀]]></title>
      <url>https://usedfire.net/Notes/PHP/Implement-toArray-method-used-array-filter/</url>
      <content type="html"><![CDATA[<p>早上看到了這一篇關於 PHP 技巧的文章：<a href="https://murze.be/2016/08/improving-readability-using-array_filter/" target="_blank" rel="external">Improving readability using array_filter - murze.be</a> 中文翻譯大概可以說是，用 <code>array_filter</code> 使之更具有可讀性。看到也實際測試了一下，覺得不錯，因此作了一些實驗，也發現一些小坑，所以順便作一下記錄。</p>
<p>以往要在 PHP 的 class 中實作 <code>toArray()</code> method 我們會寫類似的程式碼：</p>
<a id="more"></a>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Address</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">private</span> $name;</div><div class="line">    <span class="keyword">private</span> $city;</div><div class="line">    <span class="keyword">private</span> $street_line1;</div><div class="line">    <span class="keyword">private</span> $street_line2;</div><div class="line">    ...</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toArray</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        $address = [</div><div class="line">            <span class="string">'name'</span> =&gt; <span class="keyword">$this</span>-&gt;name,</div><div class="line">            <span class="string">'city'</span> =&gt; <span class="keyword">$this</span>-&gt;city,</div><div class="line">            <span class="string">'street_line1'</span> =&gt; <span class="keyword">$this</span>-&gt;street_line1,</div><div class="line">        ];</div><div class="line">        </div><div class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;street_line2 != <span class="string">''</span>) &#123;</div><div class="line">            $address[<span class="string">'street_line2'</span>] = <span class="keyword">$this</span>-&gt;street_line2;</div><div class="line">        &#125;</div><div class="line">        ...</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>member data 不多的時候，看起來還好。但再多幾個，上面判斷是否為空白的 if 判斷式就會變得非常多，很不好看，也不簡潔。文章內提供的方法就是使用 <code>array_filter</code> 改寫。改寫後的程式碼像這樣。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Address</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">private</span> $name;</div><div class="line">    <span class="keyword">private</span> $city;</div><div class="line">    <span class="keyword">private</span> $street_line1;</div><div class="line">    <span class="keyword">private</span> $street_line2;</div><div class="line">    ...</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toArray</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> array_filter([</div><div class="line">            <span class="string">'name'</span> =&gt; <span class="keyword">$this</span>-&gt;name,</div><div class="line">            <span class="string">'city'</span> =&gt; <span class="keyword">$this</span>-&gt;city,</div><div class="line">            <span class="string">'street_line1'</span> =&gt; <span class="keyword">$this</span>-&gt;street_line1,</div><div class="line">            <span class="string">'street_line2'</span> =&gt; <span class="keyword">$this</span>-&gt;street_line2,</div><div class="line">            ...</div><div class="line">        ]);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>整體看起來簡潔多了。使用的就是 <code>array_filter</code> <a href="http://php.net/manual/en/function.array-filter.php" target="_blank" rel="external">PHP: array_filter - Manual</a> 的特性。當 <code>array_filter</code> 的第二個參數不帶入 callback function 時，預設的處理方法：「當遇到成員內容為空值或為 null 時，不輸出」。</p>
<p>因此，在使用的時候也要特別小心。舉例來說，假設 street_line1, street_line2 是空字串，則輸出就會只有 name 及 city：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Address</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">private</span> $name = <span class="string">'User 1'</span>;</div><div class="line">    <span class="keyword">private</span> $city = <span class="string">'Taipei'</span>; </div><div class="line">    <span class="keyword">private</span> $street_line1 = <span class="string">''</span>;</div><div class="line">    <span class="keyword">private</span> $street_line2 = <span class="string">''</span>;</div><div class="line">    ...</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toArray</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        ...</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$address = <span class="keyword">new</span> Address();</div><div class="line">print_r($address-&gt;toArray());</div><div class="line"></div><div class="line"><span class="comment">// Array</span></div><div class="line"><span class="comment">//(</span></div><div class="line"><span class="comment">//    [name] =&gt; User 1</span></div><div class="line"><span class="comment">//    [city] =&gt; Taipei</span></div><div class="line"><span class="comment">//)</span></div></pre></td></tr></table></figure>
<p>而如果直接輸出不存在的 member 也是。如：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Address</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">private</span> $name = <span class="string">'User 1'</span>;</div><div class="line">    <span class="keyword">private</span> $city = <span class="string">'Taipei'</span>; </div><div class="line">    <span class="comment">// private $street_line1 = '';</span></div><div class="line">    <span class="comment">// private $street_line2 = '';</span></div><div class="line">    ...</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toArray</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        ...</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$address = <span class="keyword">new</span> Address();</div><div class="line">print_r($address-&gt;toArray());</div><div class="line"></div><div class="line"><span class="comment">// Array</span></div><div class="line"><span class="comment">//(</span></div><div class="line"><span class="comment">//    [name] =&gt; User 1</span></div><div class="line"><span class="comment">//    [city] =&gt; Taipei</span></div><div class="line"><span class="comment">//)</span></div></pre></td></tr></table></figure>
<p>還有，遇到直接是 null 的時候也是：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Address</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">private</span> $name = <span class="string">'User 1'</span>;</div><div class="line">    <span class="keyword">private</span> $city = <span class="string">'Taipei'</span>; </div><div class="line">    <span class="keyword">private</span> $street_line1 = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">private</span> $street_line2 = <span class="keyword">null</span>;</div><div class="line">    ...</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toArray</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        ...</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$address = <span class="keyword">new</span> Address();</div><div class="line">print_r($address-&gt;toArray());</div><div class="line"></div><div class="line"><span class="comment">// Array</span></div><div class="line"><span class="comment">//(</span></div><div class="line"><span class="comment">//    [name] =&gt; User 1</span></div><div class="line"><span class="comment">//    [city] =&gt; Taipei</span></div><div class="line"><span class="comment">//)</span></div></pre></td></tr></table></figure>
<p><code>array_filter</code> 遇到空字串、null、不存在時的這些特性就要特別注意。像是無論如何就算是空字串也要輸出佔一個位置的，就要在額外特別處理了。</p>
<p>看到這樣的運用並且實際作實驗的感覺還蠻有趣的。跟 <a href="https://murze.be/2016/08/improving-readability-using-array_filter/" target="_blank" rel="external">Improving readability using array_filter - murze.be</a> 作者一樣，第一次發現 <code>array_filter</code> 可以這樣用。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MoClippings #9 別用傳統生產的模式管理腦力密集的團隊]]></title>
      <url>https://usedfire.net/Clippings/2016/MoClippings-9/</url>
      <content type="html"><![CDATA[<pre><code>發刊日 : 2016/07/23 - 2016/07/31
</code></pre><h2 id="行銷推廣"><a href="#行銷推廣" class="headerlink" title="行銷推廣"></a>行銷推廣</h2><ul>
<li><a href="http://www.slideshare.net/wanjuwang7/ss-64271678" target="_blank" rel="external">優化宅的日常-數據分析篇</a> - 關於數據分析在做什麼，可以做到什麼？很棒的一篇入門簡報</li>
</ul>
<h2 id="專案管理"><a href="#專案管理" class="headerlink" title="專案管理"></a>專案管理</h2><ul>
<li><a href="http://kanban.leanlabs.io/" target="_blank" rel="external">GitLab kanban board</a> 把 GitLab 的 Issue Tracking 變成可以支援看板方法</li>
<li><p><a href="https://www.youtube.com/watch?v=a4ueO_6AqTk" target="_blank" rel="external">GitLab Kanban Board overview - YouTube</a></p>
</li>
<li><p><a href="http://leanvalidation.hanno.co/process.html" target="_blank" rel="external">The Process · The Lean Validation Playbook</a> - 精實『驗證』程序手冊</p>
<blockquote>
<p>因為最怕的是花時間做出沒人要的東西，因此，Hanno (一個顧問公司）發表了一套驗證的方法，希望避免類似的錯誤。<br>方法分成4個階段：</p>
</blockquote>
<ol>
<li>驗證問題是否值得解決</li>
<li>驗證市場是否存在（需要解決這個問題的人是否夠多）</li>
<li>驗證產品是否真的解決問題</li>
<li>驗證付費的意願</li>
</ol>
</li>
</ul>
<a id="more"></a>
<h2 id="資訊知事"><a href="#資訊知事" class="headerlink" title="資訊知事"></a>資訊知事</h2><ul>
<li><a href="https://speakerdeck.com/eddie/use-git-to-control-your-life" target="_blank" rel="external">Use Git to Control Your Life // Speaker Deck</a> - 高見龍 - 「五倍紅寶石 Git 課程「人生不能重來，但 Git 可以」投影片</li>
<li><p><a href="http://www.ithome.com.tw/news/107294" target="_blank" rel="external">【詳細圖解】駭客入侵一銀ATM流程追追追 | iThome</a> - 遙控臺北、臺中22家第一銀行分行內41臺ATM的操作指令，竟來自遠在1萬公里外的英國，一臺第一銀行倫敦分行內鎖在鐵櫃中的電話錄音伺服器主機，成了駭客遠端遙控ATM大吐鈔的跳板。根據調查局目前揭露的資料，可以將駭客入侵一銀ATM的流程，分成6個階段</p>
<ul>
<li><img src="14694370081496.jpg" alt=""></li>
</ul>
</li>
<li><p><a href="https://github.com/FallibleInc/security-guide-for-developers" target="_blank" rel="external">FallibleInc/security-guide-for-developers: Security Guide for Developers</a> - 給工程師的網站安全指南 - 可以把內容當做試 check-list 做檢驗查看。</p>
</li>
<li><p>「拿代码量算KPI……跟程序员们来这套？」全集 - 當開始拿寫的程式碼行數去計算開發者的績效時，會發生什麼事情？一起來看看這上下兩集的漫畫吧！</p>
<ul>
<li><a href="http://chuansong.me/n/458871148658" target="_blank" rel="external">拿代码量算KPI……跟程序员们来这套？(上）_神秘的程序员们_【传送门】</a></li>
<li><a href="http://chuansong.me/n/465267848858" target="_blank" rel="external">拿代码量算KPI……跟程序员们来这套？(下）_神秘的程序员们_【传送门】</a></li>
</ul>
</li>
</ul>
<h2 id="工具軟體"><a href="#工具軟體" class="headerlink" title="工具軟體"></a>工具軟體</h2><ul>
<li><a href="https://free.com.tw/all-in-one-messenger/" target="_blank" rel="external">All-in-One Messenger 同時用 WhatsApp、Messenger 等27種即時通訊服務</a></li>
</ul>
<h2 id="網站開發"><a href="#網站開發" class="headerlink" title="網站開發"></a>網站開發</h2><h3 id="系統架構"><a href="#系統架構" class="headerlink" title="系統架構"></a>系統架構</h3><ul>
<li><a href="https://blog.docker.com/2016/07/docker-for-mac-and-windows-production-ready/" target="_blank" rel="external">Docker for Mac and Windows is Now Generally Available and Ready for Production | Docker Blog</a><ul>
<li>可以正式在 Mac and Windows 上面使用 Docker 了！！！</li>
</ul>
</li>
<li><a href="https://about.gitlab.com/2016/07/27/the-11-rules-of-gitlab-flow/" target="_blank" rel="external">The 11 Rules of GitLab Flow | GitLab</a><ul>
<li>原文規則：<ol>
<li>Use feature branches, no direct commits on master.</li>
<li>Test all commits, not only ones on master.</li>
<li>Run all the tests on all commits (if your tests run longer than 5 minutes have them run in parallel).</li>
<li>Perform code reviews before merges into master, not afterwards.</li>
<li>Deployments are automatic, based on branches or tags.</li>
<li>Tags are set by the user, not by CI.</li>
<li>Releases are based on tags.</li>
<li>Pushed commits are never rebased.</li>
<li>Everyone starts from master, and targets master.</li>
<li>Fix bugs in master first and release branches second.</li>
<li>Commit messages reflect intent. </li>
</ol>
</li>
<li>中文翻譯：<ol>
<li>使用 feature branches，不要直接存取主幹 master</li>
<li>對所有的 commit 進行測試，而不是只測試 master 上面的</li>
<li>對所有的 commit 進行所有的測試。如果你的測試要跑超過五分鐘，請開始進行平行化測試。</li>
<li>在 merge 到 master 前就進行 code review 而不是之後。</li>
<li>讓佈署程式自動化，並且以分支或 tag 為基礎做佈署。</li>
<li>Tag 應該由人工設定，不要由 CI 做。</li>
<li>發佈版本應該由 tag 進行。</li>
<li>不要對已經 push 的 commit 再進行 rebase 。</li>
<li>由 master 開始，由 master 結束。</li>
<li>修改 bug 先在 master 分支進行，其次才是 release 的分支。</li>
<li>撰寫 commit message 時，必須寫清楚目的與意圖。</li>
</ol>
</li>
<li>什麼是 GITLAB Flow：<a href="http://docs.gitlab.com/ee/workflow/gitlab_flow.html" target="_blank" rel="external">GitLab Documentation</a></li>
</ul>
</li>
<li><a href="https://github.com/RedSign77/dp2" target="_blank" rel="external">RedSign77/dp2: Design patterns II.</a> - PHP Design Patterns Examples. - 以 PHP 所撰寫的 Design Pattern 範例。<ul>
<li>Facade pattern</li>
<li>Strategy pattern</li>
<li>Command pattern</li>
<li>Proxy pattern</li>
</ul>
</li>
<li><a href="https://www.rethinkdb.com/" target="_blank" rel="external">RethinkDB: the open-source database for the realtime web</a> - 即時資料庫</li>
<li><p><a href="https://www.youtube.com/watch?v=CRaiwg-SLh0" target="_blank" rel="external">PHP 也有 Day #26 - REST API 與前端整合之踩雷心得 by Ricky - YouTube</a> </p>
<ul>
<li>投影片: <a href="https://goo.gl/dN4wW8" target="_blank" rel="external">https://goo.gl/dN4wW8</a> </li>
<li><a href="http://blog.dj1020.net/PHP%E4%B9%9F%E6%9C%89day-26_REST_API_%E8%88%87%E5%89%8D%E7%AB%AF%E6%95%B4%E5%90%88%E4%B9%8B%E8%B8%A9%E9%9B%B7%E5%BF%83%E5%BE%97/" target="_blank" rel="external">PHP 也有 Day #26 - REST API 與前端整合之踩雷心得@RickySu | 閃亮亮大師之路</a></li>
</ul>
</li>
<li><p><a href="http://coolshell.cn/articles/17416.html" target="_blank" rel="external">缓存更新的套路 | 酷 壳 - CoolShell.cn</a> </p>
<ul>
<li>更新缓存的的Design Pattern有四种：Cache aside, Read through, Write through, Write behind caching</li>
<li>Cache Aside Pattern<ul>
<li>失效：应用程序先从cache取数据，没有得到，则从数据库中取数据，成功后，放到缓存中。</li>
<li>命中：应用程序从cache中取数据，取到后返回。</li>
<li>更新：先把数据存到数据库中，成功后，再让缓存失效</li>
</ul>
</li>
<li><p>Read/Write Through Pattern</p>
<ul>
<li><img src="14696700886657.png" alt=""></li>
</ul>
</li>
<li><p>Write Behind Caching Pattern</p>
<ul>
<li><img src="14696698340338.png" alt=""></li>
<li>在更新数据的时候，只更新缓存，不更新数据库，而我们的缓存会异步地批量更新数据库。这个设计的好处就是让数据的I/O操作飞快无比（因为直接操作内存嘛 ），因为异步，write backg还可以合并对同一个数据的多次操作，所以性能的提高是相当可观的。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><ul>
<li><a href="https://segmentfault.com/a/1190000006016817" target="_blank" rel="external">GUI应用程序架构的十年变迁:MVC,MVP,MVVM,Unidirectional,Clean - 某熊的全栈之路 - SegmentFault</a> - 圖型化介面這十年來的變遷。</li>
<li><a href="http://class.turn.tw/portfolio/html-and-css/" target="_blank" rel="external">自學網頁の嬰兒教材：HTML與CSS | 轉個彎教室</a> - 一些關於 HTML、CSS 的基本教學教材。</li>
</ul>
<h3 id="行動開發"><a href="#行動開發" class="headerlink" title="行動開發"></a>行動開發</h3><ul>
<li><p><a href="https://github.com/JackyAndroid/AndroidInterview-Q-A/blob/master/README-CN.md" target="_blank" rel="external">AndroidInterview-Q-A/README-CN.md at master · JackyAndroid/AndroidInterview-Q-A</a> - 中國百度、小米、新浪等等公司 Android 面試題庫，這篇記錄了六七十個面試時碰到的問題。</p>
</li>
<li><p><a href="http://www.slideshare.net/Happy.Prototyper/prototyping-wesley" target="_blank" rel="external">想像力不是使用者的超能力—Prototyping 淺入淺出（Wesley）</a> - 這份簡報介紹了為什麼需要 Prototype ，跟如何開始做 Prototype 值得看。</p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MoClippings #8 進入了一個百家機器人爭鳴的年代]]></title>
      <url>https://usedfire.net/Clippings/2016/MoClippings-8/</url>
      <content type="html"><![CDATA[<pre><code>發刊日 : 2016/05/09 - 2016/07/23
</code></pre><h2 id="圈內趣事小語"><a href="#圈內趣事小語" class="headerlink" title="圈內趣事小語"></a>圈內趣事小語</h2><pre><code>相關小語來源是這段期間Twitter或訂閱的feedly上被分析出來的熱門文字。
</code></pre><ul>
<li><a href="https://twitter.com/m13253/status/756288075546759168" target="_blank" rel="external">星之光 StarBrilliant 在 Twitter：”小明登录进选课系统，输入学号之后看见两个按钮：退学、复学。 本着好奇的心理，他点了一下退学，系统直接提示：“退学成功！” 他懵了，竟然没有弹出确认。想起来有个复学按钮，点下去：“对不起，你不是本校学生，无法使用本系统！” #严重的逻辑bug”</a></li>
</ul>
<hr>
<h2 id="資訊知事"><a href="#資訊知事" class="headerlink" title="資訊知事"></a>資訊知事</h2><ul>
<li><a href="http://www.ruanyifeng.com/blog/2016/05/time-management.html" target="_blank" rel="external">时间管理的七句话</a><ul>
<li>进程切换非常昂贵，避免多任务，保持单进程。</li>
<li>研究表明，集中注意力、高效工作，每天最多4小时。</li>
<li>划分任务的优先级，不要把’急切’当作’重要’。</li>
<li>起床后，不要查看邮件和微信。</li>
<li>避免开会，因为人类已知的最浪费时间的事情，就是开会。</li>
<li>早晨4点起床，到了中午，你就完成了一天的任务。</li>
<li>你没空时不会做的事情，有空了也不会做。</li>
</ul>
</li>
</ul>
<a id="more"></a>
<ul>
<li><a href="http://rocket.cafe/talks/75643" target="_blank" rel="external">設計筆記：聊天介面的設計規範</a><ul>
<li>輸入驗證</li>
<li>轉換任務</li>
<li>回頭追蹤</li>
<li>定時離開</li>
<li>等待緊急輸入</li>
<li>從清單中選擇</li>
</ul>
</li>
<li><p>[設計筆記：淺談聊天介面與人機互動設計]</p>
<ul>
<li>GUI與CUI的使用時機<ul>
<li>GUI圖像介面：應用於呈現「圖勝於文」的內容</li>
<li>CUI聊天介面：適合用來觸發繁多且瑣碎的項目</li>
</ul>
</li>
<li>機器人的聊天環境規劃<ul>
<li><img src="uq9salP.png" alt=""></li>
</ul>
</li>
</ul>
</li>
<li><p><a href="http://www.ifanr.com/658538" target="_blank" rel="external">Google I/O 最全记录，看完我们睡不着了！</a></p>
<ul>
<li>Google Assistant: 一句 OK, Google，多少手指都用不上了</li>
<li>Google Home：一个能与你谈天说地的音箱</li>
<li>Allo：比你还会“撩妹”的聊天应用</li>
<li>当年重头的 Android，如今成了配角</li>
<li>Android Wear 2.0：你可以丢掉手机，在手表上打字了！</li>
<li>开车不分心，可完全语音操控的新版 Android Auto</li>
<li>看完这一场关于未来的发布会，我们为何睡意全无？<ul>
<li>简而言之，这场关于未来的发布会，Google 希望把人工智能植入到你生活的每一个场景，表面上像 Siri 的 Google Assistant，像 echo 的 Google Home，像微信的 Allo，其实都藏着一个对你更主动的机器之心。</li>
</ul>
</li>
</ul>
</li>
<li><p><a href="https://azure.microsoft.com/zh-tw/documentation/articles/multi-factor-authentication/" target="_blank" rel="external">什麼是 Azure Multi-Factor Authentication？ | Microsoft Azure</a></p>
<ul>
<li>多因素驗證 (MFA) 是需要使用多種驗證方法，並在使用者登入和交易中新增重要的第二層安全性的驗證方法。</li>
<li>其運作方式需要下列其中任何二或多個驗證方法：<ul>
<li>您知道的某些資訊 (通常是密碼)</li>
<li>您擁有的某些東西 (不容易輕易複製的信任裝置，例如電話)</li>
<li>您身上的某些特徵 (生物識別技術)</li>
</ul>
</li>
<li>Multi-Factor Authentication 是除了使用使用者名稱與密碼之外，需要再利用其他方法驗證您的身份的驗證方法。它可以為使用者登入和交易提供第二層安全性。</li>
<li>Multi-Factor Authentication 有助於保護對資料與應用程式的存取，同時可以滿足使用者對簡單登入程序的需求。它可以透過一些簡單的驗證選項 (例如電話、文字訊息，或行動應用程式通知或驗證代碼，以及第三方 OATH 權杖) 來提供強大的驗證功能。</li>
</ul>
</li>
<li><p><a href="http://yenlung-blog.logdown.com/posts/773053-keynote-code-highlighting" target="_blank" rel="external">[Keynote] 程式碼高亮化 « yenlung’s Blog</a> - 做簡報時如果需要貼程式碼，又需要讓其可以顯示 Highlight ，那可以參考這篇文章的作法。</p>
</li>
<li><p><a href="https://blog.liang2.tw/2015Talk-Chinese-Search/" target="_blank" rel="external">Chinese Search 中文搜尋經驗分享</a> - 關於中文搜尋斷字、切割的基本原理介紹，以及中文斷字會遇到的困難及其解決方案。</p>
</li>
<li><p><a href="https://stories.buffer.com/people-dont-buy-products-they-buy-better-versions-of-themselves-5d6552aad4c6#.5vh57hlmk" target="_blank" rel="external">人们不是买产品，而是买一个更好的自己</a></p>
<blockquote>
<p>很多公司宣传产品的时候都是功能优先，仿佛功能多的就比较好卖似得。应该让用户明白，买你的产品后他们能得到什么好处。</p>
<p>“A feature is what your product does; a benefit is what the customer can do with your product.”</p>
<p>例子：</p>
</blockquote>
<ul>
<li>iPod: 1,000 songs in your pocket</li>
<li>Evernote: Remember Everything</li>
<li>LinkedIn: Be great at what you do.</li>
<li>Github: Build software better, together</li>
</ul>
</li>
<li><p><a href="https://uxdesign.cc/design-better-forms-96fadca0f49c#.yb26vw4zg" target="_blank" rel="external">Design Better Forms — uxdesign.cc – User Experience Design</a> - 如何設計好體驗的表格，這篇文章中介紹了設計表單時，可能犯的錯，以及怎麼做會更好的介紹。</p>
</li>
<li><p><a href="https://developer.ibm.com/recipes/tutorials/ui-dashboard-for-iot-device-data-using-node-red/" target="_blank" rel="external">UI Dashboard for IoT Device data using node red - developerWorks Recipes</a> - IBM 正個搞的東西，可以在上面像組 IC 一樣串出自己的東西</p>
</li>
<li><p>第一銀行 ATM 盜領事件相關彙整：</p>
<ul>
<li><a href="http://orson.tw/2016/07/12/%e9%8d%b5%e7%9b%a4%e6%9f%af%e5%8d%97-%e4%b8%80%e9%8a%80atm%e7%9b%9c%e9%a0%98%e4%ba%8b%e4%bb%b6/" target="_blank" rel="external">鍵盤柯南 – 一銀ATM盜領事件 – 綠紅黃白黑</a></li>
<li><a href="http://orson.tw/2016/07/12/%e6%8a%80%e8%a1%93%e5%88%86%e6%9e%90-%e5%a6%82%e4%bd%95%e9%81%99%e6%8e%a7atm%e5%90%90%e9%8c%a2/" target="_blank" rel="external">技術分析 – 如何遙控ATM吐錢 – 綠紅黃白黑</a></li>
</ul>
</li>
<li><p><a href="https://www.zerodium.com/program.html" target="_blank" rel="external">ZERODIUM - How to Sell Your 0day Exploit to ZERODIUM</a> - 如果找到關於 0day 攻擊時，應該如何賣？文中提到相關的價格</p>
</li>
</ul>
<hr>
<h2 id="行銷推廣"><a href="#行銷推廣" class="headerlink" title="行銷推廣"></a>行銷推廣</h2><ul>
<li><p><a href="https://tagmanager.google.com/" target="_blank" rel="external">Google Tag Manager</a> - Google 提供的追蹤管理工具，可以協助設定多組不一樣的追蹤 code ，設定一次，即不需要在修改 Production 上的程式碼，在管理介面上執行即可。</p>
<ul>
<li><a href="https://analyticsacademy.withgoogle.com/course/5" target="_blank" rel="external">Analytics Academy</a>  - GTM 官方教學課程</li>
<li><a href="http://www.slideshare.net/ssuser9805a7/google-tag-managerweb-analytics101-63573918" target="_blank" rel="external">Google tag manager-web analytics101</a> - GTM 初階教學</li>
<li><a href="http://www.slideshare.net/wjames1118/gtm-ga-event" target="_blank" rel="external">GTM 埋設 GA 與 Event (事件) 時的小陷阱與三種解法</a></li>
<li><a href="http://www.slideshare.net/usergeorgechang/google-analytics-user-explorer" target="_blank" rel="external">Google Analytics 使用者多層檢視 User Explorer</a></li>
</ul>
</li>
<li><p><a href="http://www.slideshare.net/segacheng/marketing-zen" target="_blank" rel="external">Marketing Zen 行銷心法</a> </p>
<ul>
<li>行銷的思考方式及其架構</li>
<li>LIVEhouse 的 Sega 簡報</li>
</ul>
</li>
</ul>
<hr>
<h2 id="專案管理"><a href="#專案管理" class="headerlink" title="專案管理"></a>專案管理</h2><ul>
<li><p><a href="http://www.books.com.tw/products/0010712916" target="_blank" rel="external">使用者故事對照</a></p>
<ul>
<li><a href="http://www.slideshare.net/ruddylee/user-story-mapping-43373448" target="_blank" rel="external">User Story Mapping</a> - Slide</li>
</ul>
</li>
<li><p><a href="http://blog.chengweichen.com/2016/02/agile-tour-taipei-2015-scrum-estimation.html" target="_blank" rel="external">艦長，你有事嗎？: Agile Tour Taipei 2015 筆記與心得（五）| Scrum Estimation Model - Joey Chen (91)</a></p>
</li>
<li><p><a href="https://dotblogs.com.tw/hatelove/2015/12/24/scrum-estimation-model" target="_blank" rel="external">Scrum Estimation－Scrum Estimation Model | In 91 - 點部落</a></p>
</li>
<li><p><a href="https://dotblogs.com.tw/hatelove/2015/12/19/scrum-project-schedule-estimation" target="_blank" rel="external">Scrum Estimation－如何估算專案時程 | In 91 - 點部落</a></p>
</li>
<li><p><a href="https://peihsinsu.gitbooks.io/docker-note-book/content/" target="_blank" rel="external">Introduction · Docker學習筆記</a> - 滿滿的一整本 Docker 的學習記錄書</p>
</li>
<li><p><a href="https://ruddyblog.wordpress.com/2016/07/21/%e6%95%8f%e6%8d%b7%e9%96%8b%e7%99%bc%e7%82%ba%e4%bd%95%e6%9c%83%e6%af%94%e8%bc%83%e5%bf%ab/" target="_blank" rel="external">敏捷開發為何會比較快? | Ruddy Lee 分享空間</a></p>
</li>
<li><p><a href="http://www.slideshare.net/segacheng/google-how-google-works" target="_blank" rel="external">Google 模式 - How Google Works</a></p>
<ul>
<li>LIVEhouse 的 sega 做的關於 <code>Google 模式</code> 這本書的簡報。</li>
<li>這份簡報把 <code>Google 模式</code> 這本書所要傳達的核心概念講的非常好。</li>
</ul>
</li>
</ul>
<hr>
<h2 id="技術知事"><a href="#技術知事" class="headerlink" title="技術知事"></a>技術知事</h2><h3 id="開發心法"><a href="#開發心法" class="headerlink" title="開發心法"></a>開發心法</h3><ul>
<li><p><a href="http://blog.dj1020.net/" target="_blank" rel="external">PHP 也有 Day #26 - REST API 與前端整合之踩雷心得@RickySu | 閃亮亮大師之路</a></p>
</li>
<li><p><a href="http://taobaofed.org/blog/2016/05/03/promise-anti-patterns/" target="_blank" rel="external">Promise 反模式 | Taobao FED | 淘宝前端团队</a></p>
</li>
<li><p><a href="https://medium.com/@rayshih771012/mvc-%E6%9E%B6%E6%A7%8B%E6%BC%94%E9%80%B2-single-source-of-truth-2720f5a5facd#.x7ww5xgbn" target="_blank" rel="external">MVC 架構演進 — Single Source of Truth — Medium</a></p>
</li>
<li><p><a href="http://i.imgur.com/xRSA0Ns.jpg" target="_blank" rel="external">“HTTPS”安全在哪里？ - 技术分享 - Bugly - Powered by Bugly!</a></p>
</li>
<li><p><a href="https://github.com/jgrossi/corcel" target="_blank" rel="external">Use WordPress backend with any PHP framework</a></p>
<ul>
<li><a href="http://www.phpclasses.org/package/9769-PHP-Use-the-WordPress-backend-with-any-PHP-application.html" target="_blank" rel="external">Corcel (Laravel + WordPress): Use the WordPress backend with any PHP application</a></li>
</ul>
</li>
<li><p><a href="http://mp.weixin.qq.com/s?__biz=MzA4Nzg5Nzc5OA%3D%3D&amp;from=timeline&amp;idx=1&amp;isappinstalled=0&amp;mid=2651659581&amp;scene=2&amp;sn=c5ca9f41d7d8e415b5ef961fee9fafac&amp;srcid=0506aKQtceUKjBAnXBCP3CcP" target="_blank" rel="external">前Googler：Docker从上手到差点放弃</a></p>
<ul>
<li>小姐身子丫鬟命：Docker Engine （Runtime）<ul>
<li>每次跑一个Docker程序的时候都要担心，我们会担心这个Docker有没有处理好僵尸进程的问题。</li>
<li>你也可以理解为一个木马，发一个指令就跑一个程序，而且跑的还有问题，我们不如直接SSH连接上运行这个程序，都比这个靠谱，当时很难受。</li>
</ul>
</li>
<li>Docker daemon？坑坑坑！</li>
<li>鸡肋的Docker Image：一个不那么圆的轮子<ul>
<li>这个东西都是扯淡，因为我们内网一秒好几百M，省出10M的磁盘空间对我们来说是省几毫秒。</li>
<li>Docker的核心问题，或者是Image核心问题一是编译代码，二是打包成镜像发出去。怎么编译，怎么打包，这两件事是完全分开的，不应该搀在一起。</li>
<li>我们第一个镜像是打包完3G多，当时我们震惊了，这么辛苦写了这么多的代码吗，运行程序就达到3G。</li>
</ul>
</li>
<li>实践1：Build&amp;Package&amp;Run<ul>
<li>如果不产生价值你是在给Docker打工，盲目跟从Docker，他说这么干就这么干，他如果改了你这些东西就浪费了。如果你抓住本质，Docker怎么改对你就没有影响。</li>
</ul>
</li>
<li>实践2：去其糟粕，取其精华</li>
<li>实践3：工具化、代码化、半自动化<ul>
<li>代码化把人才知道的东西都写到机器里，对我来说不关心数据库的IP是什么，我只要知道它的域名找到对应的机器连接就行了。</li>
<li>这是最关键的点，不管你怎么干，你最后都要干一个类似的事，就是把生产环境代码化。</li>
<li>搞了一个小工具，这些工具是提供原子性的操作。up是启动，down是干掉，rollingupdate是一个个更新，保证每个更新完了可以启动进行下一个更新，对研发来说就需要这个东西，他们都理解。</li>
</ul>
</li>
<li>总结一下，第一点，想要把容器化、或想要把分布式系统做好，你要定死接口，放手实现，对你来说只需要三个接口，build、package、run，能满足效果，能运行就行了，每个项目都有不同的需求，不可能强求它完全一致。</li>
<li>第二个，生产环境容器化。</li>
<li>针对DEVOPS实现代码化、工具化，最后实现自动化就行了</li>
</ul>
</li>
<li><p><a href="http://www.codeproject.com/Articles/33052/Visual-Representation-of-SQL-Joins?utm_source=wanqu.co&amp;utm_campaign=Wanqu+Daily&amp;utm_medium=website" target="_blank" rel="external">Visual Representation of SQL Joins - CodeProject</a> - 畫圖解釋了 inner join、left join、right join、outer join 等的區別，文章最後也給出了示例表格，解釋得還算清楚。</p>
</li>
<li><p><a href="http://blog.jobbole.com/100349/" target="_blank" rel="external">如果有人问你数据库的原理，叫他看这篇文章</a></p>
</li>
</ul>
<h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ul>
<li><p><a href="http://www.cockos.com/licecap/" target="_blank" rel="external">Cockos Incorporated | LICEcap</a> - 在 MAC 及 Windows 上錄製 gif 圖檔的免費工具。</p>
</li>
<li><p><a href="https://screentogif.codeplex.com/" target="_blank" rel="external">ScreenToGif - Home</a> - Windows 上面 gif 製作的好工具。</p>
</li>
<li><a href="http://www.pixelegg.me/capture-gif" target="_blank" rel="external">Capture Gif - The most simple way to make Screen Recording into GIF on Mac OS X</a> - MAC 上面錄製 GIF 的好工具，可以自定畫面範圍。免費版本限制 20秒，無法調整每張圖片的速度。</li>
<li><p><a href="https://itunes.apple.com/tw/app/giphy-capture.-the-gif-maker/id668208984?l=zh&amp;mt=12" target="_blank" rel="external">GIPHY CAPTURE. The GIF Maker：在 Mac App Store 上的 App</a> - MAC 上面的免費 GIF 製作工具，提供正轉、正轉倒轉、倒轉等模式，但限制視窗大小。</p>
</li>
<li><p><a href="https://github.com/comdan66/weather" target="_blank" rel="external">comdan66/weather: 想查詢每個地方的天氣嗎！？藉由 Google Maps API 的地圖服務，以及中央氣象局網站的天氣預報，讓你快速輕鬆的查詢台灣 368 個鄉鎮的天氣概況！</a></p>
</li>
</ul>
<h3 id="PHP-Library"><a href="#PHP-Library" class="headerlink" title="PHP Library"></a>PHP Library</h3><ul>
<li><p><a href="https://github.com/muxx/slack-redmine-bot" target="_blank" rel="external">muxx/slack-redmine-bot: Redmine issue name expender for Slack</a></p>
</li>
<li><p><a href="https://github.com/eliangcs/http-prompt" target="_blank" rel="external">eliangcs/http-prompt: HTTPie + prompt_toolkit = an interactive command-line HTTP client featuring autocomplete and syntax highlighting</a></p>
</li>
<li><p><a href="https://docs.google.com/presentation/d/1BOnouihveYVoqmlnf59bDeRMfexCw92AVbEHZO9ir8g/edit#slide=id.g35f391192_00" target="_blank" rel="external">物件導向基礎與物件導向設計入門 (PHP the day)</a></p>
</li>
<li><p><a href="http://robo.li/" target="_blank" rel="external">Robo</a> - Modern Task Runner for PHP</p>
<ul>
<li>寫 PHP 工作程式的好工具好 Framework</li>
<li>聖佑寫的 Robo ZSH-plugin - <a href="https://github.com/shengyou/robo-zsh-plugin" target="_blank" rel="external">A oh-my-zsh plugin for robo command completion.</a></li>
</ul>
</li>
<li><p><a href="http://www.slideshare.net/shootingstar1020/phpspec-tdd-phpday25by" target="_blank" rel="external">PhpSpec TDD 紅燈-綠燈-重構流程-PHP也有day#25<em>by</em>閃亮亮</a></p>
<ul>
<li><a href="https://github.com/dj1020/Phpspec_Bowling_Kata_TDD/commits/master" target="_blank" rel="external">Commits · dj1020/Phpspec_Bowling_Kata_TDD</a></li>
</ul>
</li>
<li><p><a href="https://github.com/EFTEC/BladeOne" target="_blank" rel="external">EFTEC/BladeOne: The standalone version Blade Template Engine from Laravel in a single php file</a></p>
</li>
<li><p><a href="http://www.phpclasses.org/package/9831-PHP-Resize-images-to-a-given-width-and-height.html#usage" target="_blank" rel="external">PHP Image Sizer: Resize images to a given width and height - PHP Classes</a></p>
</li>
<li><p><a href="http://www.phpclasses.org/package/9828-PHP-Identify-files-via-MIME-type-and-file-signatures.html#usage" target="_blank" rel="external">PHP Detect File Type: Identify files via MIME type and file signatures - PHP Classes</a></p>
</li>
</ul>
<h3 id="前端網頁開發工具"><a href="#前端網頁開發工具" class="headerlink" title="前端網頁開發工具"></a>前端網頁開發工具</h3><ul>
<li><p><a href="https://blog.prottapp.com/" target="_blank" rel="external">Prott Blog - All you need for mobile prototyping</a> - Prototype 驗證工具</p>
</li>
<li><p><a href="http://bunnymoon0326.weebly.com/1/post/2014/03/css-px-pt-em-rem.html" target="_blank" rel="external">CSS 字型大小 px, pt , em , rem,% - HELLO</a></p>
</li>
<li><p><a href="https://speakerdeck.com/kurotanshi/di-ci-yong-vue-dot-js-jiu-ai-shang-gai" target="_blank" rel="external">第一次用 Vue.js 就愛上 [改] // Speaker Deck</a></p>
<ul>
<li><a href="https://www.youtube.com/watch?v=jXdZlbH_ut8&amp;feature=youtu.be" target="_blank" rel="external">Vuedinner #1 第一次用 Vue.js 就愛上 by Kuro - YouTube</a></li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MoClippings #7 在溝通的過程中，就把事情做完，似乎是個趨勢]]></title>
      <url>https://usedfire.net/Clippings/2016/MoClippings-7/</url>
      <content type="html"><![CDATA[<pre><code>發刊日 : 2016/04/25 - 2016/05/08
</code></pre><hr>
<h2 id="資訊知事"><a href="#資訊知事" class="headerlink" title="資訊知事"></a>資訊知事</h2><ul>
<li>企業IM<ul>
<li><a href="http://work.weixin.qq.com/" target="_blank" rel="external">企業微信</a><ul>
<li>1.微信企业号和企业微信不冲突。</li>
<li>2.可选“回执”方便办公。</li>
<li>3.企业微信增加“休息”功能。</li>
<li>4.企业微信是免费的。</li>
<li>新聞：<a href="http://www.huxiu.com/article/145683/1.html" target="_blank" rel="external">企业微信1.0版正式发布，老板喊你来微信打卡、请假啦</a><ul>
<li>在移动OA功能方面，结合了公告、考勤、请假、报销等功能。企业微信团队表示，下一阶段会着重于API接口的开放。</li>
</ul>
</li>
</ul>
</li>
<li><a href="http://www.dingtalk.com/index-b.html" target="_blank" rel="external">阿里釘釘</a><a id="more"></a></li>
</ul>
</li>
<li><p><a href="https://blog.gslin.org/archives/2016/04/24/6524/%E9%98%BB%E6%93%8B-pixnet-%E7%9A%84%E4%B8%89%E5%88%86%E9%90%98%E9%96%92%E7%BD%AE%E8%A6%96%E7%AA%97/" target="_blank" rel="external">阻擋 PIXNET 的三分鐘閒置視窗</a> - 妳也討厭 PIXNET 也開始那很礙眼的蓋台廣告嘛？可以透過文中的方法做排除唷！</p>
<ul>
<li><a href="https://github.com/gorhill/uBlock" target="_blank" rel="external">uBlock</a> - github</li>
<li><a href="https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm" target="_blank" rel="external">uBlock Chrome Extension</a></li>
<li><a href="https://addons.mozilla.org/zh-TW/firefox/addon/ublock-origin/" target="_blank" rel="external">Firefox Add-ons</a></li>
</ul>
</li>
<li><p><a href="https://zh.wikipedia.org/wiki/%E8%B4%AD%E4%B9%B0%E5%8A%9B%E5%B9%B3%E4%BB%B7" target="_blank" rel="external">相對購買力指標</a> - 購買力平價（英語：Purchasing Power Parity，縮寫PPP），又稱相對購買力指標，是一種根據各國不同的價格水準計算出來的貨幣之間的等值係數，使我們能夠在經濟學上對各國的國內生產總值進行合理比較，這種理論匯率與實際匯率可能有很大的差距。</p>
</li>
<li><p><a href="http://tpu.thinkpower.com.tw/tpu/" target="_blank" rel="external">ThinkPower University 昕力大學</a> - 透過 ThinkPower 公司內 100 位技術同仁無私分享，將工作中所學習到的專案經驗、新技術研究心得、從錯誤中學到的寶貴經驗以及其他相關的技術知識，都發佈在這裡，希望能跟大家一起討論交流，一起成長。</p>
</li>
<li><p><a href="http://www.bnext.com.tw/article/view/id/39414" target="_blank" rel="external">[圖解] Apple Pay 中的 Token 到底是什麼？Visa 用一張圖告訴你</a></p>
<ul>
<li><img src="TuVpln4.png" alt=""></li>
<li><ol>
<li>Visa不知曉刷卡者身份，沒有個資疑慮</li>
</ol>
</li>
<li><ol>
<li>Visa Token服務「免費」，不增加金融業者成本</li>
</ol>
</li>
<li><ol>
<li>伺服器地點不影響效率，Visa不會為台灣建伺服器</li>
</ol>
</li>
<li><ol>
<li>政府不該管制，Apple與Google等科技業者應有最終選擇權</li>
</ol>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="專案管理"><a href="#專案管理" class="headerlink" title="專案管理"></a>專案管理</h2><ul>
<li>Joey <a href="https://www.youtube.com/watch?v=wlI3zZJbd_A" target="_blank" rel="external">Scrum Estimation Model Quickly Preview</a><ul>
<li>文字版：<a href="https://dotblogs.com.tw/hatelove/2015/12/19/scrum-project-schedule-estimation" target="_blank" rel="external">Scrum Estimation－如何估算專案時程</a></li>
</ul>
</li>
</ul>
<hr>
<h2 id="技術知事"><a href="#技術知事" class="headerlink" title="技術知事"></a>技術知事</h2><h3 id="開發心法"><a href="#開發心法" class="headerlink" title="開發心法"></a>開發心法</h3><ul>
<li><a href="http://www.techtalk.tw/" target="_blank" rel="external">http://www.techtalk.tw/</a> - 討論 Java, 程式語言, 軟體工程以及其他科技相關議題的中文 Podcast</li>
<li><p><a href="https://softnshare.wordpress.com/" target="_blank" rel="external">SOFT &amp; SHARE</a> - 告訴我, 我會忘記; 教導我, 我只是記得; 讓我深入其中, 我便學會. – 另外一個致力於技術分享、閱讀、討論的社團。</p>
</li>
<li><p><a href="https://blog.wu-boy.com/2016/04/php-javascript-css-coding-style/" target="_blank" rel="external">來聊聊 PHP &amp; JavaScript &amp; CSS 的 Coding Style</a> - 關於 PHP 及 JavaScript 的 Coding Style 描述的簡報，值得開始接觸的人閱讀。</p>
<ul>
<li>Slide - <a href="https://www.slideshare.net/appleboy/php-javascript-css-coding-style" target="_blank" rel="external">PHP &amp; JavaScript &amp; CSS Coding style</a></li>
</ul>
</li>
<li><p><a href="http://www.inside.com.tw/2015/02/16/coding-fast-bug-less" target="_blank" rel="external">大神工程師教你怎麼練就「coding 速度快、bug 數量少」的境界</a></p>
  <figure class="highlight gcode"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">for<span class="comment">(;;)</span></div><div class="line">    practics<span class="comment">()</span>;</div></pre></td></tr></table></figure>
<p>  如果你在最初編寫程式時沒有註意可重用性，不要欺騙自己相信程式可以很神奇地被重用。相反，應該從一種情形著手，保持程式的具體性。如果值得修改程式讓它一般化，那麼應該做好徹底重寫的準備。</p>
</li>
<li><p><a href="https://blog.wu-boy.com/2016/04/git-flow-tips/" target="_blank" rel="external">Git Flow 與團隊合作</a> - 關於 Git 在團隊合作開發時的對策及方案。</p>
<ul>
<li>Slide - <a href="http://www.slideshare.net/appleboy/git-flow-61442567" target="_blank" rel="external">Git flow 與團隊合作</a></li>
<li><a href="https://blog.wu-boy.com/2011/03/git-%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6-branch-model-%E5%88%86%E6%94%AF%E6%A8%A1%E7%B5%84%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%B4%B9/" target="_blank" rel="external">Git 版本控制 branch model 分支模組基本介紹</a></li>
</ul>
</li>
<li><p><a href="https://www.phproundtable.com/" target="_blank" rel="external">PHP Roundtable</a> - 很多 PHP 基礎概念的 podcast</p>
<ul>
<li><a href="https://github.com/PHPRoundtable/show-notes" target="_blank" rel="external">https://github.com/PHPRoundtable/show-notes</a></li>
</ul>
</li>
</ul>
<h3 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h3><ul>
<li><a href="https://blog.wu-boy.com/2016/04/introduction-to-docker/" target="_blank" rel="external">Docker 基礎介紹與實戰</a><ul>
<li>Slide - <a href="https://www.slideshare.net/appleboy/docker-61214768" target="_blank" rel="external">Docker 基礎介紹與實戰</a></li>
</ul>
</li>
</ul>
<h3 id="PHP-Library-or-工具"><a href="#PHP-Library-or-工具" class="headerlink" title="PHP Library or 工具"></a>PHP Library or 工具</h3><ul>
<li><p><a href="https://github.com/hirak/prestissimo" target="_blank" rel="external">Prestissimo (composer plugin)</a> - 這個 composer plugin (以 global 安裝)，可以幫忙以平行安裝做下載的時間。</p>
</li>
<li><p><a href="http://laradock.github.io/laradock/" target="_blank" rel="external">LaraDock</a> - Like Laravel Homstead but for Docker instead of Vagrant.  把 Laravel 的 Homestead 做成 Docker 的專案。</p>
</li>
<li><p><a href="https://bosnadev.com/2015/03/07/using-repository-pattern-in-laravel-5/" target="_blank" rel="external">Using Repository Pattern in Laravel 5</a></p>
<ul>
<li><img src="4MwWwQa.png" alt=""></li>
<li>Repository pattern separates the data access logic and maps it to the business entities in the business logic. Communication between the data access logic and the business logic  is done through interfaces.</li>
<li>Implement <a href="https://github.com/andersao/l5-repository" target="_blank" rel="external">I5-Repository</a></li>
</ul>
</li>
<li><p><a href="https://flywaydb.org/" target="_blank" rel="external">flywaydb</a> - Evolve your Database Schema easily and reliably across all your instances. 資料庫的版本控制工具。支援了非常多的資料庫管理系統。</p>
</li>
<li><p><a href="http://www.codeceo.com/article/php-mvc-framework-case.html" target="_blank" rel="external">手把手编写自己的 PHP MVC 框架实例教程</a> - 很輕量簡易的MVC結構，對於初學 MVC 的人可以細看瞭解。</p>
</li>
<li><p><a href="https://github.com/line/line-bot-sdk-php" target="_blank" rel="external">LINE BOT SDK - PHP</a> - 官方的 LINE BOT SDK for PHP</p>
</li>
<li><p>Static site &amp; blog generator 靜態網站網頁產生工具</p>
<ul>
<li><a href="http://themsaid.github.io/katana/" target="_blank" rel="external">katana</a><ul>
<li>Laravel</li>
<li>Blade</li>
</ul>
</li>
<li><a href="http://jigsaw.tighten.co/" target="_blank" rel="external">Jigsaw</a><ul>
<li>Laravel</li>
<li>Blade</li>
</ul>
</li>
<li><a href="https://sculpin.io/" target="_blank" rel="external">Sculpin</a><ul>
<li>PHP</li>
<li>Twig</li>
</ul>
</li>
<li>各個靜態頁面產生的總評比網站 <a href="https://www.staticgen.com/" target="_blank" rel="external">Top Open-Source Static Site Generators</a></li>
</ul>
</li>
</ul>
<h3 id="前端網頁開發工具"><a href="#前端網頁開發工具" class="headerlink" title="前端網頁開發工具"></a>前端網頁開發工具</h3><ul>
<li><p><a href="http://www.slideshare.net/kurotanshi/vuejs-62131923" target="_blank" rel="external">第一次用 Vue.js 就愛上</a> - 關於 Vue.js 的入門初學簡報，由 Kuro 所撰寫。</p>
</li>
<li><p><a href="https://github.com/kkbruce/TypeScript/blob/master/doc/zh-tw/Handbook.md" target="_blank" rel="external">TypeScript教學手冊</a></p>
</li>
<li><p><a href="http://fullcalendar.io/" target="_blank" rel="external">FullCalendar</a> - A JavaScript event calendar. Customizable and open source. 一個以 JavaScript 完成的月曆系統。</p>
<ul>
<li><a href="http://fullcalendar.io/scheduler/" target="_blank" rel="external">Scheduler</a> - A premium add-on for displaying events and resources.</li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[[Hexo] 使文章依文章分類為資料夾名稱置放]]></title>
      <url>https://usedfire.net/Notes/Hexo/make-hexo-post-category-by-folder/</url>
      <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>轉戰 Hexo 並且開始剛開始以 Hexo 做完技術或資訊相關知識分享的部落格平台，已經有一兩個禮拜了，隨著文章數目越來越多，開始發現，hexo 在原始的方法中，文章一多之後，將很難管理 <code>post</code> 這個資料夾的文章原始檔案。翻了一遍<a href="https://hexo.io/zh-tw/docs/writing.html" target="_blank" rel="external">官方教學</a>提到的方法，也僅提到可以將 <code>_config.yml</code> 中的 <code>new_post_name</code> 新文章檔案名稱的參數，修改為以檔案產生日期為檔名，來作為檔案管理方便尋找。但這方法在文章非常多的時候，還是會造成不容易尋找。為了找解決方案，因此出現了這篇筆記。 <a id="more"></a></p>
<h2 id="二、最終結果"><a href="#二、最終結果" class="headerlink" title="二、最終結果"></a>二、最終結果</h2><p>在透過相關設定後，文章的網址將設定為像以下的結構：</p>
<h3 id="一-hexo-文章網址的結構如下"><a href="#一-hexo-文章網址的結構如下" class="headerlink" title="(一) hexo 文章網址的結構如下"></a>(一) hexo 文章網址的結構如下</h3><figure class="highlight dust"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="xml">http://</span><span class="template-variable">&#123;domain.com&#125;</span><span class="xml">/</span><span class="template-variable">&#123;folder_name&#125;</span><span class="xml">/</span><span class="template-variable">&#123;title_name&#125;</span><span class="xml">/</span></div></pre></td></tr></table></figure>
<p>說明：</p>
<pre><code>domain name: 你的網域名稱
folder name: 設定的資料夾名稱
title name: 文章的標題名稱
</code></pre><h3 id="二-hexo-source-post-資料夾底下的結構如下"><a href="#二-hexo-source-post-資料夾底下的結構如下" class="headerlink" title="(二) hexo source/_post 資料夾底下的結構如下"></a>(二) hexo source/_post 資料夾底下的結構如下</h3><p><img src="make-hexo-post-category-by-folder＿01.png" alt=""></p>
<p>以本站的文章為例，我的 <a href="https://usedfire.net/categories/Clippings/">Clippings 剪報類文章</a>，結構上在 <code>_post</code> 底下有兩層資料夾，除了第一層 Clippings 為資料夾名稱外，還再加上以 2016 也就是依年度再做一次資料夾分類。而其他筆記類的，當然也就可以依據筆記類型、文章屬性等做資料夾分層分類，如此在找文章原始檔的時候，便可以較輕易的找到所需要的內容。</p>
<h2 id="三、Hexo-設定"><a href="#三、Hexo-設定" class="headerlink" title="三、Hexo 設定"></a>三、Hexo 設定</h2><h3 id="一-hexo-config-yml-設定檔設定"><a href="#一-hexo-config-yml-設定檔設定" class="headerlink" title="(一) hexo _config.yml 設定檔設定"></a>(一) hexo _config.yml 設定檔設定</h3><p>找到 _config.yml 檔做編輯，將 URL 的部分一下做設定：</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="string">url:</span> <span class="string">https:</span><span class="comment">//&#123;domain name&#125;</span></div><div class="line"><span class="string">root:</span> /</div><div class="line"><span class="string">permalink:</span> :title/</div></pre></td></tr></table></figure>
<p>可以看到，關於 <code>permalink</code> 永久連結的部分，只設定了 <code>:title/</code> ，這部分有兩個說明：</p>
<ol>
<li>在 hexo 的環境中，目前實驗出來的結果知道，hexo在產生文章網址的時候，會以 <code>_post</code> 資料夾起，直到你的文章原始檔的路徑，視為 <code>title</code> 文章名稱，同樣以我的 <a href="https://usedfire.net/categories/Clippings/">Clippings 剪報類文章</a> 為例子，我把創刊號放在 <code>_post</code> 下的路徑「Clippings/2015/MoClippings-1.md」，因此 <code>hexo</code> 會認為該篇文章的文章名稱為 「Clippings/2015/MoClippings-1」。</li>
<li>在 <code>permalink</code> 我在 <code>:title</code> 的後面加了 <code>/</code> 符號，這部分是因為<strong>我設定了</strong> <code>post_asset_folder = true</code> ，意思是產生文章的時候，順便產生與文章同名的資料夾。目的是為了管理資源，使同一篇文章的圖片或檔案，都收錄在同一資料夾中。因此，如果沒有加上 <code>/</code> 符號，在做 hexo 文章產出 <code>hexo generate</code> 的時候，會<strong>發生 hexo 有錯誤</strong>，顯示某些檔案不存在或不為資料夾。</li>
</ol>
<h3 id="二-hexo-post-下資料夾設定"><a href="#二-hexo-post-下資料夾設定" class="headerlink" title="(二) hexo _post 下資料夾設定"></a>(二) hexo _post 下資料夾設定</h3><p>在 <code>_post</code> 資料夾下，基本上也僅需要定義好各個資料夾名稱，把相對應的文章做妥善的資料夾分類即可。</p>
<p>同樣在以我的 <a href="https://usedfire.net/categories/Clippings/">Clippings 剪報類文章</a> 為例子，因為我的剪輯一個月可能就兩三篇了，一年會有三四十篇同質的文章，因此我把它設計為文章分類下，再建立年份資料夾，這樣未來就不會產生太多文章而找不到自己想找的內容。</p>
<p>當然，如果是其他類型的文章，也可以做不一樣的分類，這部分自由度就相當高了。</p>
<h3 id="三-Hexo-版本"><a href="#三-Hexo-版本" class="headerlink" title="(三) Hexo 版本"></a>(三) Hexo 版本</h3><p>這篇文章目前在 <code>Hexo 3.2.0</code> 的環境驗證測試正常。如為其他版本，需要再額外驗證。</p>
<h2 id="四、結論"><a href="#四、結論" class="headerlink" title="四、結論"></a>四、結論</h2><ol>
<li><p>就 Hexo 來說，我們是以自定義的文章分類名稱作為資料夾名稱，這與 <code>Hexo</code> 的 <code>Front-matter</code> 裡頭設定的文章分類 <code>categories</code> 是不一樣的，本來還曾經測試過設定 <code>permalink</code> 為 <code>:category/:title/</code>，但執行 <code>hexo generate</code> 之後，產生的連結會是文章內 <code>Front-matter</code> 設定的分類資料夾再加上 <code>_post</code> 後各個資料夾的名稱加<code>title</code>為連結名稱，這重複了，因此驗證 hexo 並不會看到資料夾名稱與 <code>Front-matter</code> 設定的文章類別一致，就不再產生資料夾。所以才出現這篇文章的解法。</p>
</li>
<li><p>如大家習慣以 <code>hexo new draft</code> 作草稿編輯，那在進行 <code>hexo publish {title}</code> 後，hexo 僅會將原本在 <code>_draft</code> 的文章搬到 <code>_post</code> 在搬妥之後還需要自行建立對應的資料夾並搬過去的動作，這部分比較麻煩一些。</p>
</li>
</ol>
<p>希望這篇文章可以幫助到一些人。</p>
<p>P.S. 在快寫文這篇文章之後才發現，點燈坊也有一篇類似的文章<a href="http://oomusou.io/hexo/hexo-uri-category/" target="_blank" rel="external">如何使Hexo以文章分類為URI?</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MoClippings #6 唱歌跳舞 加 VR ？！有搞頭嗎？]]></title>
      <url>https://usedfire.net/Clippings/2016/MoClippings-6/</url>
      <content type="html"><![CDATA[<pre><code>發刊日 : 2016/04/08 - 2016/04/22
本期包含：資訊知事、行銷推廣、專案管理、資訊知事、技術知事
</code></pre><hr>
<h2 id="資訊知事"><a href="#資訊知事" class="headerlink" title="資訊知事"></a>資訊知事</h2><ul>
<li><p><a href="http://forum.gamer.com.tw/C.php?bsn=60599&amp;snA=8760" target="_blank" rel="external">虛擬實境裝置 HTC Vive 開箱＆硬體介紹</a></p>
</li>
<li><p><a href="http://store.steampowered.com/app/382110/" target="_blank" rel="external">Steam - Virtual Desktop</a></p>
</li>
</ul>
<hr>
<h2 id="專案管理"><a href="#專案管理" class="headerlink" title="專案管理"></a>專案管理</h2><ul>
<li><p><a href="http://36kr.com/p/5044602.html" target="_blank" rel="external">十六条创业黑暗森林法则</a></p>
</li>
<li><p><a href="https://www.hbrtaiwan.com/blog_content_705.html" target="_blank" rel="external">想讓開會更順利？用這些圖表和清單就對了</a></p>
<ul>
<li><img src="/Clippings/2016/MoClippings-6/noz7OBt.jpg" alt="[想讓開會更順利？用這些圖表和清單就對了]" title="[想讓開會更順利？用這些圖表和清單就對了]">
<a id="more"></a></li>
</ul>
</li>
<li><a href="https://medium.com/life-learning/23-best-productivity-hacks-of-the-year-8cd649b38a9f#.mf2szixob" target="_blank" rel="external">23 Best Productivity Hacks of the Year</a><ul>
<li><ol>
<li>Down With To-Dos, In With Scheduling</li>
</ol>
</li>
<li>關掉手機的 Push Notifications</li>
<li>To-do lists 是邪惡的，你應該把你想做的事情全部排程</li>
<li>先做你最不想做的事情</li>
<li>如果有一件事兩分鐘內就可以解決，馬上做它</li>
</ul>
</li>
</ul>
<hr>
<h2 id="技術知事"><a href="#技術知事" class="headerlink" title="技術知事"></a>技術知事</h2><h3 id="Redmine"><a href="#Redmine" class="headerlink" title="Redmine"></a>Redmine</h3><ul>
<li><p><a href="https://github.com/centosadmin/redmine_chat_telegram" target="_blank" rel="external">Redmine Chat Telegram plugin</a> - 利用 Telegram 做 Redmine 的操作</p>
<ul>
<li><a href="http://www.redmine.org/plugins/redmine_chat_telegram" target="_blank" rel="external">http://www.redmine.org/plugins/redmine_chat_telegram</a></li>
</ul>
</li>
<li><p><a href="https://github.com/okkez/redmine_full_text_search" target="_blank" rel="external">Redmine Full text search plugin</a></p>
<ul>
<li>MySQL(MariaDB) with Mroonga</li>
<li>PostgreSQL with Pgroonga</li>
</ul>
</li>
<li><p><a href="http://www.redmine.org/plugins/redmine_zxcvbn" target="_blank" rel="external">Redmine zxcvbn</a></p>
<ul>
<li><a href="https://github.com/schmidt/redmine_zxcvbn" target="_blank" rel="external">https://github.com/schmidt/redmine_zxcvbn</a></li>
</ul>
</li>
<li><a href="https://www.easyredmine.com/redmine-mindmap-plugin" target="_blank" rel="external">Redmine Mindmap</a></li>
</ul>
<h3 id="系統管理"><a href="#系統管理" class="headerlink" title="系統管理"></a>系統管理</h3><ul>
<li><p><a href="http://mroonga.org/" target="_blank" rel="external">mroonga</a> - 使 MySQL 支援全文搜索</p>
</li>
<li><p><a href="http://www.codeceo.com/article/nginx-php-config.html" target="_blank" rel="external">如何正确配置 Nginx + PHP</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen 80;</div><div class="line">    server_name foo.com;</div><div class="line"></div><div class="line">    root /path;</div><div class="line">    index index.html index.htm index.php;</div><div class="line"></div><div class="line">    location / &#123;</div><div class="line">        try_files $uri $uri/ /index.php$is_args$args;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    location ~ /.php$ &#123;</div><div class="line">        try_files $uri =404;</div><div class="line"></div><div class="line">        include fastcgi.conf;</div><div class="line">        fastcgi_pass 127.0.0.1:9000;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="開發心法"><a href="#開發心法" class="headerlink" title="開發心法"></a>開發心法</h3><ul>
<li><p><a href="http://www.slideshare.net/apigee/restful-api-design-second-edition" target="_blank" rel="external">RESTful API Design, Second Edition</a></p>
</li>
<li><p><a href="http://racksburg.com/choosing-an-http-status-code/" target="_blank" rel="external">Choosing an HTTP Status Code — Stop Making It Hard</a></p>
</li>
<li><p><a href="https://tw.twincl.com/programming/*641y" target="_blank" rel="external">簡明RESTful API設計要點</a></p>
</li>
<li><p><a href="http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html" target="_blank" rel="external">浏览器同源政策及其规避方法</a></p>
<ul>
<li>“同源政策”（same-origin policy）<ul>
<li>协议相同</li>
<li>域名相同</li>
<li>端口相同</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="測試工具"><a href="#測試工具" class="headerlink" title="測試工具"></a>測試工具</h3><ul>
<li><a href="https://github.com/dropbox/zxcvbn" target="_blank" rel="external">Dropbox-zxcvbn 密碼強度檢測</a><ul>
<li><a href="https://github.com/bjeavons/zxcvbn-php" target="_blank" rel="external">PHP-zxcvbn</a></li>
</ul>
</li>
</ul>
<h3 id="PHP-Library-or-工具"><a href="#PHP-Library-or-工具" class="headerlink" title="PHP Library or 工具"></a>PHP Library or 工具</h3><ul>
<li><p><a href="http://www.codeceo.com/article/php-design-patterns.html" target="_blank" rel="external">PHP 中的设计模式详解</a></p>
</li>
<li><p><a href="https://www.dreamfactory.com/" target="_blank" rel="external">DreamFactory</a></p>
<ul>
<li>DreamFactory(™) is an open source REST API backend for mobile</li>
<li><a href="https://github.com/dreamfactorysoftware/dreamfactory" target="_blank" rel="external">https://github.com/dreamfactorysoftware/dreamfactory</a></li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Sublime：針對特定副檔名設定預設樣式( Syntax ) Highlight]]></title>
      <url>https://usedfire.net/Notes/Sublime/set-sublime-text-extensions-default-syntax/</url>
      <content type="html"><![CDATA[<p>這陣子因為在修改舊版 php 程式，有些程式的副檔名並不是以 .php 命名，是以 .inc 之類的形式存在，因此以 Sublime 開啟的時候，會以預設的樣式( Syntax )，開始而不是 PHP 的樣式。而這篇內容就是記錄怎麼在 Sublime 下設定特定的副檔名文件，以呈現所設定的樣式呈現。</p>
<a id="more"></a>
<h2 id="1-開啟無法預設樣式的檔案"><a href="#1-開啟無法預設樣式的檔案" class="headerlink" title="1. 開啟無法預設樣式的檔案"></a>1. 開啟無法預設樣式的檔案</h2><p>以下圖來說，由於該 php 程式副檔名為 inc ，因此在開啟時並無法被判斷為 PHP 程式，導致呈現黯淡無光的狀態，沒有套用到預設的 syntex。</p>
<p><img src="sublime_01.png" alt=""></p>
<h2 id="2-手動設定樣式"><a href="#2-手動設定樣式" class="headerlink" title="2. 手動設定樣式"></a>2. 手動設定樣式</h2><p>在 menu -&gt; View -&gt; Syntax -&gt; 選擇設定要的語言，或在畫面右下角直接選擇 Syntax 。</p>
<p><img src="sublime_02.png" alt=""></p>
<p>設定完成後，即可顯示正確的顏色。</p>
<p><img src="sublime_03.png" alt=""></p>
<h2 id="3-設定使該副檔名未來皆以相同-Syntax-顯示"><a href="#3-設定使該副檔名未來皆以相同-Syntax-顯示" class="headerlink" title="3. 設定使該副檔名未來皆以相同 Syntax 顯示"></a>3. 設定使該副檔名未來皆以相同 Syntax 顯示</h2><p>在目前已經手動設定好樣式的狀態下，選擇：</p>
<ul>
<li>Windows: Prefences &gt; Setting-More &gt; Syntax Specific - User</li>
<li>OSX: Sublime Text &gt; Prefences &gt; Setting-More &gt; Syntax Specific - User</li>
</ul>
<p><img src="sublime_04.png" alt=""></p>
<p>可以發現出現一個新的檔案，以目前的 Syntax 設定為 PHP 為例，目前的檔名為 <code>PHP.sublime-settings</code> 為空白內容。這時候只要加上如下的內容，並存檔後即可。之後只要開啟副檔名為 php 或 inc 的文件，就都會以 PHP 的這個 Syntax 顯示。</p>
<p><img src="sublime_05.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    // Which file extensions go with this file type?</div><div class="line">    &quot;extensions&quot;:</div><div class="line">    [</div><div class="line">        &quot;php&quot;,</div><div class="line">        &quot;inc&quot;</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="4-附註："><a href="#4-附註：" class="headerlink" title="4. 附註："></a>4. 附註：</h2><p>如果之後有需要修改，或增加也可以再次開啟。其路徑置放於：</p>
<ul>
<li>Windows: C:\Users{User Name}\AppData\Roaming\Sublime Text 3\Packages\User\</li>
<li>MAC OSX: ~/Library/Application Support/Sublime Text 3/Packages/User</li>
</ul>
<p>只要找到對應要修改的 Syntax 即可。</p>
<h2 id="參考連結："><a href="#參考連結：" class="headerlink" title="參考連結："></a>參考連結：</h2><ol>
<li><a href="http://www.granneman.com/webdev/editors/sublime-text/configuring-sublime-text/" target="_blank" rel="external">Configuring Sublime Text</a></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MoClippings #5 不出門也能拿美國碩士學歷？！]]></title>
      <url>https://usedfire.net/Clippings/2016/MoClippings-5/</url>
      <content type="html"><![CDATA[<pre><code>發刊日 : 2016/03/15 - 2016/04/08
本期包含：資訊知事、行銷推廣、專案管理、技術知事
</code></pre><hr>
<h1 id="資訊知事"><a href="#資訊知事" class="headerlink" title="資訊知事"></a>資訊知事</h1><ul>
<li><p><a href="https://theinitium.com/article/20160403-dailynews-Coursera/" target="_blank" rel="external">在家就能拿美國碩士，Coursera報名開始</a></p>
<ul>
<li>美國伊利諾伊大學香檳分校（UIUC）率先在 Coursera 上推出了完整的數據科學碩士項目（Master of Computer Science in Data Science）。無論你在哪裏，只要符合校方要求被錄取，就可以通過在線學習來拿到碩士學位。</li>
<li><a href="https://cs.illinois.edu/news/mooc-based-ms-data-science" target="_blank" rel="external">https://cs.illinois.edu/news/mooc-based-ms-data-science</a></li>
</ul>
</li>
<li><p><a href="http://www.inside.com.tw/2015/07/26/rework" target="_blank" rel="external">寫碼容易，讀碼難：工程師 千萬別重寫程式碼</a></p>
<ul>
<li>新程式碼一定比舊程式碼好？ NO，重寫可能會帶來更大的風險</li>
<li>當你覺得眼前的舊程式碼很爛時，該怎麼辦？<ul>
<li>1、程式碼的結構有問題:重構</li>
<li>2、程式碼的效率不高：優化速度的1％工作量，會讓你獲得99％的爆炸性提高</li>
<li>3、程式碼寫得很醜：重構語法</li>
</ul>
</li>
<li>從頭開始再寫一遍並不意味著你會寫出比以前更好的程式碼。因為你沒有參與到上一個版本的創建，所以你其實根本就不算有經驗。一旦你準備打掉重寫，你可能會再犯一遍版本一犯過的錯，甚至會產生更多的新問題。<a id="more"></a></li>
</ul>
</li>
<li><p><a href="http://www.infoq.com/cn/articles/every-architect-should-study-conway-law" target="_blank" rel="external">每个架构师都应该研究下康威定律</a></p>
<ul>
<li>注意，在系统真正地投入生产使用之前，再好的架构都只是假设，产品越晚被使用者使用，失败的成本和风险就越高，而小步行进，通过MVP快速实验，获取客户反馈，迭代演化产品，能有效地减少失败的成本和风险。</li>
<li><a href="http://www.csdn.net/article/2015-10-24/2826028" target="_blank" rel="external">58同城沈剑：好的架构源于不停地衍变，而非设计</a></li>
<li><a href="http://blog.dataman-inc.com/untitled-10/" target="_blank" rel="external">宜人贷系统架构–高并发下的进化之路</a></li>
</ul>
</li>
<li><p><a href="http://school.soft-arch.net/blog/101712/lean-perspective-of-multitasking" target="_blank" rel="external">多工切換：有趣的 Lean 觀點</a></p>
<ul>
<li>以電腦運作原理來看，多工、工作切換，代價是 context switch 的 overhead。所以，近代敏捷開發方法論，總是希望在制度設計上盡量降低工作切換，Lean Thinking 提到的一項實驗，違反直覺的第二種方法，為什麼反而比較快（儘管這可能只是後見之明）。不過，我們可能要重新思考「工作切換」這件事情。不能只從微觀的局部角度，更要從整體、flow 的角度去檢視。</li>
</ul>
</li>
<li><p><a href="http://buzzorange.com/techorange/2016/03/30/before-study-software-what-ability-to-be-provided-with/" target="_blank" rel="external">想看書自學軟體工程？就從這 6 本輕鬆書打造入門款概念</a></p>
<ul>
<li>書單：<ol>
<li><a href="http://m.sanmin.com.tw/product/index/99c155g7z100n79v103m66g104d129psmfvuz267jlw" target="_blank" rel="external">軟體項目成功之道</a></li>
<li><a href="http://www.books.com.tw/products/0010485217" target="_blank" rel="external">軟體構築美學</a></li>
<li><a href="http://www.books.com.tw/products/CN10279423" target="_blank" rel="external">程式師修煉之道 – 從小工到專家 – 亨特</a></li>
<li><a href="http://pan.baidu.com/share/link?uk=3878320221&amp;shareid=2600116234&amp;third=0&amp;adapt=pc&amp;fr=ftw" target="_blank" rel="external">高效程式員的 45 個習慣－敏捷開發修煉之道</a></li>
<li><a href="http://www.books.com.tw/products/0010579897" target="_blank" rel="external">Clean Code</a></li>
<li><a href="http://www.books.com.tw/products/0010254508" target="_blank" rel="external">人月神話</a> (你沒看錯，這不是只給管理者看的屁話，裡面也有歷久不衰的設計建議）</li>
</ol>
</li>
<li><a href="https://91-tdd.hackpad.com/91–SCin8rM6vpI" target="_blank" rel="external">軟體開發書單</a></li>
</ul>
</li>
<li><p><a href="http://hk.thenewslens.com/post/305094/" target="_blank" rel="external">他一怒之下刪除11行程式碼 互聯網遭殃</a></p>
<ul>
<li>刪除短短11行程式碼，竟然會令Facebook、Reddit、Netflix及Spotify等大型網站出現錯誤？早前互聯網的一次意外，揭露了不少網站的弱點。</li>
</ul>
</li>
<li><p><a href="http://technews.tw/2016/04/01/tesla-model-3-released/" target="_blank" rel="external">特斯拉平價電動車款 Model 3 終於來了！售價訂為 3.5 萬美元</a></p>
</li>
<li><p><a href="https://pdwtaiwan.ongoodbits.com/2016/03/29/issue-25" target="_blank" rel="external">產品開發週刊 Issue #25</a></p>
<ul>
<li><a href="http://www.slideshare.net/seanellis/product-driven-growth-from-lean-product-meetup" target="_blank" rel="external">Product Driven Growth from Lean Product Meetup</a><ul>
<li>著名 Growth Hacker Sean Ellis 分享他對於以產品為主的成長的心得，投影片內有滿多指引在哪個階段該做怎樣的事情，問什麼問題。我覺得最有收穫的是在找 Product/Market Fit 的時候，應該：<ol>
<li>找到『非用不可』的用戶：<ul>
<li>為什麼他們要找新產品</li>
<li>他們如何用這個產品</li>
<li>如果要他們推薦給別人，他們會怎麼形容這個產品</li>
</ul>
</li>
<li>找到產品『最重要的優點』：<ul>
<li>問第一群人：『什麼是你覺得這產品最重要的優點？』（問答題）</li>
<li>問第二群人：『什麼是你覺得這產品最重要的優點？』（用上面的答案做多選），『為什麼這個優點重要？』（問答題）</li>
</ul>
</li>
</ol>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h1 id="行銷推廣"><a href="#行銷推廣" class="headerlink" title="行銷推廣"></a>行銷推廣</h1><ul>
<li><a href="http://www.ogdesign.tw/resources" target="_blank" rel="external">設計資源總匯</a><ul>
<li>缺一個設計工具的時候，這個網站裡頭有非常多設計資源可以參考</li>
</ul>
</li>
</ul>
<hr>
<h1 id="專案管理"><a href="#專案管理" class="headerlink" title="專案管理"></a>專案管理</h1><ul>
<li><a href="https://blog.intercom.io/rice-simple-prioritization-for-product-managers/" target="_blank" rel="external">RICE: Simple prioritization for product managers - Inside Intercom</a><ul>
<li>Reach: 有多少用戶會被影響</li>
<li>Impact: 對單一用戶的影響力</li>
<li>Confidence: 對這個功能的信心程度，如有個功能沒有數據支持，那信心分數就可以低一點</li>
<li>Effort: 實作需要花費的力氣</li>
<li>RICE Score = (Reach X Impact X Confidence) / Effort</li>
</ul>
</li>
</ul>
<hr>
<h1 id="技術知事"><a href="#技術知事" class="headerlink" title="技術知事"></a>技術知事</h1><h2 id="開發心法"><a href="#開發心法" class="headerlink" title="開發心法"></a>開發心法</h2><ul>
<li><a href="https://www.sdk.cn/news/2321" target="_blank" rel="external">工程師必須知道的10個演算法</a></li>
<li><p><a href="https://segmentfault.com/a/1190000004523659" target="_blank" rel="external">HTTPS科普扫盲帖</a></p>
<ul>
<li>從這篇了解 https</li>
</ul>
</li>
<li><p><a href="http://www.sitepoint.com/9-development-workflow-upgrades-you-should-know-about/" target="_blank" rel="external">9 Development Workflow Upgrades You Should Know About</a></p>
<ol>
<li><a href="https://github.com/imsky/git-fresh" target="_blank" rel="external">git-fresh</a></li>
<li><a href="https://github.com/tj/git-extras" target="_blank" rel="external">git-extras</a></li>
<li><a href="https://github.com/pyrech/composer-changelogs" target="_blank" rel="external">Composer changelogs</a></li>
<li><a href="https://github.com/mislav/dotfiles" target="_blank" rel="external">Dotfiles</a></li>
</ol>
</li>
</ul>
<h2 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h2><ul>
<li><p><a href="http://phansible.com/" target="_blank" rel="external">phansible</a></p>
<ul>
<li>Phansible provides an easy-to-use interface that helps you generate Ansible provisionings for PHP-based projects.</li>
<li>快速建立 PHP 環境使用 Ansible</li>
<li><a href="https://github.com/Phansible/phansible" target="_blank" rel="external">https://github.com/Phansible/phansible</a></li>
</ul>
</li>
<li><p><a href="http://blog.daocloud.io/docker-meetup-ppt-all/" target="_blank" rel="external">史上最全九城 Docker Meetup 全套 PPT 下载</a></p>
</li>
</ul>
<h2 id="系統架構"><a href="#系統架構" class="headerlink" title="系統架構"></a>系統架構</h2><ul>
<li><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;mid=404087915&amp;idx=1&amp;sn=075664193f334874a3fc87fd4f712ebc" target="_blank" rel="external">缓存架构设计细节二三事</a></p>
<ul>
<li>“淘汰缓存”还是“更新缓存”?<ul>
<li>更新缓存的优点：缓存不会增加一次miss，命中率高</li>
<li>淘汰缓存的优点：简单</li>
<li>更新缓存还是淘汰缓存，主要取决于“更新缓存的复杂度”</li>
</ul>
</li>
<li>缓存和数据库的操作时序，究竟采用哪种时序呢？<ul>
<li>（1）先写数据库，再淘汰缓存<ul>
<li>先写数据库，再淘汰缓存：第一步写数据库操作成功，第二步淘汰缓存失败，则会出现DB中是新数据，Cache中是旧数据，数据不一致</li>
</ul>
</li>
<li>（2）先淘汰缓存，再写数据库<ul>
<li>假设先淘汰缓存，再写数据库：第一步淘汰缓存成功，第二步写数据库失败，则只会引发一次Cache miss。</li>
</ul>
</li>
<li><strong>结论：数据和缓存的操作时序，结论是清楚的：先淘汰缓存，再写数据库。</strong></li>
</ul>
</li>
<li><p>缓存和数据库架构简析</p>
<ul>
<li>主流优化方案是服务化：加入一个服务层，向上游提供帅气的数据访问接口，向上游屏蔽底层数据存储的细节，这样业务线不需要关注数据是来自于cache还是DB。</li>
<li>非主流方案是异步缓存更新：业务线所有的写操作都走数据库，所有的读操作都总缓存，由一个异步的工具来做数据库与缓存之间数据的同步。</li>
</ul>
</li>
<li><p>结论强调<br>  （1）淘汰缓存是一种通用的缓存处理方式<br>  （2）先淘汰缓存，再写数据库的时序是毋庸置疑的<br>  （3）服务化是向业务方屏蔽底层数据库与缓存复杂性的一种通用方式</p>
</li>
</ul>
</li>
</ul>
<h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><ul>
<li><a href="http://www.startutorial.com/articles/view/master-php-array-functions" target="_blank" rel="external">Master PHP Array Functions</a><ul>
<li>這篇講解了很多 PHP 的 array function 使用。</li>
<li>array_map &amp; array_walk</li>
<li>array_reduce</li>
<li>array_pop</li>
<li>array_shift</li>
<li>array_push</li>
<li>array_unshift</li>
<li>array_slice</li>
<li>array_merge</li>
<li>array_sum</li>
<li>array_filter</li>
</ul>
</li>
</ul>
<h2 id="前端網頁開發工具"><a href="#前端網頁開發工具" class="headerlink" title="前端網頁開發工具"></a>前端網頁開發工具</h2><ul>
<li><p><a href="http://www.shejidaren.com/26-wireframe-designs.html" target="_blank" rel="external">26款高品质 APP UI原型设计灵感</a></p>
</li>
<li><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5NDkxMTgyNw==&amp;mid=405151965&amp;idx=1&amp;sn=1274f74a4a3cb0e1d5f9fe88b15e59d9&amp;scene=0#wechat_redirect" target="_blank" rel="external">10大H5前端框架，让你开发不愁</a></p>
<ul>
<li><a href="http://getbootstrap.com/" target="_blank" rel="external">Bootstrap</a></li>
<li><a href="http://amazeui.org/" target="_blank" rel="external">Amaze UI</a></li>
<li><a href="https://github.com/liulangnan/aui" target="_blank" rel="external">AUI</a></li>
<li><a href="https://github.com/frozenui/frozenui" target="_blank" rel="external">Frozen UI</a></li>
<li><a href="https://github.com/weui/weui" target="_blank" rel="external">WeUI</a></li>
<li><a href="https://github.com/sdc-alibaba/sui" target="_blank" rel="external">SUI</a></li>
<li><a href="http://www.semantic-ui.cn/" target="_blank" rel="external">Semantic UI</a></li>
<li><a href="http://foundation.zurb.com/" target="_blank" rel="external">Foundation</a></li>
<li><a href="http://www.getuikit.com/" target="_blank" rel="external">UiKit</a></li>
<li><a href="http://purecss.io/" target="_blank" rel="external">Pure</a></li>
</ul>
</li>
<li><p><a href="https://tenten.co/blog/how-to-replace-broken-images/" target="_blank" rel="external">圖片壞掉失效了要怎麼辦？要怎麼取代叉燒包來優化使用者體驗？</a></p>
<ul>
<li>我們可以將跟文字有關係的放在 img 的標籤上</li>
<li>img 這個標籤是個可以取代性元素，所以 :before 跟 :after 通常在 img 上是無效的，但是，當圖片消失或無法載入的時候，偽元素就可以使用。</li>
</ul>
</li>
<li><p><a href="http://blog.e10t.net/understanding-ecmascript6-note/" target="_blank" rel="external">《Understanding ECMAScript 6》笔记</a></p>
<ul>
<li><a href="https://leanpub.com/understandinges6/read/" target="_blank" rel="external">Understanding ECMAScript 6</a> 原文電子書<br>*</li>
</ul>
</li>
<li><p><a href="http://blog.techbridge.cc/2016/04/02/Browser-Rendering-Optimization/" target="_blank" rel="external">Browser Rendering Optimization</a></p>
<ul>
<li>Browser的渲染過程不止這些，還必須載入js, css, web api等等的資源，因此有所謂的Rendering Pipeline，其順序為：<ol>
<li>Javascript: 載入與執行JS/CSS</li>
<li>Style: 根據js與css計算style</li>
<li>Layout: 當style套入元素時，瀏覽器要檢查是否會影響到整個畫面的排列，並進行排列</li>
<li>Paint: 排列後有更動到的元素需要重新繪製（第一次載入的話當然是全部繪製）</li>
<li>Composite: 最後就是將所有元素重新合成回來（重新繪製的元素與原本的元素）</li>
</ol>
</li>
</ul>
</li>
<li><p><a href="http://courses.reactjsprogram.com/courses/reactjsfundamentals" target="_blank" rel="external">Free React.js Fundamentals course</a></p>
</li>
<li><p><a href="https://simplesharingbuttons.com/" target="_blank" rel="external">Simple Sharing Buttons Generator</a> - 快速簡單的社群分享按鈕產生器</p>
<ul>
<li><img src="8vD012e.png" alt=""></li>
</ul>
</li>
<li><p><a href="http://dbpatterns.com/" target="_blank" rel="external">dbpatterns</a> - 蒐集很多資料庫的 schema 模式，也可以建立自己的。</p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MoClippings #4 總有那麼一群人那麼貼近人心]]></title>
      <url>https://usedfire.net/Clippings/2015/MoClippings-4/</url>
      <content type="html"><![CDATA[<pre><code>發刊日 : 2015/12/20 - 2015/12/30
本期包含：資訊知事、行銷推廣、專案管理、技術知事
</code></pre><h2 id="資訊知事"><a href="#資訊知事" class="headerlink" title="資訊知事"></a>資訊知事</h2><ul>
<li><a href="https://laravel-news.com/2016/03/add-laravel-unit-tests-directly-chrome/" target="_blank" rel="external">Add Laravel Unit Tests Directly From Chrome</a><ul>
<li><img src="/Clippings/2015/MoClippings-4/chrome-testing.gif" alt="[Laravel Image Testing]" title="[Laravel Image Testing]">
<a id="more"></a></li>
</ul>
</li>
<li><a href="https://twitter.com/internetofshit/status/708565761330176000" title="title" target="_blank" rel="external">智慧插座：覺得無線基地台太爛了嗎？沒關係！只要插上這個智慧插座，每當 Wifi 斷線後～馬上跳電以重啟路由器 ⚡️</a><ul>
<li><img src="IThgaXa.jpg" alt=""></li>
</ul>
</li>
</ul>
<p><a href="http://www.playpcesor.com/2016/01/blog-post.html" target="_blank" rel="external">做好大人的學習筆記：如何開始建立你的技能系統？</a></p>
<ul>
<li><p><a href="https://free.com.tw/lorem-ipsum-generator/" target="_blank" rel="external">12 個你應該知道的中英文假字、文章產生器（Lorem Ipsum）</a></p>
<ul>
<li><a href="http://more.handlino.com/" target="_blank" rel="external">一用就愛上的中文假文產生器</a></li>
</ul>
</li>
<li><p><a href="http://www.bnext.com.tw/article/view/id/38475" target="_blank" rel="external">當個有戰力的工程師！先搞清楚修Bug和理解使用者其實是同一件事</a></p>
<ol>
<li>Debug 使用者行為，就像你在 Debug 程式碼那樣<ul>
<li>給客戶的最小可行性產品（minimal viable product），就如同給工程師的可重複測試的程式碼。</li>
</ul>
</li>
<li>試著解讀使用者的心<ul>
<li>修正程式碼時，工程師必須先深入瞭解系統狀況；若想修正使用者的行為，我們也必須先知道使用者的想法。</li>
<li>藉由研究使用者如何瀏覽產品、採取何種行動，便可描繪出使用者意圖。</li>
</ul>
</li>
<li>把精力花在正確的地方<ul>
<li>Quip在研發新產品時，會將與研發有關或早期的客戶集中在一份文件檔或對話框裡，以便公司對其進行新的系統測試或個別的意見調查。</li>
<li>使用usertesting.com的服務，將設計好的實驗任務發派給線上使用者，並以影片紀錄這些人使用產品的過程，最終訪問其對產品的感想</li>
<li>透過實際與實驗對象互動，公司能清澈地解剖作業設計，並把精力花在正確的地方。</li>
</ul>
</li>
</ol>
</li>
<li><p><a href="https://kanbanflow.com/features" target="_blank" rel="external">Kanban Flow</a></p>
<ul>
<li>國外做的，以看板方法為基底的專案管理系統。</li>
<li><a href="https://zapier.com/blog/kanban-board/" target="_blank" rel="external">在 Zapier 上介紹的使用方法</a></li>
</ul>
</li>
<li><p><a href="http://racksburg.com/choosing-an-http-status-code/" target="_blank" rel="external">Choosing an HTTP Status Code — Stop Making It Hard</a></p>
<ul>
<li>如何選擇一個適合的 HTTP 狀態碼</li>
<li><a href="https://httpstatuses.com/" target="_blank" rel="external">狀態碼列表</a></li>
<li><a href="https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81" target="_blank" rel="external">Wiki HTTP 狀態碼</a></li>
</ul>
</li>
<li><p><a href="https://line.do/ww/php-evolution/8oq/vertical" target="_blank" rel="external">20 years of PHP development history</a></p>
<ul>
<li>PHP 20 年的相關開發記錄</li>
</ul>
</li>
<li><p><a href="http://www.ithome.com.tw/news/103286" target="_blank" rel="external">企業應該如何面對外界提供的漏洞通報呢？</a></p>
</li>
<li><p><a href="https://www.optimalworkshop.com/" target="_blank" rel="external">User Experience | UX Design Tools | Optimal Workshop</a></p>
<ul>
<li>作使用者經驗調查很方便的工具</li>
</ul>
</li>
<li><p><a href="https://share.inside.com.tw/posts/23102" target="_blank" rel="external">Slack 是如何讓用戶上癮的？看看背後的心理學分析</a></p>
</li>
</ul>
<hr>
<h2 id="行銷推廣"><a href="#行銷推廣" class="headerlink" title="行銷推廣"></a>行銷推廣</h2><ul>
<li><p><a href="http://www.thenewslens.com/post/279084/" target="_blank" rel="external">受夠了古板的簡報模板嗎？到Slideloot找出最完美的資訊圖表</a></p>
</li>
<li><p><a href="http://www.slideshare.net/wanjuwang7/seo-59116872" target="_blank" rel="external">給學生的：seo這條路</a></p>
</li>
</ul>
<hr>
<h2 id="專案管理"><a href="#專案管理" class="headerlink" title="專案管理"></a>專案管理</h2><ul>
<li><a href="http://www.slideshare.net/IvanWei2/0111-58976621" target="_blank" rel="external">用戶体驗設計的0到1，與1到1億</a><ul>
<li>當產品可以免費地輕易取得，被替換的成本與代價之低，靠的就是用戶体驗與競爭者一較高下！獵豹移動與雪豹科技正因為重視用戶体驗，在資訊傳遞扁平化的移動互聯網時代，把精實創業強調的核心精神－”試錯”，徹底執行在每一次用戶体驗的迭代打磨過程裡，達到了多個億級用戶產品的成就。這份簡報分享了一年快速迭代超過150個版本的CM Security，是如何利用定量與定性的方法找到用戶需求；如何做好設計並滿足用戶需求，進而產生習慣；如何兼顧產品留存與功能擴展並增長流量，最後商業化將流量變現。</li>
<li>數據是結果但不能唯數據論</li>
</ul>
</li>
</ul>
<hr>
<h2 id="技術知事"><a href="#技術知事" class="headerlink" title="技術知事"></a>技術知事</h2><h3 id="開發心法"><a href="#開發心法" class="headerlink" title="開發心法"></a>開發心法</h3><ul>
<li><p><a href="http://highscalability.com/blog/2016/1/11/a-beginners-guide-to-scaling-to-11-million-users-on-amazons.html" target="_blank" rel="external">A Beginner’s Guide To Scaling To 11 Million+ Users On Amazon’s AWS</a></p>
<ul>
<li>在 AWS 上如何從少數慢慢的到使可乘載1100萬的使用者</li>
</ul>
</li>
<li><p><a href="http://www.sitepoint.com/10-best-html-wysiwyg-plugins/" target="_blank" rel="external">10 Best jQuery and HTML5 WYSIWYG Plugins</a></p>
<ul>
<li><a href="https://www.froala.com/wysiwyg-editor" target="_blank" rel="external">Froala</a></li>
<li><a href="http://getcontenttools.com/" target="_blank" rel="external">ContentTools</a></li>
<li><a href="https://www.raptor-editor.com/" target="_blank" rel="external">Raptor Editor</a></li>
<li><a href="http://www.alohaeditor.org/Content.Node/index.html" target="_blank" rel="external">Aloha</a></li>
<li><a href="https://www.tinymce.com/" target="_blank" rel="external">TinyMCE</a></li>
<li><a href="https://github.com/bootstrap-wysiwyg/bootstrap3-wysiwyg" target="_blank" rel="external">bootstrap3-wysiwyg</a></li>
<li><a href="http://summernote.org/" target="_blank" rel="external">Summernote</a></li>
<li><a href="http://ckeditor.com/" target="_blank" rel="external">CKEditor</a></li>
<li><a href="http://alex-d.github.io/Trumbowyg/" target="_blank" rel="external">Trumbowyg</a></li>
<li><a href="https://imperavi.com/redactor/" target="_blank" rel="external">Redactor</a></li>
</ul>
</li>
</ul>
<h3 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h3><ul>
<li><a href="https://www.katacoda.com/" target="_blank" rel="external">katacoda</a> - 線上學習 Docker 的網站</li>
</ul>
<h3 id="PHP-Library-or-工具"><a href="#PHP-Library-or-工具" class="headerlink" title="PHP Library or 工具"></a>PHP Library or 工具</h3><ul>
<li><a href="https://github.com/gabrielrcouto/php-terminal-gameboy-emulator" target="_blank" rel="external">A PHP Terminal GameBoy Emulator</a><ul>
<li><img src="2f6e96ac-da3a-11e5-86cf-bbfa15083f74.gif" alt="image text" title="title"></li>
</ul>
</li>
</ul>
<h3 id="前端網頁開發工具"><a href="#前端網頁開發工具" class="headerlink" title="前端網頁開發工具"></a>前端網頁開發工具</h3><ul>
<li><p><a href="http://huangxuan.me/js-module-7day/#/" target="_blank" rel="external">JavaScript 模块化七日谈</a></p>
<ul>
<li>這份簡報非常強大！！把遠古時代的 JavaScript 一直到現在應該怎麼開發前端程式的相關演進介紹的非常非常詳細！！一定要看！一定要看！一定要看！</li>
<li><a href="https://github.com/huxpro/js-module-7day/" target="_blank" rel="external">SourceCode</a></li>
</ul>
</li>
<li><p><a href="http://www.invisionapp.com/chat" target="_blank" rel="external">InVision - Chat UI Free Download（Sketch &amp; Photoshop）</a></p>
<ul>
<li><a href="https://free.com.tw/chat-ui-kit-by-invision/" target="_blank" rel="external">InVision 釋出「Chat」使用者介面 UI 設計包免費下載（Sketch &amp; Photoshop）</a></li>
</ul>
</li>
<li><p><a href="http://html5up.net/" target="_blank" rel="external">http://html5up.net/</a></p>
<ul>
<li>makes spiffy HTML5 site templates</li>
<li>非常多很漂亮的Landing Page 樣板</li>
</ul>
</li>
<li><p><a href="https://www.ptt.cc/bbs/Soft_Job/M.1453137664.A.52D.html" target="_blank" rel="external">[心得] 前端入門心得</a></p>
</li>
<li><p><a href="http://blog.akanelee.me/posts/384307-sixth-state-of-the-page-maximum-state" target="_blank" rel="external">頁面的第 6 種狀態：極限狀態</a></p>
<ul>
<li>狀態列表：<ul>
<li>理想狀態（Ideal State）</li>
<li>空白狀態（Empty State）</li>
<li>極限狀態（Maximum State）&lt;&lt;&lt;&lt; 第 6 種狀態</li>
<li>錯誤狀態（Error State）</li>
<li>局部資料狀態（Partial State）</li>
<li>載入中狀態（Loading State）</li>
</ul>
</li>
</ul>
</li>
<li><p><a href="https://medium.com/@zonble/%E7%BF%BB%E8%AD%AF-%E5%A6%82%E4%BD%95%E4%BF%AE%E6%AD%A3%E5%A3%9E-ui-2f972da15d5b#.h7aiukpnl" target="_blank" rel="external">[翻譯] 如何修正壞 UI</a></p>
</li>
<li><p><a href="https://hackmd.io/p/4JlFcJKOe#/" target="_blank" rel="external">ECMAScript 6 簡介</a></p>
</li>
<li><p><a href="http://www.apowersoft.tw/free-screen-capture" target="_blank" rel="external">Apowersoft免費螢幕擷取王</a></p>
<ul>
<li>MAC 上免費的螢幕擷取工具</li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MoClippings #3 DevOps 正夯]]></title>
      <url>https://usedfire.net/Clippings/2015/MoClippings-3/</url>
      <content type="html"><![CDATA[<pre><code>發刊日 : 2015/11/16 - 2015/11/25
本期包含：資訊知事、生活藝文、專案管理、技術知事
</code></pre><h2 id="MurMur"><a href="#MurMur" class="headerlink" title="MurMur"></a>MurMur</h2><ul>
<li>這樣寫程式好像太 High 了。(from <a href="https://github.com/JoelBesada/activate-power-mode" target="_blank" rel="external">activate-power-mode</a>)<ul>
<li><img src="/Clippings/2015/MoClippings-3/eb3bb21eecd8.gif" alt="[Activate Power mode]" title="[Activate Power mode]"> <a id="more"></a>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="資訊知事"><a href="#資訊知事" class="headerlink" title="資訊知事"></a>資訊知事</h2><ul>
<li><p><a href="https://aws.amazon.com/tw/solutions/case-studies/slack/" target="_blank" rel="external">AWS Case Study: Slack (Slack 在 AWS 上的運用案例探討)</a></p>
<ul>
<li><img src="WqyGg9b.png" alt=""></li>
</ul>
</li>
<li><p><a href="http://blog.longwin.com.tw/2013/11/taobao-origin-story-history-2013/" target="_blank" rel="external">淘寶的起源故事、技術發展之路 - 2013</a></p>
<ul>
<li>這篇文章是 2013 年左右寫的，記錄著淘寶整個網路架構的發展及改變。</li>
</ul>
</li>
<li><p><a href="http://www.soft4fun.net/software/image-process/photoshop-makes-designer-happy-everyday.htm" target="_blank" rel="external">Photoshop 越做越簡單了，巨X電腦可以退我學費嗎? (拭淚)</a></p>
<ul>
<li><img src="flyQF7c.gif" alt=""></li>
<li><img src="FbarW7g.gif" alt=""></li>
</ul>
</li>
<li><p><a href="http://www.udn.dr-i.com.tw/2015_ibm_api_economy/" target="_blank" rel="external">API 聯網好生意</a></p>
</li>
<li><p><a href="http://www.bnext.com.tw/ext_rss/view/id/1099271" target="_blank" rel="external">什麼是駭客：自動化所有超過90秒的工作</a></p>
<ul>
<li>這個傢夥幾乎從不自己幹活—只要任何工作需要佔用他 90 秒以上的時間，他就會編寫script，讓程式自動執行完。這些工作包括：<ul>
<li>向老婆大人彙報</li>
<li>自動修復客戶資料庫</li>
<li>編不上班藉口</li>
<li>自動煮咖啡</li>
</ul>
</li>
<li><a href="https://github.com/narkoz/hacker-scripts" target="_blank" rel="external">GitHub上還真的有人以這個故事為藍本，寫出了「Hacker Scripts」</a></li>
</ul>
</li>
</ul>
<hr>
<h2 id="生活藝文"><a href="#生活藝文" class="headerlink" title="生活藝文"></a>生活藝文</h2><ul>
<li><a href="http://a.udn.com/focus/2015/11/23/14630/index.html" target="_blank" rel="external">馬習會，誰的西裝穿錯了？</a></li>
</ul>
<hr>
<h2 id="專案管理"><a href="#專案管理" class="headerlink" title="專案管理"></a>專案管理</h2><ul>
<li><a href="http://mrjamie.cc/2011/04/11/why-cant-devs-estimate-time/" target="_blank" rel="external">為什麼軟體工程無法估算時間？</a><ul>
<li>我們無法預測軟體開發中每一個項目的時間，是因為這些工作的本質就是「創造新知識」。開發軟體的目的是創造「自動化的流程」，一但目標達到，自動化後的流程就可以重複的被執行，在可預測的時間裡面。所以一個軟體就像是「食譜」一樣，而電腦就是「廚師」，輸入的資料是「食材」，而輸出的資料是「晚餐」。</li>
<li>要管理「生產力」，一個現代化的軟體開發團隊，有以下的幾個好工具可以用：<ul>
<li>Pair Programming (兩人小組)</li>
<li>Daily Stand-Up Meeting (每日早會)</li>
<li>高效率的工作環境</li>
<li>隨時找得到使用者</li>
<li>設定上線時間</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="技術知事"><a href="#技術知事" class="headerlink" title="技術知事"></a>技術知事</h2><h3 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h3><ul>
<li><p><a href="http://notes.jigsawye.com/2015/09/25/gitlab-ce-in-docker/" target="_blank" rel="external">使用 Docker 建置 Gitlab CE 的 Source Control 及 CI 環境</a></p>
</li>
<li><p><a href="https://github.com/docker/dockercraft" target="_blank" rel="external">Docker + Minecraft = Dockercraft</a></p>
<ul>
<li><img src="WzEtiMd.gif" alt=""></li>
</ul>
</li>
<li><p><a href="http://0.30000000000000004.com/" target="_blank" rel="external">0.30000000000000004.com</a></p>
<ul>
<li>各種浮點數問題</li>
</ul>
</li>
<li><p><a href="http://scars377.github.io/git-cheatsheet-cht/" target="_blank" rel="external">Git Cheatsheet Cht</a></p>
<ul>
<li>用圖解的方式表示GIT的各種指令</li>
</ul>
</li>
</ul>
<h3 id="測試工具"><a href="#測試工具" class="headerlink" title="測試工具"></a>測試工具</h3><ul>
<li><p><a href="http://getcomposer.ycnets.com/doc/articles/handling-private-packages-with-satis.md" target="_blank" rel="external">用 Satis 或 Toran Proxy 處理私有套件</a></p>
<ul>
<li><a href="https://toranproxy.com/" target="_blank" rel="external">https://toranproxy.com/</a></li>
<li><a href="https://github.com/composer/satis" target="_blank" rel="external">https://github.com/composer/satis</a></li>
</ul>
</li>
<li><p><a href="http://oomusou.io/2015/11/11/laravel-package-hello-world/" target="_blank" rel="external">如何開發自己的Package?</a></p>
</li>
<li><p><a href="http://zeromq.org/" target="_blank" rel="external">ZeroMQ</a></p>
<ul>
<li>輕量化的分散式訊息佇列處理 Library</li>
</ul>
</li>
<li><p><a href="https://www.rabbitmq.com/" target="_blank" rel="external">RabbitMQ</a></p>
<ul>
<li>大型的訊息佇列處理工具</li>
</ul>
</li>
<li><p><a href="https://github.com/Microsoft/vscode" target="_blank" rel="external">Visual Studio Code - Open Source</a></p>
</li>
</ul>
<h3 id="PHP-Library-or-工具"><a href="#PHP-Library-or-工具" class="headerlink" title="PHP Library or 工具"></a>PHP Library or 工具</h3><ul>
<li><p><a href="http://www.sitepoint.com/suggesting-carbon-with-composer-date-and-time-the-right-way/" target="_blank" rel="external">Carbon 一個 PHP 關於時間運用的Library</a></p>
<ul>
<li>這個PHP關於時間運用的 Library 在許多 Framework 上被廣泛運用，因為整個 Library 的設計，已經考慮到包含 Localization、時間運算等等，甚至是要撰寫測試，也已經把一些介面做好了。</li>
</ul>
</li>
<li><p><a href="http://www.phpclasses.org/package/9381-PHP-Encrypt-PHP-code-and-generate-self-decrypting-code.html#information" target="_blank" rel="external">PHP Ghost Crypt: Encrypt PHP code and generate self decrypting code</a></p>
<ul>
<li>簡易的程式碼加密解密工具</li>
</ul>
</li>
<li><p><a href="https://www.facebook.com/jace.ju/posts/938015206280173" target="_blank" rel="external">php-cs-fixer 會在不影響邏輯的狀況下，把 i++ 換成 ++i</a></p>
<ul>
<li>因為 ++i 跟 i++ 產生的 opcode 是不同的，i++ 會產生三個 opcode ，++i 只要兩個。BY Ricky Su。</li>
<li><a href="http://php.net/manual/en/language.operators.increment.php" target="_blank" rel="external">http://php.net/manual/en/language.operators.increment.php</a></li>
</ul>
</li>
<li><p><a href="http://imagesplitter.net/" target="_blank" rel="external">imagesplitter</a></p>
<ul>
<li>線上圖片轉換、切割、分割工具</li>
</ul>
</li>
<li><p><a href="http://jmsliu.com/products/sprite-sheet-decomposer/" target="_blank" rel="external">jmsliu</a></p>
<ul>
<li>decomposer 分割由 composer 合併為一張大圖的工具</li>
</ul>
</li>
<li><p><a href="http://segmentfault.com/a/1190000003893899" target="_blank" rel="external">PHP7新特性的介绍</a></p>
</li>
<li><p><a href="http://www.laruence.com/2015/12/04/3086.html" target="_blank" rel="external">让PHP7达到最高性能的几个Tips</a></p>
</li>
</ul>
<h3 id="前端網頁開發工具"><a href="#前端網頁開發工具" class="headerlink" title="前端網頁開發工具"></a>前端網頁開發工具</h3><ul>
<li><p><a href="https://gist.github.com/hanksudo/5873678" target="_blank" rel="external">前端工程師面試問題集</a></p>
</li>
<li><p><a href="http://pencil.evolus.vn/" target="_blank" rel="external">PENCIL PROJECT</a> - An open-source GUI prototyping tool that’s available for ALL platforms.</p>
<ul>
<li><img src="android-app.png" alt=""></li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MoClippings #2 創新，是整個團隊的事]]></title>
      <url>https://usedfire.net/Clippings/2015/MoClippings-2/</url>
      <content type="html"><![CDATA[<pre><code>發刊日 : 2015/10/31 - 2015/11/10
本期包含：趣事小語、資訊知事、思考＆教育、行銷推廣、專案管理、技術知事
</code></pre><h2 id="MurMur"><a href="#MurMur" class="headerlink" title="MurMur"></a>MurMur</h2><ul>
<li>「創新」是整個團隊的事情。</li>
<li>跟波國棒球打輸了，連帶連出刊總結這件事情都 Delay 了！</li>
</ul>
<h2 id="趣事小語"><a href="#趣事小語" class="headerlink" title="趣事小語"></a>趣事小語</h2><pre><code>相關小語來源是這段期間 Twitter 或訂閱的 feedly 上被分析出來的熱門文字。
</code></pre><ul>
<li><a href="http://flipermag.com/2014/08/06/lives-life-2/" target="_blank" rel="external">無中生有的設計咒語：「沒關係你先設計，資料我再補」</a><ul>
<li>「今天晚上要煮紅燒牛肉，啊！糟糕沒有牛肉了，好吧沒關係那你先煮，等牛肉買回來在丟下去就好……」 好個鬼啊！！最後補牛肉，那牛肉不就根本沒有入味嗎，那前面是在什麼？煮火大的嗎 !!<a id="more"></a></li>
</ul>
</li>
</ul>
<hr>
<h2 id="資訊知事"><a href="#資訊知事" class="headerlink" title="資訊知事"></a>資訊知事</h2><ul>
<li><p><a href="http://www.ithome.com.tw/news/99307" target="_blank" rel="external">【專家嚴選】8個DevOps好用工具大介紹</a></p>
<ul>
<li>【Docker】自動記錄環境參數加速部署效率</li>
<li>【Packer】通吃主流平臺映像檔的打包工具</li>
<li>【Vagrant】本機端模擬虛擬機器最佳選擇</li>
<li>【Datadog】方便使用者快速建立監控儀表板</li>
<li>【Sauce Labs】模擬多種前端的線上測試平臺</li>
<li>【Codeship】省去許多自行部署第三方套件的麻煩</li>
<li>【Twilio】設定觸發條件，透過API發送通知</li>
<li>【Runscope】檢視網站健康度，確保API運作順利</li>
</ul>
</li>
<li><p><a href="http://www.playpcesor.com/2015/10/question-list.html" target="_blank" rel="external">每個人都需要準備的一張問題清單：突破難關思考術</a> - from <a href="http://www.playpcesor.com/" title="電腦玩物" target="_blank" rel="external">電腦玩物</a></p>
<ul>
<li>站長自己的清單：<ol>
<li>為什麼想做這件事？</li>
<li>對我的人生意義是什麼？</li>
<li>目標對象是誰？</li>
<li>目標對象有什麼需求？</li>
<li>獨一無二的市場特色是什麼？</li>
<li>預計什麼時候完成？</li>
<li>我可以做的第一步是什麼？</li>
<li>我最大不足是什麼？</li>
<li>可以跟誰合作？</li>
<li>有哪些競爭或借鏡對手？</li>
</ol>
</li>
</ul>
</li>
<li><p><a href="http://www.playpcesor.com/2015/09/10.html" target="_blank" rel="external">看圖才能說故事！做簡報必備 10 個資訊圖表圖示資源</a></p>
<ol>
<li>畫出好看統計圖：ChartBlocks 線上製作統計圖表，讓圖表不再千篇一律</li>
<li>最簡單的資訊圖表工具：Easel.ly 讓任何人都能在簡報中用資訊圖表說故事</li>
<li>美麗的簡報封面：Canva 日常的設計家：簡報海報、資訊圖表免費製圖</li>
<li>套用職場必備圖表範本：creately 線上圖表軟體：免費套用數千資訊圖表範本</li>
<li>不可或缺高品質示意圖：十萬 icon 圖示免費下載，傳神的設計與簡報符號圖案</li>
<li>同樣不可或缺的好照片：就缺一張好照片？你會優先推薦的免費圖庫：Pixabay</li>
<li>值得參考的簡報靈感：2500+創意簡報設計範本免費下載！做出以圖服人 PPT</li>
<li>簡報型說明影片：Adobe Voice 說動 PPT 簡報，免費故事化創意簡報 App</li>
<li>簡報怎麼配色？到這裡找色彩設計靈感！12個設計師必備配色表網站</li>
<li>簡報的好字型：Adobe與Google合推全新中文免費字型思源黑體下載教學</li>
</ol>
</li>
<li><p><a href="http://www.playpcesor.com/2015/10/netspeak-google.html" target="_blank" rel="external">寫英文信最佳辭典： Netspeak 比 Google 翻譯好用</a></p>
<ul>
<li>「 Netspeak 」是一個免費的線上搜尋辭典，但他不是一般的翻譯辭典，而是可以「搜尋比較」各種英文詞彙、片語、語法在網路上出現過的使用方式，並且「統計」出這個用語的變化型態，還有「分析」他們分別被使用的頻率與情境。</li>
<li>網站網址：<a href="http://www.netspeak.org/" target="_blank" rel="external">http://www.netspeak.org/</a></li>
</ul>
</li>
<li><p><a href="http://www.playpcesor.com/2015/02/drawio.html" target="_blank" rel="external">Draw.io 中文線上製作流程圖首選！專業水準完全免費</a></p>
<ul>
<li><img src="SpofCem.png" alt=""></li>
<li>工具網址：<a href="https://www.draw.io/" target="_blank" rel="external">https://www.draw.io/</a></li>
<li>Chrome Plugin 網址： <a href="https://chrome.google.com/webstore/detail/drawio-diagrams/onlkggianjhjenigcpigpjehhpplldkc/related" target="_blank" rel="external">Draw.io Chrome Plugin</a></li>
</ul>
</li>
</ul>
<ul>
<li><p><a href="https://letsencrypt.org/" target="_blank" rel="external">Let’s Encrypt</a></p>
<ul>
<li>免費、自動化、開放原始碼的SSL認證授權產生</li>
<li>現行 SSL CA 認證常常淪為各家個第三方認證單位賺錢的工具，每年費用常常高達數百元美金，所以 Let’s Encrypt 這個組織開始做免費且可被信任的 SSL CA 認證授權。</li>
<li>對於需要常常建立不同網站、不同服務的公司，這個服務絕對需要關注。</li>
<li>可以思考，網站應用服務使用HTTPS通訊協定，將會是最基本的要求。</li>
</ul>
</li>
<li><p><a href="http://www.playpcesor.com/2015/10/office-office-chrome.html" target="_blank" rel="external">免費 Office ！就靠這款微軟 Office 最新 Chrome 套件</a></p>
<ul>
<li>微軟推出的 Google Chrome 外掛：「 Office Online Chrome 版」，不需要事先安裝 Office 軟體，就能讓你雲端工作時更快速新增 Office 各種文件、編輯已經存在的 Office 檔案</li>
<li><a href="https://chrome.google.com/webstore/detail/office-online/ndjpnladcallmjemlbaebfadecfhkepb" target="_blank" rel="external">Office Online Chrome 版</a></li>
</ul>
</li>
<li><p><a href="http://www.bearboss.com/?p=3688" target="_blank" rel="external">企劃與思考的邏輯與順序</a></p>
<ul>
<li>「目標」⇒「策略」⇒「方案/方法」⇒「執行步驟」⇒「評估」</li>
</ul>
</li>
<li><p><a href="http://www.aja-creative.com/zh_tw/" target="_blank" rel="external">AJA大予創意 UX與UI設計的專家</a></p>
<ul>
<li>這是一個公司網址，一個專案協助做使用者體驗、介面設計、使用者體驗測試、優化的公司</li>
</ul>
</li>
<li><p><a href="https://www.smartm.com.tw/article/31373038cea3" target="_blank" rel="external">行動商務時代，Google 研究員說 app 應該這樣做</a></p>
<ul>
<li>Stephen 將行動電子商務 app 的使用分為四個大階段：Adopt（採納）、Use（使用）、Transact（交易）、Return（本文指的是「再度光臨」），並且分別提出需要注意的設計原則。</li>
<li>幾乎整篇都是重點內容，有興趣就直接點進去看吧。</li>
</ul>
</li>
<li><p><a href="http://www.slideshare.net/max2105751/app-54198120" target="_blank" rel="external">App的智財權保護之道</a> from <a href="http://www.slideshare.net/max2105751" target="_blank" rel="external">Max Chang</a></p>
<ul>
<li>其中這張簡報說明了關於保護 APP 的三個角度，分別是透過商標、使用者介面專利、技術專利等</li>
<li><img src="6jlq1Dr.png" alt=""></li>
<li>延伸閱讀：<a href="http://www.proguidescreen.com/?p=4498" target="_blank" rel="external">從Call Saver與華碩的抄襲疑雲案，探討App的智慧財產權</a></li>
</ul>
</li>
<li><p><a href="http://www.saydigi.com/2015/10/gear-s2-hands-on.html" target="_blank" rel="external">圓形錶面 Samsung Gear S2 動手玩 配戴更舒適 操作更人性</a></p>
<ul>
<li>這隻 Android 智慧手錶平常的使用不仔細看會覺得它只是一般手錶</li>
<li>整體的設計除了智慧手錶該有的功能外，外表又不會讓人覺得突兀，該開始好好的思考，智慧手錶與系統之間可以怎麼合作了？！</li>
<li>Gear S2 售價 9,900元、Gear S2 Classic 售價 10,900元</li>
</ul>
</li>
<li><p><strong>老年化社會即將來臨，用一張圖來表示</strong></p>
<ul>
<li><img src="oiTEZ2O.gif" alt=""></li>
</ul>
</li>
</ul>
<ul>
<li><p><a href="https://share.inside.com.tw/posts/20542" target="_blank" rel="external">Slack CEO 告訴你，別低估「玩」的力量</a></p>
</li>
<li><p><a href="http://buzzorange.com/2015/04/07/teach-u-how-to-know-the-relationship-between-the-gods/" target="_blank" rel="external">老是搞不清各種神明的位階？這張企業組織圖讓你秒懂</a></p>
<ul>
<li><img src="7299063214269390060_o.jpg" alt=""></li>
</ul>
</li>
</ul>
<h2 id="思考＆教育"><a href="#思考＆教育" class="headerlink" title="思考＆教育"></a>思考＆教育</h2><ul>
<li><a href="http://flipedu.parenting.com.tw/blog-detail?id=2037" target="_blank" rel="external">葉丙成：人不卡，不成器</a><ul>
<li>職場上要判斷是不是人才，看的是能否解決難題。</li>
<li>難題之所以難，是因前人沒碰過，要靠破格的思考和不被失敗打垮的韌性來解決。</li>
<li>程式教育最重要的核心，是以程式為媒介，訓練孩子把腦海裡的想法實做出來，並訓練孩子找出所有錯誤點的韌性。</li>
</ul>
</li>
</ul>
<hr>
<h2 id="行銷推廣"><a href="#行銷推廣" class="headerlink" title="行銷推廣"></a>行銷推廣</h2><ul>
<li><p><a href="https://www.facebook.com/inboundjournals/photos/a.564421656907554.149292.547757665240620/701198266563225/?type=3" target="_blank" rel="external">不要一下子就講4，要講2＋2</a></p>
<ul>
<li><p>根據內容行銷公司LookBookHQ 的研究，可以總結出以下5點：</p>
<ol>
<li><p>用顯示的，不要用說的</p>
<blockquote>
<p>因為大多數的人都喜歡多媒體：<br> ＊包含多媒體的新聞稿獲得的回應比純文字的新聞稿高77%<br> ＊包含影片的部落格貼文被連結的機率比純文字的貼文高3倍</p>
</blockquote>
</li>
<li><p>製作容易消化的資訊</p>
<blockquote>
<p>因為沒有人有時間慢慢閱讀：<br> ＊79%的人用翻閱的方式而不是逐字閱讀的方式瀏覽網站<br> ＊美國人每天翻閱的數位化文字平均為100,500個</p>
</blockquote>
</li>
<li><p>編寫引人注意的標題，以吸引慣於翻閱內容的人的注意</p>
<blockquote>
<p>因為大家都很忙：<br> ＊專業人士花51%的時間管理資訊而不是按照資訊作出行動<br> ＊90 % 的受訪專業人士承認曾經在還沒有閱讀的情況下就把重要資訊扔掉</p>
</blockquote>
</li>
<li><p>說出個人化的故事比較容易讓訊息更突出</p>
<blockquote>
<p>因為行銷的世界很嘈雜：<br> ＊2012年在互聯網上發放的廣告5.3兆則<br> ＊估計人們每天看到其中的5,000則行銷訊息</p>
</blockquote>
</li>
<li><p>把不同型式、相關的內容作包裝組合，較容易被注意</p>
<blockquote>
<p>因為互聯網已經塞爆了：<br> ＊每60秒在Google上就發生70萬宗搜尋、60小時的YouTube影片被上載、1.68億封電郵被送出</p>
</blockquote>
</li>
</ol>
</li>
</ul>
</li>
<li><p><a href="http://dcplus.com.tw/market/post-planner" target="_blank" rel="external">Post Planner – 臉書粉絲團內容製造機</a></p>
<ul>
<li>主動篩選內容，讓Faccebook頁面符合你的需求</li>
<li>人性化分日期、時間篩選文章、圖片、外部連結</li>
<li>提供時下受歡迎的照片、外部連結豐富你的FB</li>
<li>透過設定連結增進粉絲團、推特的人氣</li>
</ul>
</li>
<li><p><a href="http://dcplus.com.tw/marketing-knowledge/starter/40331" target="_blank" rel="external">從「包小姐」開始學習程序化廣告購買</a></p>
<ul>
<li>程序化廣告就是自動化智慧化的廣告，在合適的時間，用合適的方式，推送給合適的人</li>
<li>要實現程序化的神奇魔法，需要起碼解決三方面問題:<ul>
<li>要對來到頁面的人有充分的瞭解和判斷</li>
<li>要有一套規則決定到底呈現哪個廣告</li>
<li>需要有個巨大的交易場所，供給買賣雙方石頭剪刀布</li>
</ul>
</li>
<li><img src="hQq8V7g.jpg" alt=""></li>
<li>Ad Exchange(簡稱Adx)，是個巨大的競價交易市場，這其中聚集了巨量的廣告主需求及媒體廣告位資源，通過RTB（Real time bidding）即時競價購買的技術實現方式，在100毫秒內完成廣告資源的競價購買，並進行最終展現。</li>
<li>DSP(Demand side platform)需求方平台：主要的作用就是對接起廣告主的需求，幫助廣告主競價</li>
<li>SSP(Supply side platform)供給方平台：幫助媒體進行廣告位和相應的流量託管，對接起Adx完成交易</li>
</ul>
</li>
<li><p><a href="http://www.managertoday.com.tw/articles/view/51362" target="_blank" rel="external">C/P值超高的產品，為什麼客戶會不想買？這3個原因，讓他掏不出錢來！</a></p>
<ul>
<li>C1.外顯單位效益成本：產品和服務夠划算嗎？</li>
<li>C2.資訊搜尋成本：客戶要花多少力氣了解你的好？</li>
<li>C3.道德危機成本：客戶和你買東西的風險高嗎？</li>
<li>C4.專屬陷入成本：客戶過去的努力和投入會報廢嗎？</li>
</ul>
</li>
<li><p><a href="http://vide.tw/2353" target="_blank" rel="external">電商網站如何設計高轉換率的購物車頁面</a></p>
<ul>
<li>一、善用「加入購物車」按鍵附近的設計，提高將商品加入購物車的意願</li>
<li>二、購物車頁面盡量減少使用者產生「下次再買吧」的想法，加速決策過程<ol>
<li>想仔細考慮時卻無法在購物車中看到商品的細節，要在商品頁間切換很麻煩</li>
<li>湊不到免運費門檻</li>
<li>無法感受到購買商品的折扣優惠</li>
<li>無法感受到購買的時間壓力</li>
</ol>
</li>
</ul>
</li>
<li><p><a href="http://www.managertoday.com.tw/articles/view/51410" target="_blank" rel="external">優秀的提案只需要一頁A4！好讀又好懂，老闆才會聽你的</a></p>
<ul>
<li>1 Message：一句話說明你的提案目的<blockquote>
<p>人資的提案目的是，要利用「小事便箋」與「已辦清單」，讓聽命行事的員工變成自律型人才。</p>
</blockquote>
</li>
<li>1 Action：明確指出第一步「希望對方做的事情」<blockquote>
<p>建議的行動是，要求員工隨身攜帶「小事便箋」，讓「一有想法立刻記下」變成習慣。</p>
</blockquote>
</li>
<li>2W1H：說明提案內容（What）、提案理由（Why）、執行方式（How），分別以3點陳述。</li>
<li><img src="356XOpm.jpg" alt=""></li>
</ul>
</li>
<li><p><a href="http://lpcomment.com/2015/10/26/good-press-conference-1/" target="_blank" rel="external">觀點／從記者的角度，談「何謂優質的產品發表會？」</a></p>
<ul>
<li>對記者來說，「效率」就是一切</li>
<li>提高「效率」，從邀請函與 follow call 開始，邀請函內重要的基本資訊必須清楚，像是：<ul>
<li>活動主旨是什麼？</li>
<li>時間 / 地點為何？</li>
<li>有誰會出席？</li>
</ul>
</li>
<li>產品發表會中，記者的需求為何？通常在產品發表會中，最在乎 3 個要件：<ul>
<li>準時</li>
<li>訊息</li>
<li>畫面</li>
</ul>
</li>
<li>取得「訊息」的第一步：新聞稿，其內容包括：<ul>
<li>產品的特色整理</li>
<li>規格 / 數據</li>
<li>販售資訊</li>
<li>長官引言</li>
<li>表格</li>
</ul>
</li>
<li>聯訪：爆點「訊息」的來源，關於聯訪的安排，以下 2 點建議：<ul>
<li>電視聯訪：舞台活動後立刻在主舞台上進行為佳</li>
<li>平面聯訪：有小房間開小房間，沒小房間拿麥克風</li>
</ul>
</li>
<li>舞台表演的「畫面」安排，關於舞台活動，有 3 點建議：<ul>
<li>舞台表演適度就好，記者只會用最精采的那幾秒鐘</li>
<li>名人分享適量就好，記者只會用最有名的那一兩位</li>
<li>活動貴在精、不在長，把時間留給體驗和聯訪</li>
</ul>
</li>
<li>產品發表會的舞台可避免以下 3 樣東西：<ul>
<li>噴乾冰</li>
<li>噴彩帶</li>
<li>LED 螢幕</li>
</ul>
</li>
<li>產品體驗區的「畫面」安排，確保記者工作的基本效率與流暢：<ul>
<li>確認產品的狀態，並提供足夠的實機</li>
<li>注意區域動線規劃，避免讓所有人擠在一起</li>
<li>體驗區產品擺放可視情況適度分散</li>
<li>體驗區應避免雜亂的燈色</li>
<li>留意體驗區的燈光位置與方向</li>
</ul>
</li>
</ul>
</li>
<li><p><a href="http://www.inside.com.tw/2015/11/02/big-data-marketing-migo" target="_blank" rel="external">【大數據玩行銷】看 MIGO 執行長陳傑豪，如何把大數據變營業額！</a></p>
</li>
<li><p><a href="http://www.slideshare.net/vista/ss-54975828" target="_blank" rel="external">社群大數據2015年度爆紅排行榜</a></p>
<ul>
<li>記載2015年在社群上爆紅的相關事件及事件爆紅成因分析。</li>
</ul>
</li>
</ul>
<hr>
<h2 id="專案管理"><a href="#專案管理" class="headerlink" title="專案管理"></a>專案管理</h2><ul>
<li><a href="http://www.app01.com.tw/paper/81f724e5-7f8c-4a8a-99f8-fe066398e17f" target="_blank" rel="external">從產品經理的角度算一算：做一個App需要多少錢？</a><ul>
<li>作為互聯網從業者，被外行的朋友們問及最多的問題是“做一個網站需要多少錢？”或者“做一個App需要多少錢？”。作為做過完整網站項目和APP的人，今天從產品經理的角度，一起來算一下中小型App從無到有需要做哪些工作，以及為達成使命，需要付出多少金錢代價。</li>
</ul>
</li>
</ul>
<hr>
<h2 id="技術知事"><a href="#技術知事" class="headerlink" title="技術知事"></a>技術知事</h2><h3 id="開發心法"><a href="#開發心法" class="headerlink" title="開發心法"></a>開發心法</h3><ul>
<li><p><a href="https://secure.phabricator.com/book/phabflavor/article/writing_reviewable_code/" title="Writing Reviewable Code" target="_blank" rel="external">Writing Reviewable Code</a> - 寫一個可以被檢視審視的程式碼</p>
<ul>
<li>Each commit should be as small as possible, but no smaller.<ul>
<li>盡可能的讓每個的 commit 小一點</li>
</ul>
</li>
<li>The smallest a commit can be is a single cohesive idea: don’t make commits so small that they are meaningless on their own.<ul>
<li>每個 commit 盡可能的只做一件事情，且與 commit 的訊息相同的事情。</li>
</ul>
</li>
<li>There should be a one-to-one mapping between ideas and commits: each commit should build one idea, and each idea should be implemented by one commit.<ul>
<li>想做的一件事情需要可以與 commit 間有所對應，且要是一對一的直接對應。</li>
</ul>
</li>
<li>Turn large commits into small commits by dividing large problems into smaller problems and solving the small problems one at a time.<ul>
<li>把很大的 commit 切割成小的 commit，把大問題切割成小問題，每次都解決小問題。</li>
</ul>
</li>
<li>Write sensible commit messages.<ul>
<li>撰寫真的讀的懂得 commit 訊息。</li>
</ul>
</li>
</ul>
</li>
<li><p><a href="http://blog.psjay.com/posts/code-review-guide/" target="_blank" rel="external">Code Review 指南</a></p>
<ul>
<li>Code Review 的好處<ul>
<li>發現錯誤：一個人的思考總是會不可避免地出現一些紕漏，而這些紕漏在另一個人眼中也許顯而易見。</li>
<li>保持代碼風格統一：對於整個團隊來說，代碼風格的統一顯得至關重要。風格一致的代碼能提供更好的可讀性，也能避免犯一些「低級錯誤」。</li>
<li>保證設計的合理性：代碼直接反映出你的系統設計，在寫一個新的系統時，確保你的設計不會出現大問題。</li>
<li>保證提交的變更符合團隊的其他要求：例如對測試用例的要求和對文檔的要求；</li>
<li>互相學習：Code Review 的過程也是思想交流的過程，可以取人之長，補己之短。</li>
</ul>
</li>
</ul>
</li>
<li><p><a href="http://www.slideshare.net/rickwu12/ss-54297655" target="_blank" rel="external">高效能執行緒</a></p>
<ul>
<li>關於執行緒Thread的介紹，內容包含：Thread、Handler、HandlerThread、Memory leaks、ThreadPool、Asynctask、Service、IntentService、Binder、AIDL、Messenger</li>
<li>這份簡報真的講的超好的，把關於 Thread 需要注意的各種事情都講到了，根本就是作業系統講多工的重點精華整理了。</li>
</ul>
</li>
<li><p><a href="http://www.infoq.com/cn/articles/how-to-understand-microservice-architecture" target="_blank" rel="external">先把平台做紮實，再來微服務吧</a></p>
<ul>
<li>我的點評：現階段有非常多的整體系統的規劃開發模式，把整體的服務切割成一個一個的小服務然後把他們串起來，似乎是一種顯學，所以漸漸的 Docker 的管理、Vagrent 之類的操作越來越多人在討論，但是不是需要真的所有的系統規劃一開始就從微服務開始設計起，就是一個值得討論的學問了。這篇文章講了幾個是不是要作為服務的思考方向值得一看。</li>
</ul>
</li>
<li><p><a href="http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api" target="_blank" rel="external">Best Practices for Designing a Pragmatic RESTful API</a></p>
<ul>
<li>相較於幾年前設計網站 API 會使用 SOAP 來設計，現今大多會考慮 RESTful API ，RESTful 會以物件的概念去思考整個結構，例如以 User 開頭底下的操作，就都是關於 User 的，以 Book 為開頭，就會是關於 Book 的操作，相對於 SOAP 會更容易讓人了解。</li>
<li>這篇文章的內容，就是在講在設計 RESTful 的 API 應該要考慮些什麼事情，怎麼設計比較好。</li>
</ul>
</li>
<li><p><a href="http://blog.longwin.com.tw/2015/11/php-rawurlencode-urlencode-diff-2015/" target="_blank" rel="external">PHP rawurlencode 與 urlencode 的差異</a></p>
</li>
<li><p><a href="http://bl.ocks.org/abernier/3070589" target="_blank" rel="external">網址各個結構的專有名詞</a></p>
<ul>
<li><img src="sozOKO7.png" alt=""></li>
</ul>
</li>
</ul>
<h3 id="DevOps-工具"><a href="#DevOps-工具" class="headerlink" title="DevOps 工具"></a>DevOps 工具</h3><ul>
<li><p><a href="http://dustinrcollins.com/devops-on-osx" target="_blank" rel="external">DevOps on OSX</a></p>
<ul>
<li>網站維運開發 DevOps 在 MAC OSX 上面可以用的開發工具列表。</li>
</ul>
</li>
<li><p><a href="http://smalltowntechblog.com/2015/11/01/chef-x-docker-x-packer-give-me-golden-image/" target="_blank" rel="external">Chef X Docker X Packer – Give Me Golden Image</a></p>
<ul>
<li>這是一篇筆記，記錄關於如何使用劇本 Script，如何很快的建置出產品可以發佈的影像檔，進而快速測試，及早發現問題，增加產品的品質。</li>
</ul>
</li>
<li><p><a href="http://blogger.gtwang.org/2015/01/ubuntu-linux-install-influxdb.html" target="_blank" rel="external">在 Ubuntu Linux 中安裝 InfluxDB 時間序列用的資料庫</a></p>
<ul>
<li>InfluxDB 是一個專門適用於時間序列用的資料庫，適合用來儲存大量連續行的觀測資料，例如系統的 CPU 與記憶體使用狀態監測，或是一些感測器（sensors）的連續監測資料。</li>
<li>這篇文章主要在記錄，如何在 Ubuntu 上安裝。</li>
</ul>
</li>
<li><p><a href="http://rancher.com/" target="_blank" rel="external">Rancher - Private Container Service</a></p>
</li>
<li><p><a href="http://www.nowcoder.com/courses/2" target="_blank" rel="external">GitHub&amp;Git入门基础(簡體中文)</a></p>
<ul>
<li>大陸的線上課程網站，這門課是介紹 GIT 及 GitHub 的基礎使用課程。</li>
</ul>
</li>
<li><p><a href="https://imququ.com/post/header-compression-in-http2.html" target="_blank" rel="external">HTTP/2 头部压缩技术介绍</a></p>
<ul>
<li>關於 HTTP2 的規範正式出爐，幾個知名的 HTTP Server 也開始正式支援，我想，接下來 WebServer 有沒有支援 HTTP2 來提升網路傳輸速率會是基本要求，這篇文章介紹 HTTP2 的基本原理及技術。</li>
</ul>
</li>
</ul>
<h3 id="Library-or-工具"><a href="#Library-or-工具" class="headerlink" title="Library or 工具"></a>Library or 工具</h3><ul>
<li><p><a href="https://www.gitbook.com/book/zonble/kkbox-ios-dev/details" target="_blank" rel="external">KKBOX iOS/Mac OS X 基本開發教材</a></p>
<ul>
<li>這份教材是為了 KKBOX iOS/Mac OS X 開發部門的新人訓練所設計，目的是培養 出可以開發、維護 KKBOX 的 iOS 與 Mac OS X 版本，以及我們其他軟體產品的 工程師。</li>
</ul>
</li>
<li><p><a href="https://github.com/dbcli/mycli" target="_blank" rel="external">mycli</a></p>
<ul>
<li>A Terminal Client for MySQL with AutoCompletion and Syntax Highlighting.</li>
<li><img src="main.gif" alt=""></li>
</ul>
</li>
<li><p><a href="http://gearman.org/" target="_blank" rel="external">http://gearman.org/</a></p>
<ul>
<li>Gearman provides a generic application framework to farm out work to other machines or processes that are better suited to do the work.</li>
</ul>
</li>
<li><p><a href="http://laraveldaily.com/10-less-known-but-awesome-laravel-collections-methods/" target="_blank" rel="external">Laravel 提供的 collections 方法</a></p>
</li>
<li><p><a href="http://www.ptengine.com/" target="_blank" rel="external">ptengine</a></p>
<ul>
<li>使用者研究調查工具</li>
</ul>
</li>
</ul>
<h3 id="資料庫操作"><a href="#資料庫操作" class="headerlink" title="資料庫操作"></a>資料庫操作</h3><ul>
<li><a href="http://wiki.planetoid.info/index.php/Visual_explanation_of_MySQL_joins" target="_blank" rel="external">圖解資料庫的 Joins (RIGHT Join、LEFT Join、INNER Join、OUTER Join) 的差異</a></li>
</ul>
<h3 id="前端網頁開發工具"><a href="#前端網頁開發工具" class="headerlink" title="前端網頁開發工具"></a>前端網頁開發工具</h3><ul>
<li><p><a href="http://javier.xyz/img2css/" target="_blank" rel="external">Img2CSS</a></p>
<ul>
<li>協助將圖片直接轉換成CSS，並且直接顯示在頁面上。</li>
</ul>
</li>
<li><p><a href="http://iconion.com/" target="_blank" rel="external">Iconion: Free Icon Maker</a></p>
<ul>
<li>提供免費的且可以自行設置的 Icon 產生器。</li>
<li><img src="top-screen.jpg" alt="Iconion"></li>
</ul>
</li>
</ul>
<h3 id="規劃設計工具"><a href="#規劃設計工具" class="headerlink" title="規劃設計工具"></a>規劃設計工具</h3><ul>
<li><p><a href="http://www.cooper.com/prototyping-tools" target="_blank" rel="external">Prototyping Tools</a></p>
<ul>
<li>這是一篇比較文章，比較了像是 AxureRP、Briefs、Form等知名的 Prototyping 工具，還有一些像是製作一個特定的網頁需要多少時間的時間比較表。</li>
<li><img src="tfH3kmW.png" alt=""></li>
</ul>
</li>
<li><p><a href="https://proto.io/" target="_blank" rel="external">Proto.io</a></p>
<ul>
<li>設計師朋友推薦製作 Prototype 的工具。<ul>
<li><a href="https://proto.io/en/demos/" target="_blank" rel="external">Prototype Demos - proto.io</a></li>
</ul>
</li>
<li><img src="2VRr5pY.png" alt=""></li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MoClippings #1 創始號：總要開始，才能完成]]></title>
      <url>https://usedfire.net/Clippings/2015/MoClippings-1/</url>
      <content type="html"><![CDATA[<pre><code>發刊日 : 2015/10/20 - 2015/10/31
本期包含趣味小語、資訊知事、行銷推廣、專案管理以及技術知事
</code></pre><h2 id="發刊語-murmur"><a href="#發刊語-murmur" class="headerlink" title="發刊語 - murmur"></a>發刊語 - murmur</h2><ul>
<li><p>會開始整理這份自己的Issue News 是突然發現，常常看到一些寫的很不錯的文章，而總覺得這些需要有一個地方把這些好文章總結記錄下來，一是如此在需要的時候才能順利的找到。有整理過的資訊，才能成為知識。所以開始試著整理這份文件，當累積一定的長度，就發刊。</p>
</li>
<li><p><strong>想的到才看的到</strong>，團隊的集體創意需要不斷的累積背景知識，才能夠想，也才能一起看到。</p>
</li>
<li><p>看過的只是資訊、整理起來讓自己找的到，知道可以用，這才是知識。<a id="more"></a></p>
</li>
</ul>
<h2 id="趣味小語"><a href="#趣味小語" class="headerlink" title="趣味小語"></a>趣味小語</h2><pre><code>相關小語來源是這段期間Twitter或訂閱的feedly上被分析出來的熱門文字。
</code></pre><ul>
<li><p>越大的公司留下來的是會做人的人，並非會做事的人 - Juppet(@juppet) - <a href="https://twitter.com/juppet/status/657484034004533248" target="_blank" rel="external">October 23, 2015</a></p>
</li>
<li><p>使用者要的不是功能 - 他們只想解決問題，讓自己過的爽一點而已。 - <a href="https://www.facebook.com/photo.php?fbid=898970866819364&amp;set=a.331194663596990.69561.100001193773658&amp;type=3&amp;permPage=1" target="_blank" rel="external">October 31, 2015</a></p>
<ul>
<li><img src="3McXAUm.jpg" alt=""></li>
<li>所以，為什麼先有功能，再來嫌使用者不會用？</li>
<li>功能只是解決問題的方法之一。</li>
</ul>
</li>
<li><p>如果像這樣，我們稱這是「產品的死亡循環」：1. 沒人用產品 → 2.問使用者我們缺少了什麼功能 → 3.補足缺少的功能 → 4.回到第一點。原文：「”This is what I’m calling the product deathcycle.”」- <a href="https://twitter.com/RichRogersHDS/status/657723527542538240?s=04" target="_blank" rel="external">9:01 AM - 24 Oct 2015</a></p>
<ul>
<li><img src="CSC0EDXWwAAPrsr.png" alt=""></li>
</ul>
</li>
</ul>
<hr>
<h2 id="資訊知事"><a href="#資訊知事" class="headerlink" title="資訊知事"></a>資訊知事</h2><ul>
<li><a href="http://www.playpcesor.com/2015/10/file-name-tips.html" target="_blank" rel="external">電腦玩物 - 一看就能採取行動的檔案命名技巧：我的兩大檔名規則</a><ul>
<li>檔名規則一：數字與符號，排序重要、待辦、計劃、備查檔案<ul>
<li>透過數字可以有效率的讓檔案依照我的檔名去排列，於是我就能用數字來達到兩個目的：<ol>
<li>排序檔案或資料夾的重要性（愈重要的排在愈前面）。</li>
<li>把相關檔案放在一起（讓同一類檔案或資料夾排序在一起）。</li>
</ol>
</li>
</ul>
</li>
<li>檔名規則二：關鍵字，說明行動-主題-關鍵內容<ul>
<li>行動：這個檔案目前需要採取什麼行動？如果沒有，可以不寫。</li>
<li>主題：這是什麼類型、屬性、需求、專案的檔案。</li>
<li>關鍵內容：這個檔案裡面有什麼獨特內容，可以從人事時地物的角度去想。</li>
</ul>
</li>
</ul>
</li>
<li><p><a href="http://www.slideshare.net/warfan/devops-53161280" target="_blank" rel="external">DevOps：建造開發維運的跨界之橋</a></p>
<ul>
<li>這份簡報在介紹整體 DevOps 到底在做些什麼事情，還蠻值得一看的。</li>
<li>DevOps 這詞指的是開發(Development)與維運(Operation)的結合，根據 Wiki 上面的解釋：<blockquote>
<p>是過程、方法與系統的統稱，用於促進開發（應用程式/軟體工程）、技術運營和質量保障（QA）部門之間的溝通、協作與整合。它的出現是由於軟體行業日益清晰地認識到：為了按時交付軟體產品和服務，開發和運營工作必須緊密合作。</p>
</blockquote>
</li>
</ul>
</li>
<li><p><a href="http://blog-tw.oursky.com/post/132010574375/offline-first-say-goodbye-to-network-connection-error" target="_blank" rel="external">逆流而上的 Offline-First 概念：跟 Network Connection Error 說拜拜</a></p>
<ul>
<li>既然一個 App 要以網絡服務為賣點，其實就更應在早期建構時考慮到網絡不穩的問題，所以就出現了所謂 Offline-First 的概念。 <strong>Offline 不是一個 Bug，也不是一個Feature。</strong> 而是每一個手機應用程式都應該具有的基本 Support。</li>
<li>實際使用過 Offline-First 的設計後，你甚至會發現你的 App 和以往有一些明顯的差別：<ul>
<li>不再出現莫名其妙的 Data Loss</li>
<li>任何時候都能運作正常</li>
<li>整個 App 用起來感覺更順暢更快速</li>
</ul>
</li>
<li>三種處理情境：<ul>
<li>顯示離線狀態（Offline State UI）</li>
<li>使用靜態資訊如常運作（Static Cache）</li>
<li>使用動態資訊進行暫時性作業（Dynamic Cache）</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="行銷推廣"><a href="#行銷推廣" class="headerlink" title="行銷推廣"></a>行銷推廣</h2><ul>
<li><a href="http://www.slideshare.net/backtrue/google-analytics-13875934" target="_blank" rel="external">Google analytics教學手冊</a> - by <a href="http://www.slideshare.net/backtrue" target="_blank" rel="external">Brian Chiu</a><ul>
<li>作者小黑在業界關於SEO、行銷領域還蠻知名的，是之前電商ASAP的行銷總監。</li>
</ul>
</li>
<li><p><strong><a href="https://www.udemy.com/internetrule/?dtcode=2Lz1ARN3SAdB" target="_blank" rel="external">網站經營的法則 - 掌握流量建立屬於你的經營模式（繁體中文）</a></strong></p>
<ul>
<li>這是一個 Udemy 的課程，這門課程的講師是知名科技網站癮科技的站長-吳顯二所開立。</li>
<li>這是一門關於網際網路經營法則的課程，裡面內含他加入這個產業十年的心得，也是關於「線上教學」的下一個實驗。</li>
<li>這門課呈現在只要1元美金，之後每更新一次課程內容，會加10元，絕對值得花時間去聽。</li>
<li>我買了</li>
</ul>
</li>
<li><p><a href="http://blog.newsleopard.com/2015/10/22/4%E5%80%8Bcall-to-action%E6%B8%AC%E8%A9%A6%EF%BC%8C%E5%8D%94%E5%8A%A9%E4%BD%A0%E6%8F%90%E5%8D%87%E9%9B%BB%E5%AD%90%E5%A0%B1%E9%BB%9E%E6%93%8A%E7%8E%87/" target="_blank" rel="external">4個call to action測試，協助你提升電子報點擊率</a></p>
<ul>
<li>顏色<ul>
<li>挑選正確的顏色更能讓你的 call to action 更容易被注意到</li>
</ul>
</li>
<li>大小、形狀<ul>
<li>call to action 的外觀是影響點擊率的因素之一。大小的設定沒有一定的標準答案，可以在電子報中嘗試調整大小所帶來的影響。然而，這裡建議至少是88 <em> 88 pixels (為了好記，或是 100 </em> 100 pixels)，才能方便<a href="http://blog.newsleopard.com/2015/05/21/%e5%88%a5%e5%86%8d%e6%80%aa%e9%96%8b%e4%bf%a1%e7%8e%87%e4%bd%8e%e4%ba%86%ef%bc%8c%e4%bd%a0%e7%9a%84%e9%9b%bb%e5%ad%90%e5%a0%b1mobile-first%e4%ba%86%e5%97%8e%ef%bc%9f/" target="_blank" rel="external">手機使用者</a>點擊。</li>
</ul>
</li>
<li>合理的文字<ul>
<li>哪種寫法才是正確的？我想答案是：符合當下情境，並能融入訂閱者的寫法。</li>
</ul>
</li>
<li>位置<ul>
<li>根據 <a href="http://www.slideshare.net/DistilledSEO/peep-lajasearchlove-london-2013?from_search=3" target="_blank" rel="external">ConversionXL 的研究</a>，使用者花 80% 的時間會停在 above the fold上。試著調整 call to action 放在 above the fold 還是 below the fold，或許不同的點擊結果能讓你更了解自己的電子報。</li>
</ul>
</li>
<li>持續測試<ul>
<li>研究顯示，A/B 測試可以提升 49% 的轉換率，因此沒有必要害怕失敗</li>
<li>哪一種 call to action 才能真正符合訂閱者當下的情境，進而觸發點擊？或許你應該透過 A/B 測試問問他們。</li>
</ul>
</li>
<li>參考案例<ul>
<li>stacksocial 的促銷電子報</li>
<li>techbargains 的促銷電子報</li>
<li>TigerDirect 的促銷電子報</li>
<li>Zuzily 的促銷電子報</li>
<li>fromyouflowers 的促銷電子報</li>
<li>Groupon 的促銷電子報</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><a href="http://www.slideshare.net/seanellis/agile-marketing-meetup-slideshare-52690997" target="_blank" rel="external">Agile Marketing Meetup: Moving Beyond the Marketing Plan So You Remain Relevant</a><ul>
<li>這個投影片談到 <a href="http://growthhacker.com/" target="_blank" rel="external">growthhacker.com</a> 是使用怎樣的流程做自己的 growth，很多細節如怎麼產生 ideas，怎麼為 task 評分，怎麼學習測試結果等，都值得參考。</li>
</ul>
</li>
</ul>
<hr>
<h2 id="專案管理"><a href="#專案管理" class="headerlink" title="專案管理"></a>專案管理</h2><ul>
<li><p>文章：<a href="http://www.infoq.com/cn/news/2015/10/Bryanedds-Medium" target="_blank" rel="external">你是否也處在這樣的反模式中</a></p>
<ul>
<li>所謂的反模式指的是讓整個團隊、專案往反方向前進</li>
<li>書摘：<ol>
<li>業務思維偏愛短期利益</li>
<li>不合群就會被釘上十字架</li>
<li>軟件架構師成為政客</li>
<li>忍受痛苦是你提供的商品</li>
<li>周圍的同事不支持變革</li>
<li>總是有人伺機“削（Undercut）”你</li>
<li>責任心被剝奪</li>
<li>方法論成為管理工具</li>
</ol>
</li>
</ul>
</li>
<li><p>文章：<a href="http://www.infoq.com/cn/articles/pragmatic-technical-debt" target="_blank" rel="external">實務技術債務管理</a></p>
<ul>
<li>技術債發生的原因：<ul>
<li>產生債務：例如-代碼重複、違反靜態工具規則和代碼異味。</li>
<li>設計和架構債務：例如-設計異味、違反設計規則和違反架構規則。</li>
<li>測試債務：例如-缺乏測試、測試覆蓋面不足和不正確的測試設計。</li>
<li>文檔債務：例如-沒有重大問題的文檔、缺乏文檔和文檔過期。</li>
<li>戰略債務：-這種類型的債務是在知情的狀況下為了戰略利益（例如首次市場發行）而產生，並長期存在。</li>
<li>戰術債務：-這種類型的債務是在知情的情況下為了快速收益而產生，通常適用於短期。</li>
<li>疏忽債務：-不慎產生的債務通常是在不知情的情況由於缺乏知識和意識而產生。</li>
<li>增量債務：-定期不慎產生的債務導致增量債務。</li>
</ul>
</li>
<li>償還技術債<ol>
<li>識別、記錄和追踪債務</li>
<li>優先處理異味</li>
<li>在每個迭代中分期償還債務</li>
<li>激勵和獎勵員工保持品質</li>
<li>遵循“男孩的童子軍規則”</li>
<li>留意可能出現的大規模的債務償還</li>
<li>平地償還債務而不是垂直地</li>
<li>在某些情況下不償還債務</li>
</ol>
</li>
<li>書籍：<a href="http://www.books.com.tw/products/CN11124627" target="_blank" rel="external">Scrum 技術精髓</a><ul>
<li><img src="Lt0E0gB.jpg" alt=""></li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><p><a href="http://www.infoq.com/cn/news/2015/10/Technology-Leader" target="_blank" rel="external">如何才能成为一个好的技术领导者？</a></p>
<ul>
<li>如果不能从帮助团队获得满足感，那么就不要成为一名领导者</li>
<li>将自己视为其他开发人员的导师</li>
<li>随时准备好回答团队成员的问题</li>
<li>减少具体的编码工作，但仍然要编码</li>
<li>要谦逊</li>
<li>要诚实</li>
</ul>
</li>
<li><p><a href="https://sprint.ly/blog/your-developers-arent-slow/" target="_blank" rel="external">Your developers aren’t slow</a> - 有時候進度緩慢，不見得是開發者的問題 from <a href="https://www.facebook.com/yftzeng.tw" target="_blank" rel="external">ant</a></p>
<ul>
<li><a href="http://www.inside.com.tw/2015/10/27/your-developers-arent-slow" title="進度落後不是開發者的錯，工作流程可能才是兇手！" target="_blank" rel="external">進度落後不是開發者的錯，工作流程可能才是兇手！</a> - inside 翻譯的中文版文章</li>
<li>Unclear requirements - 不明確的需求</li>
<li>Changing requirements - 需求一直變更</li>
<li>Context switching - 太常打擾工程師，破壞了他們高速開發所需的專注力</li>
<li>Take responsibility - 給管理者的<ul>
<li>Help your team understand the vision - 讓整個團對瞭解未來的目標及願景。</li>
<li>Write well-defined user stories - 定義及撰寫好的規格及使用者故事。</li>
<li>Reduce context switching costs - 降低工作人員進行資訊交換的成本。</li>
</ul>
</li>
<li>這篇的來源作者是一個線上音樂網站的首席架構師，在他的<a href="https://www.facebook.com/yftzeng.tw/posts/10203624817380411" target="_blank" rel="external">討論串</a>中他也提到了他們公司怎麼做：</li>
</ul>
</li>
</ul>
<figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">我們工程師不常開會但很常溝通。開會通常有四種原因</div><div class="line"></div><div class="line">一、例行產品會議:</div><div class="line"></div><div class="line">只強迫負責產品的工程師參加，不過歡迎有興趣的工程師在旁聆聽。</div><div class="line">主要是公司政策都是開放的，原則上不強迫參與</div><div class="line">(除非你本來就負責產品)，但要聽也歡迎。</div><div class="line"></div><div class="line">二、技術分享會議。</div><div class="line"></div><div class="line">公司偶爾會分享技術，自由參與不強迫。</div><div class="line"></div><div class="line">三、緊急會議。</div><div class="line"></div><div class="line">緊急且重大的事，但只會找相關工程師招開臨時會。</div><div class="line"></div><div class="line">四、一般會議。</div><div class="line"></div><div class="line">平常工程師會在 channel 溝通，</div><div class="line">channel 溝通的好處是不會打斷工程師專心工作，</div><div class="line">他們有空閒才會看到 channel 訊息，再來處理即可，</div><div class="line">但有時文字溝通的效率不如當面口述加上畫白板，</div><div class="line">所以討論若無法聚焦時就會在 channel 約時間，</div><div class="line">相關工程師同意後就會自行進會議室開會。</div><div class="line"></div><div class="line"><span class="built_in">RD</span> 間的默契大概類似如此。</div><div class="line">我覺得這跟架構一樣沒有好與不好，</div><div class="line">只要適用團隊的文化即可。</div></pre></td></tr></table></figure>
<hr>
<h2 id="技術知事"><a href="#技術知事" class="headerlink" title="技術知事"></a>技術知事</h2><h3 id="開發心法"><a href="#開發心法" class="headerlink" title="開發心法"></a>開發心法</h3><ul>
<li><p><a href="http://www.phpied.com/how-to-write-unmaintainable-php-code-2009/" target="_blank" rel="external">How to write unmaintainable PHP code - 如何寫出無法維護的 PHP 程式碼</a></p>
<ul>
<li>Ban coding conventions.</li>
<li>No comments.</li>
<li>Standardize on Notepad.</li>
<li>No unit testing.</li>
<li>No templating engine.</li>
<li>Version control.</li>
<li>Build a framework.</li>
</ul>
</li>
<li><p><a href="http://news.oneapm.com/shenjian-oneapm-course/" target="_blank" rel="external">58同城沈劍：好的架構是進化來的，不是設計來的</a></p>
<ul>
<li><strong>好的架構不是設計出來的而是演進出來的</strong></li>
<li>中等規模：流量跨過十萬的階段，數據庫成為瓶頸</li>
<li>大流量：將整個Windows 技術體系轉向了Java 體系</li>
<li>當架構變成「蜘蛛網」，人肉已很難搞定！</li>
</ul>
</li>
<li><p><a href="http://www.php-fig.org/" target="_blank" rel="external">PHP FIG 組織</a></p>
<ul>
<li><a href="http://www.php-fig.org/psr/psr-1/" target="_blank" rel="external">PSR-1: Basic Coding Standard</a> - 基本的PHP程式碼撰寫標準規範</li>
<li><a href="http://www.php-fig.org/psr/psr-2/" target="_blank" rel="external">PSR-2: Coding Style Guide</a> - PHP程式碼撰寫標準規範</li>
<li><a href="http://www.php-fig.org/psr/psr-3/" target="_blank" rel="external">PSR-3: Logger Interface</a> - PHP 在實作 Log 的介面規範</li>
<li><a href="http://www.php-fig.org/psr/psr-4/" target="_blank" rel="external">PSR-4: Improved Autoloading</a><ul>
<li>PHP 在 5.3版之後，實作了 Autoloading ，讓PHP程式透過一定結構可以自動載入，不用到處 include ，但由於明確定義規則，因此坊間 Library 有點亂，因此 FIG 定義了這部分的規範。</li>
</ul>
</li>
<li><a href="http://www.php-fig.org/psr/psr-7/" target="_blank" rel="external">PSR-7: HTTP Message Interfaces</a><ul>
<li>PHP 程式可以自行定義 Web 頁面間 Server - Client 的訊息傳遞，如 HTTP Header 但並沒有明確規範格式，因此 FIG 定義了這部分的規範。</li>
</ul>
</li>
<li>其它還有尚未定義完成的還有 Cache、Security Reporting…</li>
</ul>
</li>
<li><p><a href="https://github.com/tjwei/awesome-tw-foss" target="_blank" rel="external">台灣 developers 建立的 free/open source project 蒐集列表</a></p>
<ul>
<li>這邊蒐集了很多台灣開發者們建立的開源專案，舉凡程式語言框架、網站服務、桌面應用程式、CLI程式、瀏覽器外掛等等。</li>
</ul>
</li>
<li><a href="https://github.com/mingderwang/development-note" title="Software Development Notes" target="_blank" rel="external">Software Development Notes</a><ul>
<li>系統開發工具列表，這邊蒐集了：系統維運、監控、開發、整合的一堆工具</li>
</ul>
</li>
</ul>
<h3 id="測試工具"><a href="#測試工具" class="headerlink" title="測試工具"></a>測試工具</h3><ul>
<li><p><strong><a href="http://jaceju.net/2015/10/27/web-testing-with-phpunit-mink/" target="_blank" rel="external">利用 PHPUnit 與 Mink 來做 Web 測試</a></strong></p>
<ul>
<li>如果你面對的是以前舊有的 PHP 程式，它改起來很痛苦，一堆不良的 PHP 程式習慣都阻礙你的修正；使得每次調整功能時，到底改得對不對，得要等到上線才知道。想要重寫一個新版本，但太多的實作細節你不清楚；也沒有最新的規格文件，讓你無法為新版本做出功能無誤的保證。</li>
<li>現在你唯一擁有的，就是已經在線上運作的程式邏輯；雖然它可能還有 bug ，但至少大多數的功能是通過使用者驗證的。那麼先為它買個保險吧！確保之後的修改不會影響到其他功能的正常運作；而最直接的方式，就是把目前程式邏輯所呈現的結果或是使用者的操作，寫成自動化 Web 測試。</li>
</ul>
</li>
<li><p><a href="https://github.com/minkphp/Mink" target="_blank" rel="external">PhantomJS</a></p>
<ul>
<li>PhatomJS 很適合拿來作一些網頁介面的自動化測試 (但由於是整合 WebKit，所以無法測試 IE 或者 FF 所呈現的情況)，此外網頁截圖這件事也是很吸引人的小功能。</li>
<li>參考網站：<a href="http://blog.darkthread.net/post-2013-08-29-phantomjs.aspx" target="_blank" rel="external">使用PhantomJs產生網頁擷圖</a></li>
<li>參考網站：<a href="http://blog.dm4.tw/blog/2014/05/11/my-first-experience-with-phantomjs/" target="_blank" rel="external">PhantomJS 初體驗</a></li>
<li>參考網站：<a href="http://syshen.cc/post/15989917365/%E7%94%A8-phantomjs-%E4%BD%9C-web-%E8%87%AA%E5%8B%95%E5%8C%96%E6%B8%AC%E8%A9%A6" target="_blank" rel="external">用 PhantomJS 作 Web 自動化測試</a></li>
</ul>
</li>
<li><p><a href="http://mink.behat.org/en/latest/" target="_blank" rel="external">Mink</a></p>
<ul>
<li>一個可以用PHP 5.3以上版本操作瀏覽器的測試工具</li>
<li><a href="http://www.open-open.com/lib/view/open1430832116976.html" target="_blank" rel="external">Web浏览器模拟测试：Mink</a></li>
</ul>
</li>
<li><p><a href="https://codegeekz.com/12-best-php-automated-test-frameworks/" target="_blank" rel="external">12 Best PHP Automated Test Frameworks</a></p>
<ol>
<li><a href="http://www.seleniumhq.org/" target="_blank" rel="external">Selenium</a> - 自動化的瀏覽器呈現頁面測試</li>
<li><a href="https://phpunit.de/" target="_blank" rel="external">PHPUnit</a> - PHP單元測試框架</li>
<li><a href="http://docs.behat.org/en/v2.5/" target="_blank" rel="external">Behat</a> - 知名的 BDD (behavior driven development) 測試框架，目標是，定義好規格之後，直接用定義的規格作測試，是一個專案經理、客戶與開發者間，很方面的一個溝通及定規格工具。</li>
<li><a href="https://github.com/crysalead/kahlan" target="_blank" rel="external">Kahlan</a> - 全功能的單元測試及BDD工具測試框架工具。</li>
<li><a href="https://github.com/atoum/atoum" target="_blank" rel="external">Atoum</a> - 單元測試工具</li>
<li><a href="http://codeception.com/" target="_blank" rel="external">Codeception</a> - 全功能的測試工具、框架，方便做各種測試</li>
<li><a href="http://simpletest.org/" target="_blank" rel="external">SimpleTest</a> - 簡單而容易使用的小測試框架，可以用在 TDD 測試先行開發及一般的單元測試。</li>
<li><a href="http://datasift.github.io/storyplayer/" target="_blank" rel="external">Storyplayer</a> - 一個全端的測試框架。</li>
<li><a href="http://peridot-php.github.io/" target="_blank" rel="external">Peridot</a> - 一個輕量的測試框架，是一個事件驅動的框架。</li>
<li><a href="https://github.com/danielstjules/pho" target="_blank" rel="external">PHO</a> - 一個BDD測試框架。</li>
<li><a href="https://github.com/padraic/mockery" target="_blank" rel="external">Mockery</a> - 在 PHP Unit Test 裡常常使用的模擬元件工具。</li>
<li><a href="http://www.phpspec.net/en/latest/" target="_blank" rel="external">PHP Specs</a> - 一個用定義規格，來進行程式測試的 BDD 框架。</li>
</ol>
</li>
</ul>
<h3 id="PHP-Library-or-工具"><a href="#PHP-Library-or-工具" class="headerlink" title="PHP Library or 工具"></a>PHP Library or 工具</h3><ul>
<li><a href="http://www.phpclasses.org/package/9423-PHP-Convert-PDF-to-HTML-using-Poppler.html" title="PHP-Convert-PDF-to-HTML-using-Poppler" target="_blank" rel="external">使用PHP進行 PDF to HTML轉換</a><ul>
<li>在 PHP 將 PDF 檔案轉為 HTML 檔</li>
<li>底層使用<a href="http://poppler.freedesktop.org/" title="Poppler" target="_blank" rel="external">Poppler</a></li>
<li>PHP 5.3+</li>
</ul>
</li>
<li><a href="http://carbon.nesbot.com/" target="_blank" rel="external">Carbon</a><ul>
<li>在處理程式上，處理「時間」非常好用的套件</li>
<li>PHP 5.4+</li>
</ul>
</li>
<li><a href="http://www.phpclasses.org/package/9431-PHP-Generate-UUID-codes-in-either-version-3-4-or-5.html#information" title="PHP UUID Generation class" target="_blank" rel="external">PHP UUID Generation class</a></li>
<li><a href="https://github.com/ziadoz/awesome-php/" target="_blank" rel="external">Awesome PHP</a><ul>
<li>群眾一起整理出來的PHP的各種結構或工具的懶人包，需要什麼功能都可以上去看看</li>
</ul>
</li>
<li><a href="http://php.net/manual/en/types.comparisons.php" target="_blank" rel="external">PHP type comparison tables</a><ul>
<li>寫PHP的時候常常會不小心因為型別的比較細節而造成一些誤判，在官方整理了PHP各種型別比較的結果，忘記了可以來這邊查詢。</li>
</ul>
</li>
<li><a href="http://designpatternsphp.readthedocs.org/en/latest/" target="_blank" rel="external">PHP Design Patterns 1.0</a> from  <a href="https://www.facebook.com/jace.ju?fref=nf" target="_blank" rel="external">JaceJu</a><ul>
<li>這本電子書介紹了各種 Design Patterns 如何在 PHP 上的實作，也提到各種實務上的例子。</li>
<li>但還是要記住： Design Patterns 重意不重形，也不該特意使用。要先理解待解決的問題是什麼，分析出當下能滿足的設計；而不是一開始就思考怎麼用模式去解決問題，並拘泥於模式的實作方式。</li>
</ul>
</li>
<li><p><a href="http://2015.phpconf.tw/" title="PHPConf 2015" target="_blank" rel="external">Taiwan PHP Conf 2015 議程</a></p>
<ul>
<li>PHP Conf 的各個議程內容及相關投影片</li>
<li>共筆筆記 <a href="https://laraveltw.hackpad.com/PHP-Conf-2015--Qczl9WtA4Ip" title="PHP Conf 2015 共筆筆記" target="_blank" rel="external">PHP Conf 2015 共筆筆記</a></li>
<li><a href="https://github.com/PHPConf-TW/website-2015/tree/master/download" target="_blank" rel="external">投影片列表</a></li>
<li>值得一看的投影片：<ul>
<li><a href="https://github.com/PHPConf-TW/website-2015/raw/master/download/%E5%87%8C%E8%8B%A5%E8%99%9B%20-%20%E7%95%B6%E5%B0%88%E6%A1%88%E6%BC%B8%E8%B6%95%EF%BC%8C%E7%95%B6%E9%81%B7%E7%A7%BB%E4%B9%9F%E4%B8%8D%E5%86%8D%E9%82%A3%E9%BA%BC%E9%9B%A3.pdf" target="_blank" rel="external">凌若虛 - 當專案漸趕，當遷移也不再那麼難 (Ship Your Projects with Docker EcoSystem)</a></li>
<li><a href="https://github.com/PHPConf-TW/website-2015/raw/master/download/%E9%99%B3%E6%AD%A3%E7%91%8B-DevOps%E5%BB%BA%E9%80%A0%E9%96%8B%E7%99%BC%E7%B6%AD%E9%81%8B%E7%9A%84%E8%B7%A8%E7%95%8C%E4%B9%8B%E6%A9%8B.pdf" target="_blank" rel="external">陳正瑋-DevOps建造開發維運的跨界之橋</a></li>
<li><a href="https://github.com/PHPConf-TW/website-2015/raw/master/download/%E8%8C%83%E8%81%96%E4%BD%91%20-%20%E8%B7%9F%E8%91%97%20Laravel%205.1%20%E4%B8%80%E8%B5%B7%E6%88%90%E7%82%BA%E6%9B%B4%E5%A5%BD%E7%9A%84%20PHP%20%E9%96%8B%E7%99%BC%E8%80%85.pdf" target="_blank" rel="external">范聖佑 - 跟著 Laravel 5.1 一起成為更好的 PHP 開發者</a></li>
<li><a href="https://github.com/PHPConf-TW/website-2015/raw/master/download/%E6%9B%BE%E7%BE%A9%E5%B3%B0%20-%20Enterprise%20Architecture%20Case%20in%20PHP.pdf" target="_blank" rel="external">曾義峰 - Enterprise Architecture Case in PHP</a></li>
</ul>
</li>
</ul>
</li>
<li><p><a href="http://learninglaravel.net/multiple-authentication-in-laravel-51/link" target="_blank" rel="external">Multiple Authentication in Laravel 5.1</a></p>
<ul>
<li>利用 Sarav/Multiauth 這個套件讓你的 Laravel 應用程式支援多重身份，這樣一來前台和後台就可以用不同的身份登入了。</li>
</ul>
</li>
</ul>
<h3 id="前端網頁開發工具"><a href="#前端網頁開發工具" class="headerlink" title="前端網頁開發工具"></a>前端網頁開發工具</h3><ul>
<li><a href="https://www.gitbook.com/book/frontendmasters/front-end-handbook/details" target="_blank" rel="external">Front-end Handbook</a><ul>
<li>記錄許多前端開發工具及相關教學</li>
</ul>
</li>
<li><a href="https://github.com/codylindley/frontend-tools" target="_blank" rel="external">Front-end Tools</a><ul>
<li>前端開發工具整理</li>
</ul>
</li>
<li><a href="http://www.codeply.com/" target="_blank" rel="external">CodePly</a><ul>
<li>實驗各前端框架 RWD 的好地方，也可以當成簡易的前端頁面開發工具使用。</li>
</ul>
</li>
<li><a href="https://www.flickr.com/photos/girliemac/sets/72157628409467125/" target="_blank" rel="external">HTTP Status Cat</a><ul>
<li>用貓來比喻 HTTP協定的各種狀態 LoL</li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[關於我]]></title>
      <url>https://usedfire.net/about/index.html</url>
      <content type="html"><![CDATA[<p>大家好，我是<code>墨嗓</code> ( <code>mouson</code> )，本名「<code>陳佑竹</code>」，在學期間經歷電機、電子、通訊及資訊工程等系所的學術歷程薰陶；就業後開始參與線上全台最大之物流中心系統主機維運、開發等事務，而後因緣際會轉職專案型公司，參與新系統規劃、分析及專案管理、營運行銷等大小瑣事，因此奠定了T型人在資訊技術上的知識水平。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[藏書閣]]></title>
      <url>https://usedfire.net/reading/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
