<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[MoIssue #2 創新，是整個團隊的事]]></title>
      <url>http://usedfire.net/2015/11/10/MoIssue-2/</url>
      <content type="html"><![CDATA[<pre><code>發刊日 : 2015/10/31 - 2015/11/10
本期包含：趣事小語、資訊知事、思考＆教育、行銷推廣、專案管理、技術知事
</code></pre><h1 id="MurMur"><a href="#MurMur" class="headerlink" title="MurMur"></a>MurMur</h1><ul>
<li>「創新」是整個團隊的事情。</li>
<li>跟波國棒球打輸了，連帶連出刊總結這件事情都 Delay 了！</li>
</ul>
<h1 id="趣事小語"><a href="#趣事小語" class="headerlink" title="趣事小語"></a>趣事小語</h1><pre><code>相關小語來源是這段期間 Twitter 或訂閱的 feedly 上被分析出來的熱門文字。
</code></pre><ul>
<li><a href="http://flipermag.com/2014/08/06/lives-life-2/" target="_blank" rel="external">無中生有的設計咒語：「沒關係你先設計，資料我再補」</a><ul>
<li>「今天晚上要煮紅燒牛肉，啊！糟糕沒有牛肉了，好吧沒關係那你先煮，等牛肉買回來在丟下去就好……」 好個鬼啊！！最後補牛肉，那牛肉不就根本沒有入味嗎，那前面是在什麼？煮火大的嗎 !!<a id="more"></a></li>
</ul>
</li>
</ul>
<hr>
<h1 id="資訊知事"><a href="#資訊知事" class="headerlink" title="資訊知事"></a>資訊知事</h1><ul>
<li><p><a href="http://www.ithome.com.tw/news/99307" target="_blank" rel="external">【專家嚴選】8個DevOps好用工具大介紹</a></p>
<ul>
<li>【Docker】自動記錄環境參數加速部署效率</li>
<li>【Packer】通吃主流平臺映像檔的打包工具</li>
<li>【Vagrant】本機端模擬虛擬機器最佳選擇</li>
<li>【Datadog】方便使用者快速建立監控儀表板</li>
<li>【Sauce Labs】模擬多種前端的線上測試平臺</li>
<li>【Codeship】省去許多自行部署第三方套件的麻煩</li>
<li>【Twilio】設定觸發條件，透過API發送通知</li>
<li>【Runscope】檢視網站健康度，確保API運作順利</li>
</ul>
</li>
<li><p><a href="http://www.playpcesor.com/2015/10/question-list.html" target="_blank" rel="external">每個人都需要準備的一張問題清單：突破難關思考術</a> - from <a href="http://www.playpcesor.com/" title="電腦玩物" target="_blank" rel="external">電腦玩物</a></p>
<ul>
<li>站長自己的清單：<ol>
<li>為什麼想做這件事？</li>
<li>對我的人生意義是什麼？</li>
<li>目標對象是誰？</li>
<li>目標對象有什麼需求？</li>
<li>獨一無二的市場特色是什麼？</li>
<li>預計什麼時候完成？</li>
<li>我可以做的第一步是什麼？</li>
<li>我最大不足是什麼？</li>
<li>可以跟誰合作？</li>
<li>有哪些競爭或借鏡對手？</li>
</ol>
</li>
</ul>
</li>
<li><p><a href="http://www.playpcesor.com/2015/09/10.html" target="_blank" rel="external">看圖才能說故事！做簡報必備 10 個資訊圖表圖示資源</a></p>
<ol>
<li>畫出好看統計圖：ChartBlocks 線上製作統計圖表，讓圖表不再千篇一律</li>
<li>最簡單的資訊圖表工具：Easel.ly 讓任何人都能在簡報中用資訊圖表說故事</li>
<li>美麗的簡報封面：Canva 日常的設計家：簡報海報、資訊圖表免費製圖</li>
<li>套用職場必備圖表範本：creately 線上圖表軟體：免費套用數千資訊圖表範本</li>
<li>不可或缺高品質示意圖：十萬 icon 圖示免費下載，傳神的設計與簡報符號圖案</li>
<li>同樣不可或缺的好照片：就缺一張好照片？你會優先推薦的免費圖庫：Pixabay</li>
<li>值得參考的簡報靈感：2500+創意簡報設計範本免費下載！做出以圖服人 PPT</li>
<li>簡報型說明影片：Adobe Voice 說動 PPT 簡報，免費故事化創意簡報 App</li>
<li>簡報怎麼配色？到這裡找色彩設計靈感！12個設計師必備配色表網站</li>
<li>簡報的好字型：Adobe與Google合推全新中文免費字型思源黑體下載教學</li>
</ol>
</li>
<li><p><a href="http://www.playpcesor.com/2015/10/netspeak-google.html" target="_blank" rel="external">寫英文信最佳辭典： Netspeak 比 Google 翻譯好用</a></p>
<ul>
<li>「 Netspeak 」是一個免費的線上搜尋辭典，但他不是一般的翻譯辭典，而是可以「搜尋比較」各種英文詞彙、片語、語法在網路上出現過的使用方式，並且「統計」出這個用語的變化型態，還有「分析」他們分別被使用的頻率與情境。</li>
<li>網站網址：<a href="http://www.netspeak.org/" target="_blank" rel="external">http://www.netspeak.org/</a></li>
</ul>
</li>
<li><p><a href="http://www.playpcesor.com/2015/02/drawio.html" target="_blank" rel="external">Draw.io 中文線上製作流程圖首選！專業水準完全免費</a></p>
<ul>
<li><img src="SpofCem.png" alt=""></li>
<li>工具網址：<a href="https://www.draw.io/" target="_blank" rel="external">https://www.draw.io/</a></li>
<li>Chrome Plugin 網址： <a href="https://chrome.google.com/webstore/detail/drawio-diagrams/onlkggianjhjenigcpigpjehhpplldkc/related" target="_blank" rel="external">Draw.io Chrome Plugin</a></li>
</ul>
</li>
</ul>
<ul>
<li><p><a href="https://letsencrypt.org/" target="_blank" rel="external">Let’s Encrypt</a></p>
<ul>
<li>免費、自動化、開放原始碼的SSL認證授權產生</li>
<li>現行 SSL CA 認證常常淪為各家個第三方認證單位賺錢的工具，每年費用常常高達數百元美金，所以 Let’s Encrypt 這個組織開始做免費且可被信任的 SSL CA 認證授權。</li>
<li>對於需要常常建立不同網站、不同服務的公司，這個服務絕對需要關注。</li>
<li>可以思考，網站應用服務使用HTTPS通訊協定，將會是最基本的要求。</li>
</ul>
</li>
<li><p><a href="http://www.playpcesor.com/2015/10/office-office-chrome.html" target="_blank" rel="external">免費 Office ！就靠這款微軟 Office 最新 Chrome 套件</a></p>
<ul>
<li>微軟推出的 Google Chrome 外掛：「 Office Online Chrome 版」，不需要事先安裝 Office 軟體，就能讓你雲端工作時更快速新增 Office 各種文件、編輯已經存在的 Office 檔案</li>
<li><a href="https://chrome.google.com/webstore/detail/office-online/ndjpnladcallmjemlbaebfadecfhkepb" target="_blank" rel="external">Office Online Chrome 版</a></li>
</ul>
</li>
<li><p><a href="http://www.bearboss.com/?p=3688" target="_blank" rel="external">企劃與思考的邏輯與順序</a></p>
<ul>
<li>「目標」⇒「策略」⇒「方案/方法」⇒「執行步驟」⇒「評估」</li>
</ul>
</li>
<li><p><a href="http://www.aja-creative.com/zh_tw/" target="_blank" rel="external">AJA大予創意 UX與UI設計的專家</a></p>
<ul>
<li>這是一個公司網址，一個專案協助做使用者體驗、介面設計、使用者體驗測試、優化的公司</li>
</ul>
</li>
<li><p><a href="https://www.smartm.com.tw/article/31373038cea3" target="_blank" rel="external">行動商務時代，Google 研究員說 app 應該這樣做</a></p>
<ul>
<li>Stephen 將行動電子商務 app 的使用分為四個大階段：Adopt（採納）、Use（使用）、Transact（交易）、Return（本文指的是「再度光臨」），並且分別提出需要注意的設計原則。</li>
<li>幾乎整篇都是重點內容，有興趣就直接點進去看吧。</li>
</ul>
</li>
<li><p><a href="http://www.slideshare.net/max2105751/app-54198120" target="_blank" rel="external">App的智財權保護之道</a> from <a href="http://www.slideshare.net/max2105751" target="_blank" rel="external">Max Chang</a></p>
<ul>
<li>其中這張簡報說明了關於保護 APP 的三個角度，分別是透過商標、使用者介面專利、技術專利等</li>
<li><img src="6jlq1Dr.png" alt=""></li>
<li>延伸閱讀：<a href="http://www.proguidescreen.com/?p=4498" target="_blank" rel="external">從Call Saver與華碩的抄襲疑雲案，探討App的智慧財產權</a></li>
</ul>
</li>
<li><p><a href="http://www.saydigi.com/2015/10/gear-s2-hands-on.html" target="_blank" rel="external">圓形錶面 Samsung Gear S2 動手玩 配戴更舒適 操作更人性</a></p>
<ul>
<li>這隻 Android 智慧手錶平常的使用不仔細看會覺得它只是一般手錶</li>
<li>整體的設計除了智慧手錶該有的功能外，外表又不會讓人覺得突兀，該開始好好的思考，智慧手錶與系統之間可以怎麼合作了？！</li>
<li>Gear S2 售價 9,900元、Gear S2 Classic 售價 10,900元</li>
</ul>
</li>
<li><p><strong>老年化社會即將來臨，用一張圖來表示</strong></p>
<ul>
<li><img src="oiTEZ2O.gif" alt=""></li>
</ul>
</li>
</ul>
<ul>
<li><p><a href="https://share.inside.com.tw/posts/20542" target="_blank" rel="external">Slack CEO 告訴你，別低估「玩」的力量</a></p>
</li>
<li><p><a href="http://buzzorange.com/2015/04/07/teach-u-how-to-know-the-relationship-between-the-gods/" target="_blank" rel="external">老是搞不清各種神明的位階？這張企業組織圖讓你秒懂</a></p>
<ul>
<li><img src="7299063214269390060_o.jpg" alt=""></li>
</ul>
</li>
</ul>
<h1 id="思考＆教育"><a href="#思考＆教育" class="headerlink" title="思考＆教育"></a>思考＆教育</h1><ul>
<li><a href="http://flipedu.parenting.com.tw/blog-detail?id=2037" target="_blank" rel="external">葉丙成：人不卡，不成器</a><ul>
<li>職場上要判斷是不是人才，看的是能否解決難題。</li>
<li>難題之所以難，是因前人沒碰過，要靠破格的思考和不被失敗打垮的韌性來解決。</li>
<li>程式教育最重要的核心，是以程式為媒介，訓練孩子把腦海裡的想法實做出來，並訓練孩子找出所有錯誤點的韌性。</li>
</ul>
</li>
</ul>
<hr>
<h1 id="行銷推廣"><a href="#行銷推廣" class="headerlink" title="行銷推廣"></a>行銷推廣</h1><ul>
<li><p><a href="https://www.facebook.com/inboundjournals/photos/a.564421656907554.149292.547757665240620/701198266563225/?type=3" target="_blank" rel="external">不要一下子就講4，要講2＋2</a></p>
<ul>
<li><p>根據內容行銷公司LookBookHQ 的研究，可以總結出以下5點：</p>
<ol>
<li><p>用顯示的，不要用說的</p>
<blockquote>
<p>因為大多數的人都喜歡多媒體：<br> ＊包含多媒體的新聞稿獲得的回應比純文字的新聞稿高77%<br> ＊包含影片的部落格貼文被連結的機率比純文字的貼文高3倍</p>
</blockquote>
</li>
<li><p>製作容易消化的資訊</p>
<blockquote>
<p>因為沒有人有時間慢慢閱讀：<br> ＊79%的人用翻閱的方式而不是逐字閱讀的方式瀏覽網站<br> ＊美國人每天翻閱的數位化文字平均為100,500個</p>
</blockquote>
</li>
<li><p>編寫引人注意的標題，以吸引慣於翻閱內容的人的注意</p>
<blockquote>
<p>因為大家都很忙：<br> ＊專業人士花51%的時間管理資訊而不是按照資訊作出行動<br> ＊90 % 的受訪專業人士承認曾經在還沒有閱讀的情況下就把重要資訊扔掉</p>
</blockquote>
</li>
<li><p>說出個人化的故事比較容易讓訊息更突出</p>
<blockquote>
<p>因為行銷的世界很嘈雜：<br> ＊2012年在互聯網上發放的廣告5.3兆則<br> ＊估計人們每天看到其中的5,000則行銷訊息</p>
</blockquote>
</li>
<li><p>把不同型式、相關的內容作包裝組合，較容易被注意</p>
<blockquote>
<p>因為互聯網已經塞爆了：<br> ＊每60秒在Google上就發生70萬宗搜尋、60小時的YouTube影片被上載、1.68億封電郵被送出</p>
</blockquote>
</li>
</ol>
</li>
</ul>
</li>
<li><p><a href="http://dcplus.com.tw/market/post-planner" target="_blank" rel="external">Post Planner – 臉書粉絲團內容製造機</a></p>
<ul>
<li>主動篩選內容，讓Faccebook頁面符合你的需求</li>
<li>人性化分日期、時間篩選文章、圖片、外部連結</li>
<li>提供時下受歡迎的照片、外部連結豐富你的FB</li>
<li>透過設定連結增進粉絲團、推特的人氣</li>
</ul>
</li>
<li><p><a href="http://dcplus.com.tw/marketing-knowledge/starter/40331" target="_blank" rel="external">從「包小姐」開始學習程序化廣告購買</a></p>
<ul>
<li>程序化廣告就是自動化智慧化的廣告，在合適的時間，用合適的方式，推送給合適的人</li>
<li>要實現程序化的神奇魔法，需要起碼解決三方面問題:<ul>
<li>要對來到頁面的人有充分的瞭解和判斷</li>
<li>要有一套規則決定到底呈現哪個廣告</li>
<li>需要有個巨大的交易場所，供給買賣雙方石頭剪刀布</li>
</ul>
</li>
<li><img src="hQq8V7g.jpg" alt=""></li>
<li>Ad Exchange(簡稱Adx)，是個巨大的競價交易市場，這其中聚集了巨量的廣告主需求及媒體廣告位資源，通過RTB（Real time bidding）即時競價購買的技術實現方式，在100毫秒內完成廣告資源的競價購買，並進行最終展現。</li>
<li>DSP(Demand side platform)需求方平台：主要的作用就是對接起廣告主的需求，幫助廣告主競價</li>
<li>SSP(Supply side platform)供給方平台：幫助媒體進行廣告位和相應的流量託管，對接起Adx完成交易</li>
</ul>
</li>
<li><p><a href="http://www.managertoday.com.tw/articles/view/51362" target="_blank" rel="external">C/P值超高的產品，為什麼客戶會不想買？這3個原因，讓他掏不出錢來！</a></p>
<ul>
<li>C1.外顯單位效益成本：產品和服務夠划算嗎？</li>
<li>C2.資訊搜尋成本：客戶要花多少力氣了解你的好？</li>
<li>C3.道德危機成本：客戶和你買東西的風險高嗎？</li>
<li>C4.專屬陷入成本：客戶過去的努力和投入會報廢嗎？</li>
</ul>
</li>
<li><p><a href="http://vide.tw/2353" target="_blank" rel="external">電商網站如何設計高轉換率的購物車頁面</a></p>
<ul>
<li>一、善用「加入購物車」按鍵附近的設計，提高將商品加入購物車的意願</li>
<li>二、購物車頁面盡量減少使用者產生「下次再買吧」的想法，加速決策過程<ol>
<li>想仔細考慮時卻無法在購物車中看到商品的細節，要在商品頁間切換很麻煩</li>
<li>湊不到免運費門檻</li>
<li>無法感受到購買商品的折扣優惠</li>
<li>無法感受到購買的時間壓力</li>
</ol>
</li>
</ul>
</li>
<li><p><a href="http://www.managertoday.com.tw/articles/view/51410" target="_blank" rel="external">優秀的提案只需要一頁A4！好讀又好懂，老闆才會聽你的</a></p>
<ul>
<li>1 Message：一句話說明你的提案目的<blockquote>
<p>人資的提案目的是，要利用「小事便箋」與「已辦清單」，讓聽命行事的員工變成自律型人才。</p>
</blockquote>
</li>
<li>1 Action：明確指出第一步「希望對方做的事情」<blockquote>
<p>建議的行動是，要求員工隨身攜帶「小事便箋」，讓「一有想法立刻記下」變成習慣。</p>
</blockquote>
</li>
<li>2W1H：說明提案內容（What）、提案理由（Why）、執行方式（How），分別以3點陳述。</li>
<li><img src="356XOpm.jpg" alt=""></li>
</ul>
</li>
<li><p><a href="http://lpcomment.com/2015/10/26/good-press-conference-1/" target="_blank" rel="external">觀點／從記者的角度，談「何謂優質的產品發表會？」</a></p>
<ul>
<li>對記者來說，「效率」就是一切</li>
<li>提高「效率」，從邀請函與 follow call 開始，邀請函內重要的基本資訊必須清楚，像是：<ul>
<li>活動主旨是什麼？</li>
<li>時間 / 地點為何？</li>
<li>有誰會出席？</li>
</ul>
</li>
<li>產品發表會中，記者的需求為何？通常在產品發表會中，最在乎 3 個要件：<ul>
<li>準時</li>
<li>訊息</li>
<li>畫面</li>
</ul>
</li>
<li>取得「訊息」的第一步：新聞稿，其內容包括：<ul>
<li>產品的特色整理</li>
<li>規格 / 數據</li>
<li>販售資訊</li>
<li>長官引言</li>
<li>表格</li>
</ul>
</li>
<li>聯訪：爆點「訊息」的來源，關於聯訪的安排，以下 2 點建議：<ul>
<li>電視聯訪：舞台活動後立刻在主舞台上進行為佳</li>
<li>平面聯訪：有小房間開小房間，沒小房間拿麥克風</li>
</ul>
</li>
<li>舞台表演的「畫面」安排，關於舞台活動，有 3 點建議：<ul>
<li>舞台表演適度就好，記者只會用最精采的那幾秒鐘</li>
<li>名人分享適量就好，記者只會用最有名的那一兩位</li>
<li>活動貴在精、不在長，把時間留給體驗和聯訪</li>
</ul>
</li>
<li>產品發表會的舞台可避免以下 3 樣東西：<ul>
<li>噴乾冰</li>
<li>噴彩帶</li>
<li>LED 螢幕</li>
</ul>
</li>
<li>產品體驗區的「畫面」安排，確保記者工作的基本效率與流暢：<ul>
<li>確認產品的狀態，並提供足夠的實機</li>
<li>注意區域動線規劃，避免讓所有人擠在一起</li>
<li>體驗區產品擺放可視情況適度分散</li>
<li>體驗區應避免雜亂的燈色</li>
<li>留意體驗區的燈光位置與方向</li>
</ul>
</li>
</ul>
</li>
<li><p><a href="http://www.inside.com.tw/2015/11/02/big-data-marketing-migo" target="_blank" rel="external">【大數據玩行銷】看 MIGO 執行長陳傑豪，如何把大數據變營業額！</a></p>
</li>
<li><p><a href="http://www.slideshare.net/vista/ss-54975828" target="_blank" rel="external">社群大數據2015年度爆紅排行榜</a></p>
<ul>
<li>記載2015年在社群上爆紅的相關事件及事件爆紅成因分析。</li>
</ul>
</li>
</ul>
<hr>
<h1 id="專案管理"><a href="#專案管理" class="headerlink" title="專案管理"></a>專案管理</h1><ul>
<li><a href="http://www.app01.com.tw/paper/81f724e5-7f8c-4a8a-99f8-fe066398e17f" target="_blank" rel="external">從產品經理的角度算一算：做一個App需要多少錢？</a><ul>
<li>作為互聯網從業者，被外行的朋友們問及最多的問題是“做一個網站需要多少錢？”或者“做一個App需要多少錢？”。作為做過完整網站項目和APP的人，今天從產品經理的角度，一起來算一下中小型App從無到有需要做哪些工作，以及為達成使命，需要付出多少金錢代價。</li>
</ul>
</li>
</ul>
<hr>
<h1 id="技術知事"><a href="#技術知事" class="headerlink" title="技術知事"></a>技術知事</h1><h2 id="開發心法"><a href="#開發心法" class="headerlink" title="開發心法"></a>開發心法</h2><ul>
<li><p><a href="https://secure.phabricator.com/book/phabflavor/article/writing_reviewable_code/" title="Writing Reviewable Code" target="_blank" rel="external">Writing Reviewable Code</a> - 寫一個可以被檢視審視的程式碼</p>
<ul>
<li>Each commit should be as small as possible, but no smaller.<ul>
<li>盡可能的讓每個的 commit 小一點</li>
</ul>
</li>
<li>The smallest a commit can be is a single cohesive idea: don’t make commits so small that they are meaningless on their own.<ul>
<li>每個 commit 盡可能的只做一件事情，且與 commit 的訊息相同的事情。</li>
</ul>
</li>
<li>There should be a one-to-one mapping between ideas and commits: each commit should build one idea, and each idea should be implemented by one commit.<ul>
<li>想做的一件事情需要可以與 commit 間有所對應，且要是一對一的直接對應。</li>
</ul>
</li>
<li>Turn large commits into small commits by dividing large problems into smaller problems and solving the small problems one at a time.<ul>
<li>把很大的 commit 切割成小的 commit，把大問題切割成小問題，每次都解決小問題。</li>
</ul>
</li>
<li>Write sensible commit messages.<ul>
<li>撰寫真的讀的懂得 commit 訊息。</li>
</ul>
</li>
</ul>
</li>
<li><p><a href="http://blog.psjay.com/posts/code-review-guide/" target="_blank" rel="external">Code Review 指南</a></p>
<ul>
<li>Code Review 的好處<ul>
<li>發現錯誤：一個人的思考總是會不可避免地出現一些紕漏，而這些紕漏在另一個人眼中也許顯而易見。</li>
<li>保持代碼風格統一：對於整個團隊來說，代碼風格的統一顯得至關重要。風格一致的代碼能提供更好的可讀性，也能避免犯一些「低級錯誤」。</li>
<li>保證設計的合理性：代碼直接反映出你的系統設計，在寫一個新的系統時，確保你的設計不會出現大問題。</li>
<li>保證提交的變更符合團隊的其他要求：例如對測試用例的要求和對文檔的要求；</li>
<li>互相學習：Code Review 的過程也是思想交流的過程，可以取人之長，補己之短。</li>
</ul>
</li>
</ul>
</li>
<li><p><a href="http://www.slideshare.net/rickwu12/ss-54297655" target="_blank" rel="external">高效能執行緒</a></p>
<ul>
<li>關於執行緒Thread的介紹，內容包含：Thread、Handler、HandlerThread、Memory leaks、ThreadPool、Asynctask、Service、IntentService、Binder、AIDL、Messenger</li>
<li>這份簡報真的講的超好的，把關於 Thread 需要注意的各種事情都講到了，根本就是作業系統講多工的重點精華整理了。</li>
</ul>
</li>
<li><p><a href="http://www.infoq.com/cn/articles/how-to-understand-microservice-architecture" target="_blank" rel="external">先把平台做紮實，再來微服務吧</a></p>
<ul>
<li>我的點評：現階段有非常多的整體系統的規劃開發模式，把整體的服務切割成一個一個的小服務然後把他們串起來，似乎是一種顯學，所以漸漸的 Docker 的管理、Vagrent 之類的操作越來越多人在討論，但是不是需要真的所有的系統規劃一開始就從微服務開始設計起，就是一個值得討論的學問了。這篇文章講了幾個是不是要作為服務的思考方向值得一看。</li>
</ul>
</li>
<li><p><a href="http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api" target="_blank" rel="external">Best Practices for Designing a Pragmatic RESTful API</a></p>
<ul>
<li>相較於幾年前設計網站 API 會使用 SOAP 來設計，現今大多會考慮 RESTful API ，RESTful 會以物件的概念去思考整個結構，例如以 User 開頭底下的操作，就都是關於 User 的，以 Book 為開頭，就會是關於 Book 的操作，相對於 SOAP 會更容易讓人了解。</li>
<li>這篇文章的內容，就是在講在設計 RESTful 的 API 應該要考慮些什麼事情，怎麼設計比較好。</li>
</ul>
</li>
<li><p><a href="http://blog.longwin.com.tw/2015/11/php-rawurlencode-urlencode-diff-2015/" target="_blank" rel="external">PHP rawurlencode 與 urlencode 的差異</a></p>
</li>
<li><p><a href="http://bl.ocks.org/abernier/3070589" target="_blank" rel="external">網址各個結構的專有名詞</a></p>
<ul>
<li><img src="sozOKO7.png" alt=""></li>
</ul>
</li>
</ul>
<h2 id="DevOps-工具"><a href="#DevOps-工具" class="headerlink" title="DevOps 工具"></a>DevOps 工具</h2><ul>
<li><p><a href="http://dustinrcollins.com/devops-on-osx" target="_blank" rel="external">DevOps on OSX</a></p>
<ul>
<li>網站維運開發 DevOps 在 MAC OSX 上面可以用的開發工具列表。</li>
</ul>
</li>
<li><p><a href="http://smalltowntechblog.com/2015/11/01/chef-x-docker-x-packer-give-me-golden-image/" target="_blank" rel="external">Chef X Docker X Packer – Give Me Golden Image</a></p>
<ul>
<li>這是一篇筆記，記錄關於如何使用劇本 Script，如何很快的建置出產品可以發佈的影像檔，進而快速測試，及早發現問題，增加產品的品質。</li>
</ul>
</li>
<li><p><a href="http://blogger.gtwang.org/2015/01/ubuntu-linux-install-influxdb.html" target="_blank" rel="external">在 Ubuntu Linux 中安裝 InfluxDB 時間序列用的資料庫</a></p>
<ul>
<li>InfluxDB 是一個專門適用於時間序列用的資料庫，適合用來儲存大量連續行的觀測資料，例如系統的 CPU 與記憶體使用狀態監測，或是一些感測器（sensors）的連續監測資料。</li>
<li>這篇文章主要在記錄，如何在 Ubuntu 上安裝。</li>
</ul>
</li>
<li><p><a href="http://rancher.com/" target="_blank" rel="external">Rancher - Private Container Service</a></p>
</li>
<li><p><a href="http://www.nowcoder.com/courses/2" target="_blank" rel="external">GitHub&amp;Git入门基础(簡體中文)</a></p>
<ul>
<li>大陸的線上課程網站，這門課是介紹 GIT 及 GitHub 的基礎使用課程。</li>
</ul>
</li>
<li><p><a href="https://imququ.com/post/header-compression-in-http2.html" target="_blank" rel="external">HTTP/2 头部压缩技术介绍</a></p>
<ul>
<li>關於 HTTP2 的規範正式出爐，幾個知名的 HTTP Server 也開始正式支援，我想，接下來 WebServer 有沒有支援 HTTP2 來提升網路傳輸速率會是基本要求，這篇文章介紹 HTTP2 的基本原理及技術。</li>
</ul>
</li>
</ul>
<h2 id="Library-or-工具"><a href="#Library-or-工具" class="headerlink" title="Library or 工具"></a>Library or 工具</h2><ul>
<li><p><a href="https://www.gitbook.com/book/zonble/kkbox-ios-dev/details" target="_blank" rel="external">KKBOX iOS/Mac OS X 基本開發教材</a></p>
<ul>
<li>這份教材是為了 KKBOX iOS/Mac OS X 開發部門的新人訓練所設計，目的是培養 出可以開發、維護 KKBOX 的 iOS 與 Mac OS X 版本，以及我們其他軟體產品的 工程師。</li>
</ul>
</li>
<li><p><a href="https://github.com/dbcli/mycli" target="_blank" rel="external">mycli</a></p>
<ul>
<li>A Terminal Client for MySQL with AutoCompletion and Syntax Highlighting.</li>
<li><img src="main.gif" alt=""></li>
</ul>
</li>
<li><p><a href="http://gearman.org/" target="_blank" rel="external">http://gearman.org/</a></p>
<ul>
<li>Gearman provides a generic application framework to farm out work to other machines or processes that are better suited to do the work.</li>
</ul>
</li>
<li><p><a href="http://laraveldaily.com/10-less-known-but-awesome-laravel-collections-methods/" target="_blank" rel="external">Laravel 提供的 collections 方法</a></p>
</li>
<li><p><a href="http://www.ptengine.com/" target="_blank" rel="external">ptengine</a></p>
<ul>
<li>使用者研究調查工具</li>
</ul>
</li>
</ul>
<h2 id="資料庫操作"><a href="#資料庫操作" class="headerlink" title="資料庫操作"></a>資料庫操作</h2><ul>
<li><a href="http://wiki.planetoid.info/index.php/Visual_explanation_of_MySQL_joins" target="_blank" rel="external">圖解資料庫的 Joins (RIGHT Join、LEFT Join、INNER Join、OUTER Join) 的差異</a></li>
</ul>
<h2 id="前端網頁開發工具"><a href="#前端網頁開發工具" class="headerlink" title="前端網頁開發工具"></a>前端網頁開發工具</h2><ul>
<li><p><a href="http://javier.xyz/img2css/" target="_blank" rel="external">Img2CSS</a></p>
<ul>
<li>協助將圖片直接轉換成CSS，並且直接顯示在頁面上。</li>
</ul>
</li>
<li><p><a href="http://iconion.com/" target="_blank" rel="external">Iconion: Free Icon Maker</a></p>
<ul>
<li>提供免費的且可以自行設置的 Icon 產生器。</li>
<li><img src="top-screen.jpg" alt="Iconion"></li>
</ul>
</li>
</ul>
<h2 id="規劃設計工具"><a href="#規劃設計工具" class="headerlink" title="規劃設計工具"></a>規劃設計工具</h2><ul>
<li><p><a href="http://www.cooper.com/prototyping-tools" target="_blank" rel="external">Prototyping Tools</a></p>
<ul>
<li>這是一篇比較文章，比較了像是 AxureRP、Briefs、Form等知名的 Prototyping 工具，還有一些像是製作一個特定的網頁需要多少時間的時間比較表。</li>
<li><img src="tfH3kmW.png" alt=""></li>
</ul>
</li>
<li><p><a href="https://proto.io/" target="_blank" rel="external">Proto.io</a></p>
<ul>
<li>設計師朋友推薦製作 Prototype 的工具。<ul>
<li><a href="https://proto.io/en/demos/" target="_blank" rel="external">Prototype Demos - proto.io</a></li>
</ul>
</li>
<li><img src="2VRr5pY.png" alt=""></li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MoIssue #1 創始號：總要開始，才能完成]]></title>
      <url>http://usedfire.net/2015/10/31/MoIssue-1/</url>
      <content type="html"><![CDATA[<pre><code>發刊日 : 2015/10/20 - 2015/10/31
本期包含趣味小語、資訊知事、行銷推廣、專案管理以及技術知事
</code></pre><h1 id="發刊語-murmur"><a href="#發刊語-murmur" class="headerlink" title="發刊語 - murmur"></a>發刊語 - murmur</h1><ul>
<li><p>會開始整理這份自己的Issue News 是突然發現，常常看到一些寫的很不錯的文章，而總覺得這些需要有一個地方把這些好文章總結記錄下來，一是如此在需要的時候才能順利的找到。有整理過的資訊，才能成為知識。所以開始試著整理這份文件，當累積一定的長度，就發刊。</p>
</li>
<li><p><strong>想的到才看的到</strong>，團隊的集體創意需要不斷的累積背景知識，才能夠想，也才能一起看到。</p>
</li>
<li><p>看過的只是資訊、整理起來讓自己找的到，知道可以用，這才是知識。<a id="more"></a></p>
</li>
</ul>
<h1 id="趣味小語"><a href="#趣味小語" class="headerlink" title="趣味小語"></a>趣味小語</h1><pre><code>相關小語來源是這段期間Twitter或訂閱的feedly上被分析出來的熱門文字。
</code></pre><ul>
<li><p>越大的公司留下來的是會做人的人，並非會做事的人 - Juppet(@juppet) - <a href="https://twitter.com/juppet/status/657484034004533248" target="_blank" rel="external">October 23, 2015</a></p>
</li>
<li><p>使用者要的不是功能 - 他們只想解決問題，讓自己過的爽一點而已。 - <a href="https://www.facebook.com/photo.php?fbid=898970866819364&amp;set=a.331194663596990.69561.100001193773658&amp;type=3&amp;permPage=1" target="_blank" rel="external">October 31, 2015</a></p>
<ul>
<li><img src="3McXAUm.jpg" alt=""></li>
<li>所以，為什麼先有功能，再來嫌使用者不會用？</li>
<li>功能只是解決問題的方法之一。</li>
</ul>
</li>
<li><p>如果像這樣，我們稱這是「產品的死亡循環」：1. 沒人用產品 → 2.問使用者我們缺少了什麼功能 → 3.補足缺少的功能 → 4.回到第一點。原文：「”This is what I’m calling the product deathcycle.”」- <a href="https://twitter.com/RichRogersHDS/status/657723527542538240?s=04" target="_blank" rel="external">9:01 AM - 24 Oct 2015</a></p>
<ul>
<li><img src="CSC0EDXWwAAPrsr.png" alt=""></li>
</ul>
</li>
</ul>
<hr>
<h1 id="資訊知事"><a href="#資訊知事" class="headerlink" title="資訊知事"></a>資訊知事</h1><ul>
<li><a href="http://www.playpcesor.com/2015/10/file-name-tips.html" target="_blank" rel="external">電腦玩物 - 一看就能採取行動的檔案命名技巧：我的兩大檔名規則</a><ul>
<li>檔名規則一：數字與符號，排序重要、待辦、計劃、備查檔案<ul>
<li>透過數字可以有效率的讓檔案依照我的檔名去排列，於是我就能用數字來達到兩個目的：<ol>
<li>排序檔案或資料夾的重要性（愈重要的排在愈前面）。</li>
<li>把相關檔案放在一起（讓同一類檔案或資料夾排序在一起）。</li>
</ol>
</li>
</ul>
</li>
<li>檔名規則二：關鍵字，說明行動-主題-關鍵內容<ul>
<li>行動：這個檔案目前需要採取什麼行動？如果沒有，可以不寫。</li>
<li>主題：這是什麼類型、屬性、需求、專案的檔案。</li>
<li>關鍵內容：這個檔案裡面有什麼獨特內容，可以從人事時地物的角度去想。</li>
</ul>
</li>
</ul>
</li>
<li><p><a href="http://www.slideshare.net/warfan/devops-53161280" target="_blank" rel="external">DevOps：建造開發維運的跨界之橋</a></p>
<ul>
<li>這份簡報在介紹整體 DevOps 到底在做些什麼事情，還蠻值得一看的。</li>
<li>DevOps 這詞指的是開發(Development)與維運(Operation)的結合，根據 Wiki 上面的解釋：<blockquote>
<p>是過程、方法與系統的統稱，用於促進開發（應用程式/軟體工程）、技術運營和質量保障（QA）部門之間的溝通、協作與整合。它的出現是由於軟體行業日益清晰地認識到：為了按時交付軟體產品和服務，開發和運營工作必須緊密合作。</p>
</blockquote>
</li>
</ul>
</li>
<li><p><a href="http://blog-tw.oursky.com/post/132010574375/offline-first-say-goodbye-to-network-connection-error" target="_blank" rel="external">逆流而上的 Offline-First 概念：跟 Network Connection Error 說拜拜</a></p>
<ul>
<li>既然一個 App 要以網絡服務為賣點，其實就更應在早期建構時考慮到網絡不穩的問題，所以就出現了所謂 Offline-First 的概念。 <strong>Offline 不是一個 Bug，也不是一個Feature。</strong> 而是每一個手機應用程式都應該具有的基本 Support。</li>
<li>實際使用過 Offline-First 的設計後，你甚至會發現你的 App 和以往有一些明顯的差別：<ul>
<li>不再出現莫名其妙的 Data Loss</li>
<li>任何時候都能運作正常</li>
<li>整個 App 用起來感覺更順暢更快速</li>
</ul>
</li>
<li>三種處理情境：<ul>
<li>顯示離線狀態（Offline State UI）</li>
<li>使用靜態資訊如常運作（Static Cache）</li>
<li>使用動態資訊進行暫時性作業（Dynamic Cache）</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h1 id="行銷推廣"><a href="#行銷推廣" class="headerlink" title="行銷推廣"></a>行銷推廣</h1><ul>
<li><a href="http://www.slideshare.net/backtrue/google-analytics-13875934" target="_blank" rel="external">Google analytics教學手冊</a> - by <a href="http://www.slideshare.net/backtrue" target="_blank" rel="external">Brian Chiu</a><ul>
<li>作者小黑在業界關於SEO、行銷領域還蠻知名的，是之前電商ASAP的行銷總監。</li>
</ul>
</li>
<li><p><strong><a href="https://www.udemy.com/internetrule/?dtcode=2Lz1ARN3SAdB" target="_blank" rel="external">網站經營的法則 - 掌握流量建立屬於你的經營模式（繁體中文）</a></strong></p>
<ul>
<li>這是一個 Udemy 的課程，這門課程的講師是知名科技網站癮科技的站長-吳顯二所開立。</li>
<li>這是一門關於網際網路經營法則的課程，裡面內含他加入這個產業十年的心得，也是關於「線上教學」的下一個實驗。</li>
<li>這門課呈現在只要1元美金，之後每更新一次課程內容，會加10元，絕對值得花時間去聽。</li>
<li>我買了</li>
</ul>
</li>
<li><p><a href="http://blog.newsleopard.com/2015/10/22/4%E5%80%8Bcall-to-action%E6%B8%AC%E8%A9%A6%EF%BC%8C%E5%8D%94%E5%8A%A9%E4%BD%A0%E6%8F%90%E5%8D%87%E9%9B%BB%E5%AD%90%E5%A0%B1%E9%BB%9E%E6%93%8A%E7%8E%87/" target="_blank" rel="external">4個call to action測試，協助你提升電子報點擊率</a></p>
<ul>
<li>顏色<ul>
<li>挑選正確的顏色更能讓你的 call to action 更容易被注意到</li>
</ul>
</li>
<li>大小、形狀<ul>
<li>call to action 的外觀是影響點擊率的因素之一。大小的設定沒有一定的標準答案，可以在電子報中嘗試調整大小所帶來的影響。然而，這裡建議至少是88 <em> 88 pixels (為了好記，或是 100 </em> 100 pixels)，才能方便<a href="http://blog.newsleopard.com/2015/05/21/%e5%88%a5%e5%86%8d%e6%80%aa%e9%96%8b%e4%bf%a1%e7%8e%87%e4%bd%8e%e4%ba%86%ef%bc%8c%e4%bd%a0%e7%9a%84%e9%9b%bb%e5%ad%90%e5%a0%b1mobile-first%e4%ba%86%e5%97%8e%ef%bc%9f/" target="_blank" rel="external">手機使用者</a>點擊。</li>
</ul>
</li>
<li>合理的文字<ul>
<li>哪種寫法才是正確的？我想答案是：符合當下情境，並能融入訂閱者的寫法。</li>
</ul>
</li>
<li>位置<ul>
<li>根據 <a href="http://www.slideshare.net/DistilledSEO/peep-lajasearchlove-london-2013?from_search=3" target="_blank" rel="external">ConversionXL 的研究</a>，使用者花 80% 的時間會停在 above the fold上。試著調整 call to action 放在 above the fold 還是 below the fold，或許不同的點擊結果能讓你更了解自己的電子報。</li>
</ul>
</li>
<li>持續測試<ul>
<li>研究顯示，A/B 測試可以提升 49% 的轉換率，因此沒有必要害怕失敗</li>
<li>哪一種 call to action 才能真正符合訂閱者當下的情境，進而觸發點擊？或許你應該透過 A/B 測試問問他們。</li>
</ul>
</li>
<li>參考案例<ul>
<li>stacksocial 的促銷電子報</li>
<li>techbargains 的促銷電子報</li>
<li>TigerDirect 的促銷電子報</li>
<li>Zuzily 的促銷電子報</li>
<li>fromyouflowers 的促銷電子報</li>
<li>Groupon 的促銷電子報</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><a href="http://www.slideshare.net/seanellis/agile-marketing-meetup-slideshare-52690997" target="_blank" rel="external">Agile Marketing Meetup: Moving Beyond the Marketing Plan So You Remain Relevant</a><ul>
<li>這個投影片談到 <a href="http://growthhacker.com/" target="_blank" rel="external">growthhacker.com</a> 是使用怎樣的流程做自己的 growth，很多細節如怎麼產生 ideas，怎麼為 task 評分，怎麼學習測試結果等，都值得參考。</li>
</ul>
</li>
</ul>
<hr>
<h1 id="專案管理"><a href="#專案管理" class="headerlink" title="專案管理"></a>專案管理</h1><ul>
<li><p>文章：<a href="http://www.infoq.com/cn/news/2015/10/Bryanedds-Medium" target="_blank" rel="external">你是否也處在這樣的反模式中</a></p>
<ul>
<li>所謂的反模式指的是讓整個團隊、專案往反方向前進</li>
<li>書摘：<ol>
<li>業務思維偏愛短期利益</li>
<li>不合群就會被釘上十字架</li>
<li>軟件架構師成為政客</li>
<li>忍受痛苦是你提供的商品</li>
<li>周圍的同事不支持變革</li>
<li>總是有人伺機“削（Undercut）”你</li>
<li>責任心被剝奪</li>
<li>方法論成為管理工具</li>
</ol>
</li>
</ul>
</li>
<li><p>文章：<a href="http://www.infoq.com/cn/articles/pragmatic-technical-debt" target="_blank" rel="external">實務技術債務管理</a></p>
<ul>
<li>技術債發生的原因：<ul>
<li>產生債務：例如-代碼重複、違反靜態工具規則和代碼異味。</li>
<li>設計和架構債務：例如-設計異味、違反設計規則和違反架構規則。</li>
<li>測試債務：例如-缺乏測試、測試覆蓋面不足和不正確的測試設計。</li>
<li>文檔債務：例如-沒有重大問題的文檔、缺乏文檔和文檔過期。</li>
<li>戰略債務：-這種類型的債務是在知情的狀況下為了戰略利益（例如首次市場發行）而產生，並長期存在。</li>
<li>戰術債務：-這種類型的債務是在知情的情況下為了快速收益而產生，通常適用於短期。</li>
<li>疏忽債務：-不慎產生的債務通常是在不知情的情況由於缺乏知識和意識而產生。</li>
<li>增量債務：-定期不慎產生的債務導致增量債務。</li>
</ul>
</li>
<li>償還技術債<ol>
<li>識別、記錄和追踪債務</li>
<li>優先處理異味</li>
<li>在每個迭代中分期償還債務</li>
<li>激勵和獎勵員工保持品質</li>
<li>遵循“男孩的童子軍規則”</li>
<li>留意可能出現的大規模的債務償還</li>
<li>平地償還債務而不是垂直地</li>
<li>在某些情況下不償還債務</li>
</ol>
</li>
<li>書籍：<a href="http://www.books.com.tw/products/CN11124627" target="_blank" rel="external">Scrum 技術精髓</a><ul>
<li><img src="Lt0E0gB.jpg" alt=""></li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><p><a href="http://www.infoq.com/cn/news/2015/10/Technology-Leader" target="_blank" rel="external">如何才能成为一个好的技术领导者？</a></p>
<ul>
<li>如果不能从帮助团队获得满足感，那么就不要成为一名领导者</li>
<li>将自己视为其他开发人员的导师</li>
<li>随时准备好回答团队成员的问题</li>
<li>减少具体的编码工作，但仍然要编码</li>
<li>要谦逊</li>
<li>要诚实</li>
</ul>
</li>
<li><p><a href="https://sprint.ly/blog/your-developers-arent-slow/" target="_blank" rel="external">Your developers aren’t slow</a> - 有時候進度緩慢，不見得是開發者的問題 from <a href="https://www.facebook.com/yftzeng.tw" target="_blank" rel="external">ant</a></p>
<ul>
<li><a href="http://www.inside.com.tw/2015/10/27/your-developers-arent-slow" title="進度落後不是開發者的錯，工作流程可能才是兇手！" target="_blank" rel="external">進度落後不是開發者的錯，工作流程可能才是兇手！</a> - inside 翻譯的中文版文章</li>
<li>Unclear requirements - 不明確的需求</li>
<li>Changing requirements - 需求一直變更</li>
<li>Context switching - 太常打擾工程師，破壞了他們高速開發所需的專注力</li>
<li>Take responsibility - 給管理者的<ul>
<li>Help your team understand the vision - 讓整個團對瞭解未來的目標及願景。</li>
<li>Write well-defined user stories - 定義及撰寫好的規格及使用者故事。</li>
<li>Reduce context switching costs - 降低工作人員進行資訊交換的成本。</li>
</ul>
</li>
<li>這篇的來源作者是一個線上音樂網站的首席架構師，在他的<a href="https://www.facebook.com/yftzeng.tw/posts/10203624817380411" target="_blank" rel="external">討論串</a>中他也提到了他們公司怎麼做：</li>
</ul>
</li>
</ul>
<figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">我們工程師不常開會但很常溝通。開會通常有四種原因</span><br><span class="line"></span><br><span class="line">一、例行產品會議:</span><br><span class="line"></span><br><span class="line">只強迫負責產品的工程師參加，不過歡迎有興趣的工程師在旁聆聽。</span><br><span class="line">主要是公司政策都是開放的，原則上不強迫參與</span><br><span class="line">(除非你本來就負責產品)，但要聽也歡迎。</span><br><span class="line"></span><br><span class="line">二、技術分享會議。</span><br><span class="line"></span><br><span class="line">公司偶爾會分享技術，自由參與不強迫。</span><br><span class="line"></span><br><span class="line">三、緊急會議。</span><br><span class="line"></span><br><span class="line">緊急且重大的事，但只會找相關工程師招開臨時會。</span><br><span class="line"></span><br><span class="line">四、一般會議。</span><br><span class="line"></span><br><span class="line">平常工程師會在 channel 溝通，</span><br><span class="line">channel 溝通的好處是不會打斷工程師專心工作，</span><br><span class="line">他們有空閒才會看到 channel 訊息，再來處理即可，</span><br><span class="line">但有時文字溝通的效率不如當面口述加上畫白板，</span><br><span class="line">所以討論若無法聚焦時就會在 channel 約時間，</span><br><span class="line">相關工程師同意後就會自行進會議室開會。</span><br><span class="line"></span><br><span class="line"><span class="built_in">RD</span> 間的默契大概類似如此。</span><br><span class="line">我覺得這跟架構一樣沒有好與不好，</span><br><span class="line">只要適用團隊的文化即可。</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="技術知事"><a href="#技術知事" class="headerlink" title="技術知事"></a>技術知事</h1><h2 id="開發心法"><a href="#開發心法" class="headerlink" title="開發心法"></a>開發心法</h2><ul>
<li><p><a href="http://www.phpied.com/how-to-write-unmaintainable-php-code-2009/" target="_blank" rel="external">How to write unmaintainable PHP code - 如何寫出無法維護的 PHP 程式碼</a></p>
<ul>
<li>Ban coding conventions.</li>
<li>No comments.</li>
<li>Standardize on Notepad.</li>
<li>No unit testing.</li>
<li>No templating engine.</li>
<li>Version control.</li>
<li>Build a framework.</li>
</ul>
</li>
<li><p><a href="http://news.oneapm.com/shenjian-oneapm-course/" target="_blank" rel="external">58同城沈劍：好的架構是進化來的，不是設計來的</a></p>
<ul>
<li><strong>好的架構不是設計出來的而是演進出來的</strong></li>
<li>中等規模：流量跨過十萬的階段，數據庫成為瓶頸</li>
<li>大流量：將整個Windows 技術體系轉向了Java 體系</li>
<li>當架構變成「蜘蛛網」，人肉已很難搞定！</li>
</ul>
</li>
<li><p><a href="http://www.php-fig.org/" target="_blank" rel="external">PHP FIG 組織</a></p>
<ul>
<li><a href="http://www.php-fig.org/psr/psr-1/" target="_blank" rel="external">PSR-1: Basic Coding Standard</a> - 基本的PHP程式碼撰寫標準規範</li>
<li><a href="http://www.php-fig.org/psr/psr-2/" target="_blank" rel="external">PSR-2: Coding Style Guide</a> - PHP程式碼撰寫標準規範</li>
<li><a href="http://www.php-fig.org/psr/psr-3/" target="_blank" rel="external">PSR-3: Logger Interface</a> - PHP 在實作 Log 的介面規範</li>
<li><a href="http://www.php-fig.org/psr/psr-4/" target="_blank" rel="external">PSR-4: Improved Autoloading</a><ul>
<li>PHP 在 5.3版之後，實作了 Autoloading ，讓PHP程式透過一定結構可以自動載入，不用到處 include ，但由於明確定義規則，因此坊間 Library 有點亂，因此 FIG 定義了這部分的規範。</li>
</ul>
</li>
<li><a href="http://www.php-fig.org/psr/psr-7/" target="_blank" rel="external">PSR-7: HTTP Message Interfaces</a><ul>
<li>PHP 程式可以自行定義 Web 頁面間 Server - Client 的訊息傳遞，如 HTTP Header 但並沒有明確規範格式，因此 FIG 定義了這部分的規範。</li>
</ul>
</li>
<li>其它還有尚未定義完成的還有 Cache、Security Reporting…</li>
</ul>
</li>
<li><p><a href="https://github.com/tjwei/awesome-tw-foss" target="_blank" rel="external">台灣 developers 建立的 free/open source project 蒐集列表</a></p>
<ul>
<li>這邊蒐集了很多台灣開發者們建立的開源專案，舉凡程式語言框架、網站服務、桌面應用程式、CLI程式、瀏覽器外掛等等。</li>
</ul>
</li>
<li><a href="https://github.com/mingderwang/development-note" title="Software Development Notes" target="_blank" rel="external">Software Development Notes</a><ul>
<li>系統開發工具列表，這邊蒐集了：系統維運、監控、開發、整合的一堆工具</li>
</ul>
</li>
</ul>
<h2 id="測試工具"><a href="#測試工具" class="headerlink" title="測試工具"></a>測試工具</h2><ul>
<li><p><strong><a href="http://jaceju.net/2015/10/27/web-testing-with-phpunit-mink/" target="_blank" rel="external">利用 PHPUnit 與 Mink 來做 Web 測試</a></strong></p>
<ul>
<li>如果你面對的是以前舊有的 PHP 程式，它改起來很痛苦，一堆不良的 PHP 程式習慣都阻礙你的修正；使得每次調整功能時，到底改得對不對，得要等到上線才知道。想要重寫一個新版本，但太多的實作細節你不清楚；也沒有最新的規格文件，讓你無法為新版本做出功能無誤的保證。</li>
<li>現在你唯一擁有的，就是已經在線上運作的程式邏輯；雖然它可能還有 bug ，但至少大多數的功能是通過使用者驗證的。那麼先為它買個保險吧！確保之後的修改不會影響到其他功能的正常運作；而最直接的方式，就是把目前程式邏輯所呈現的結果或是使用者的操作，寫成自動化 Web 測試。</li>
</ul>
</li>
<li><p><a href="https://github.com/minkphp/Mink" target="_blank" rel="external">PhantomJS</a></p>
<ul>
<li>PhatomJS 很適合拿來作一些網頁介面的自動化測試 (但由於是整合 WebKit，所以無法測試 IE 或者 FF 所呈現的情況)，此外網頁截圖這件事也是很吸引人的小功能。</li>
<li>參考網站：<a href="http://blog.darkthread.net/post-2013-08-29-phantomjs.aspx" target="_blank" rel="external">使用PhantomJs產生網頁擷圖</a></li>
<li>參考網站：<a href="http://blog.dm4.tw/blog/2014/05/11/my-first-experience-with-phantomjs/" target="_blank" rel="external">PhantomJS 初體驗</a></li>
<li>參考網站：<a href="http://syshen.cc/post/15989917365/%E7%94%A8-phantomjs-%E4%BD%9C-web-%E8%87%AA%E5%8B%95%E5%8C%96%E6%B8%AC%E8%A9%A6" target="_blank" rel="external">用 PhantomJS 作 Web 自動化測試</a></li>
</ul>
</li>
<li><p><a href="http://mink.behat.org/en/latest/" target="_blank" rel="external">Mink</a></p>
<ul>
<li>一個可以用PHP 5.3以上版本操作瀏覽器的測試工具</li>
<li><a href="http://www.open-open.com/lib/view/open1430832116976.html" target="_blank" rel="external">Web浏览器模拟测试：Mink</a></li>
</ul>
</li>
<li><p><a href="https://codegeekz.com/12-best-php-automated-test-frameworks/" target="_blank" rel="external">12 Best PHP Automated Test Frameworks</a></p>
<ol>
<li><a href="http://www.seleniumhq.org/" target="_blank" rel="external">Selenium</a> - 自動化的瀏覽器呈現頁面測試</li>
<li><a href="https://phpunit.de/" target="_blank" rel="external">PHPUnit</a> - PHP單元測試框架</li>
<li><a href="http://docs.behat.org/en/v2.5/" target="_blank" rel="external">Behat</a> - 知名的 BDD (behavior driven development) 測試框架，目標是，定義好規格之後，直接用定義的規格作測試，是一個專案經理、客戶與開發者間，很方面的一個溝通及定規格工具。</li>
<li><a href="https://github.com/crysalead/kahlan" target="_blank" rel="external">Kahlan</a> - 全功能的單元測試及BDD工具測試框架工具。</li>
<li><a href="https://github.com/atoum/atoum" target="_blank" rel="external">Atoum</a> - 單元測試工具</li>
<li><a href="http://codeception.com/" target="_blank" rel="external">Codeception</a> - 全功能的測試工具、框架，方便做各種測試</li>
<li><a href="http://simpletest.org/" target="_blank" rel="external">SimpleTest</a> - 簡單而容易使用的小測試框架，可以用在 TDD 測試先行開發及一般的單元測試。</li>
<li><a href="http://datasift.github.io/storyplayer/" target="_blank" rel="external">Storyplayer</a> - 一個全端的測試框架。</li>
<li><a href="http://peridot-php.github.io/" target="_blank" rel="external">Peridot</a> - 一個輕量的測試框架，是一個事件驅動的框架。</li>
<li><a href="https://github.com/danielstjules/pho" target="_blank" rel="external">PHO</a> - 一個BDD測試框架。</li>
<li><a href="https://github.com/padraic/mockery" target="_blank" rel="external">Mockery</a> - 在 PHP Unit Test 裡常常使用的模擬元件工具。</li>
<li><a href="http://www.phpspec.net/en/latest/" target="_blank" rel="external">PHP Specs</a> - 一個用定義規格，來進行程式測試的 BDD 框架。</li>
</ol>
</li>
</ul>
<h2 id="PHP-Library-or-工具"><a href="#PHP-Library-or-工具" class="headerlink" title="PHP Library or 工具"></a>PHP Library or 工具</h2><ul>
<li><a href="http://www.phpclasses.org/package/9423-PHP-Convert-PDF-to-HTML-using-Poppler.html" title="PHP-Convert-PDF-to-HTML-using-Poppler" target="_blank" rel="external">使用PHP進行 PDF to HTML轉換</a><ul>
<li>在 PHP 將 PDF 檔案轉為 HTML 檔</li>
<li>底層使用<a href="http://poppler.freedesktop.org/" title="Poppler" target="_blank" rel="external">Poppler</a></li>
<li>PHP 5.3+</li>
</ul>
</li>
<li><a href="http://carbon.nesbot.com/" target="_blank" rel="external">Carbon</a><ul>
<li>在處理程式上，處理「時間」非常好用的套件</li>
<li>PHP 5.4+</li>
</ul>
</li>
<li><a href="http://www.phpclasses.org/package/9431-PHP-Generate-UUID-codes-in-either-version-3-4-or-5.html#information" title="PHP UUID Generation class" target="_blank" rel="external">PHP UUID Generation class</a></li>
<li><a href="https://github.com/ziadoz/awesome-php/" target="_blank" rel="external">Awesome PHP</a><ul>
<li>群眾一起整理出來的PHP的各種結構或工具的懶人包，需要什麼功能都可以上去看看</li>
</ul>
</li>
<li><a href="http://php.net/manual/en/types.comparisons.php" target="_blank" rel="external">PHP type comparison tables</a><ul>
<li>寫PHP的時候常常會不小心因為型別的比較細節而造成一些誤判，在官方整理了PHP各種型別比較的結果，忘記了可以來這邊查詢。</li>
</ul>
</li>
<li><a href="http://designpatternsphp.readthedocs.org/en/latest/" target="_blank" rel="external">PHP Design Patterns 1.0</a> from  <a href="https://www.facebook.com/jace.ju?fref=nf" target="_blank" rel="external">JaceJu</a><ul>
<li>這本電子書介紹了各種 Design Patterns 如何在 PHP 上的實作，也提到各種實務上的例子。</li>
<li>但還是要記住： Design Patterns 重意不重形，也不該特意使用。要先理解待解決的問題是什麼，分析出當下能滿足的設計；而不是一開始就思考怎麼用模式去解決問題，並拘泥於模式的實作方式。</li>
</ul>
</li>
<li><p><a href="http://2015.phpconf.tw/" title="PHPConf 2015" target="_blank" rel="external">Taiwan PHP Conf 2015 議程</a></p>
<ul>
<li>PHP Conf 的各個議程內容及相關投影片</li>
<li>共筆筆記 <a href="https://laraveltw.hackpad.com/PHP-Conf-2015--Qczl9WtA4Ip" title="PHP Conf 2015 共筆筆記" target="_blank" rel="external">PHP Conf 2015 共筆筆記</a></li>
<li><a href="https://github.com/PHPConf-TW/website-2015/tree/master/download" target="_blank" rel="external">投影片列表</a></li>
<li>值得一看的投影片：<ul>
<li><a href="https://github.com/PHPConf-TW/website-2015/raw/master/download/%E5%87%8C%E8%8B%A5%E8%99%9B%20-%20%E7%95%B6%E5%B0%88%E6%A1%88%E6%BC%B8%E8%B6%95%EF%BC%8C%E7%95%B6%E9%81%B7%E7%A7%BB%E4%B9%9F%E4%B8%8D%E5%86%8D%E9%82%A3%E9%BA%BC%E9%9B%A3.pdf" target="_blank" rel="external">凌若虛 - 當專案漸趕，當遷移也不再那麼難 (Ship Your Projects with Docker EcoSystem)</a></li>
<li><a href="https://github.com/PHPConf-TW/website-2015/raw/master/download/%E9%99%B3%E6%AD%A3%E7%91%8B-DevOps%E5%BB%BA%E9%80%A0%E9%96%8B%E7%99%BC%E7%B6%AD%E9%81%8B%E7%9A%84%E8%B7%A8%E7%95%8C%E4%B9%8B%E6%A9%8B.pdf" target="_blank" rel="external">陳正瑋-DevOps建造開發維運的跨界之橋</a></li>
<li><a href="https://github.com/PHPConf-TW/website-2015/raw/master/download/%E8%8C%83%E8%81%96%E4%BD%91%20-%20%E8%B7%9F%E8%91%97%20Laravel%205.1%20%E4%B8%80%E8%B5%B7%E6%88%90%E7%82%BA%E6%9B%B4%E5%A5%BD%E7%9A%84%20PHP%20%E9%96%8B%E7%99%BC%E8%80%85.pdf" target="_blank" rel="external">范聖佑 - 跟著 Laravel 5.1 一起成為更好的 PHP 開發者</a></li>
<li><a href="https://github.com/PHPConf-TW/website-2015/raw/master/download/%E6%9B%BE%E7%BE%A9%E5%B3%B0%20-%20Enterprise%20Architecture%20Case%20in%20PHP.pdf" target="_blank" rel="external">曾義峰 - Enterprise Architecture Case in PHP</a></li>
</ul>
</li>
</ul>
</li>
<li><p><a href="http://learninglaravel.net/multiple-authentication-in-laravel-51/link" target="_blank" rel="external">Multiple Authentication in Laravel 5.1</a></p>
<ul>
<li>利用 Sarav/Multiauth 這個套件讓你的 Laravel 應用程式支援多重身份，這樣一來前台和後台就可以用不同的身份登入了。</li>
</ul>
</li>
</ul>
<h2 id="前端網頁開發工具"><a href="#前端網頁開發工具" class="headerlink" title="前端網頁開發工具"></a>前端網頁開發工具</h2><ul>
<li><a href="https://www.gitbook.com/book/frontendmasters/front-end-handbook/details" target="_blank" rel="external">Front-end Handbook</a><ul>
<li>記錄許多前端開發工具及相關教學</li>
</ul>
</li>
<li><a href="https://github.com/codylindley/frontend-tools" target="_blank" rel="external">Front-end Tools</a><ul>
<li>前端開發工具整理</li>
</ul>
</li>
<li><a href="http://www.codeply.com/" target="_blank" rel="external">CodePly</a><ul>
<li>實驗各前端框架 RWD 的好地方，也可以當成簡易的前端頁面開發工具使用。</li>
</ul>
</li>
<li><a href="https://www.flickr.com/photos/girliemac/sets/72157628409467125/" target="_blank" rel="external">HTTP Status Cat</a><ul>
<li>用貓來比喻 HTTP協定的各種狀態 LoL</li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[關於我]]></title>
      <url>http://usedfire.net/about/index.html</url>
      <content type="html"><![CDATA[<p>大家好，我是墨嗓。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[藏書閣]]></title>
      <url>http://usedfire.net/reading/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
